name: Continuous Integration
on: [ push, pull_request ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        node-version: [ "14", "16", "18" ]

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: 'npm'

      - name: Install circom
        run: npm install -g circom@latest

      - name: Install dependencies
        run: npm ci

      # Install hardhat dependencies for smart contracts tests
      - name: Install hardhat dependencies
        run: npm install hardhat @nomiclabs/hardhat-ethers @nomiclabs/hardhat-waffle

      - name: Run tests
        run: npm run test
  
  testv12:
    name: Testv12
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        node-version: [ "12" ]

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: 'npm'

      - name: Install circom
        run: npm install -g circom@latest

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run testv12

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [test]
    permissions:
      contents: write
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Semantic release
        run: npm run semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
