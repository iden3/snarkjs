var snarkjs=function(exports){"use strict";const hexLen=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];function fromString$3(t,e){return e&&10!=e?16==e?"0x"==t.slice(0,2)?BigInt(t):BigInt("0x"+t):void 0:BigInt(t)}const e$2=fromString$3;function fromArray$3(t,e){let i=BigInt(0);e=BigInt(e);for(let a=0;a<t.length;a++)i=i*e+BigInt(t[a]);return i}function bitLength$2(t){const e=t.toString(16);return 4*(e.length-1)+hexLen[parseInt(e[0],16)]}function isNegative$2(t){return BigInt(t)<BigInt(0)}function isZero$2(t){return!t}function shiftLeft$2(t,e){return BigInt(t)<<BigInt(e)}function shiftRight$2(t,e){return BigInt(t)>>BigInt(e)}const shl$2=shiftLeft$2,shr$2=shiftRight$2;function isOdd$2(t){return(BigInt(t)&BigInt(1))==BigInt(1)}function naf$2(t){let e=BigInt(t);const i=[];for(;e;){if(e&BigInt(1)){const t=2-Number(e%BigInt(4));i.push(t),e-=BigInt(t)}else i.push(0);e>>=BigInt(1)}return i}function bits$2(t){let e=BigInt(t);const i=[];for(;e;)e&BigInt(1)?i.push(1):i.push(0),e>>=BigInt(1);return i}function toNumber$3(t){if(t>BigInt(Number.MAX_SAFE_INTEGER))throw new Error("Number too big");return Number(t)}function toArray$2(t,e){const i=[];let a=BigInt(t);for(e=BigInt(e);a;)i.unshift(Number(a%e)),a/=e;return i}function add$2(t,e){return BigInt(t)+BigInt(e)}function sub$2(t,e){return BigInt(t)-BigInt(e)}function neg$2(t){return-BigInt(t)}function mul$2(t,e){return BigInt(t)*BigInt(e)}function square$2(t){return BigInt(t)*BigInt(t)}function pow$2(t,e){return BigInt(t)**BigInt(e)}function exp$3(t,e){return BigInt(t)**BigInt(e)}function abs$2(t){return BigInt(t)>=0?BigInt(t):-BigInt(t)}function div$2(t,e){return BigInt(t)/BigInt(e)}function mod$2(t,e){return BigInt(t)%BigInt(e)}function eq$2(t,e){return BigInt(t)==BigInt(e)}function neq$2(t,e){return BigInt(t)!=BigInt(e)}function lt$2(t,e){return BigInt(t)<BigInt(e)}function gt$2(t,e){return BigInt(t)>BigInt(e)}function leq$2(t,e){return BigInt(t)<=BigInt(e)}function geq$2(t,e){return BigInt(t)>=BigInt(e)}function band$2(t,e){return BigInt(t)&BigInt(e)}function bor$2(t,e){return BigInt(t)|BigInt(e)}function bxor$2(t,e){return BigInt(t)^BigInt(e)}function land$2(t,e){return BigInt(t)&&BigInt(e)}function lor$2(t,e){return BigInt(t)||BigInt(e)}function lnot$2(t){return!BigInt(t)}var Scalar_native=Object.freeze({__proto__:null,fromString:fromString$3,e:e$2,fromArray:fromArray$3,bitLength:bitLength$2,isNegative:isNegative$2,isZero:isZero$2,shiftLeft:shiftLeft$2,shiftRight:shiftRight$2,shl:shl$2,shr:shr$2,isOdd:isOdd$2,naf:naf$2,bits:bits$2,toNumber:toNumber$3,toArray:toArray$2,add:add$2,sub:sub$2,neg:neg$2,mul:mul$2,square:square$2,pow:pow$2,exp:exp$3,abs:abs$2,div:div$2,mod:mod$2,eq:eq$2,neq:neq$2,lt:lt$2,gt:gt$2,leq:leq$2,geq:geq$2,band:band$2,bor:bor$2,bxor:bxor$2,land:land$2,lor:lor$2,lnot:lnot$2}),commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},BigInteger={exports:{}};!function(t){var e=function(t){var i=1e7,a=9007199254740992,o=g(a),n="0123456789abcdefghijklmnopqrstuvwxyz",r="function"==typeof BigInt;function s(t,e,i,a){return void 0===t?s[0]:void 0!==e&&(10!=+e||i)?N(t,e,i,a):W(t)}function l(t,e){this.value=t,this.sign=e,this.isSmall=!1}function c(t){this.value=t,this.sign=t<0,this.isSmall=!0}function d(t){this.value=t}function u(t){return-a<t&&t<a}function g(t){return t<1e7?[t]:t<1e14?[t%1e7,Math.floor(t/1e7)]:[t%1e7,Math.floor(t/1e7)%1e7,Math.floor(t/1e14)]}function f(t){h(t);var e=t.length;if(e<4&&x(t,o)<0)switch(e){case 0:return 0;case 1:return t[0];case 2:return t[0]+t[1]*i;default:return t[0]+(t[1]+t[2]*i)*i}return t}function h(t){for(var e=t.length;0===t[--e];);t.length=e+1}function _(t){for(var e=new Array(t),i=-1;++i<t;)e[i]=0;return e}function p(t){return t>0?Math.floor(t):Math.ceil(t)}function m(t,e){var a,o,n=t.length,r=e.length,s=new Array(n),l=0,c=i;for(o=0;o<r;o++)l=(a=t[o]+e[o]+l)>=c?1:0,s[o]=a-l*c;for(;o<n;)l=(a=t[o]+l)===c?1:0,s[o++]=a-l*c;return l>0&&s.push(l),s}function b(t,e){return t.length>=e.length?m(t,e):m(e,t)}function L(t,e){var a,o,n=t.length,r=new Array(n),s=i;for(o=0;o<n;o++)a=t[o]-s+e,e=Math.floor(a/s),r[o]=a-e*s,e+=1;for(;e>0;)r[o++]=e%s,e=Math.floor(e/s);return r}function w(t,e){var a,o,n=t.length,r=e.length,s=new Array(n),l=0,c=i;for(a=0;a<r;a++)(o=t[a]-l-e[a])<0?(o+=c,l=1):l=0,s[a]=o;for(a=r;a<n;a++){if(!((o=t[a]-l)<0)){s[a++]=o;break}o+=c,s[a]=o}for(;a<n;a++)s[a]=t[a];return h(s),s}function y(t,e,a){var o,n,r=t.length,s=new Array(r),d=-e,u=i;for(o=0;o<r;o++)n=t[o]+d,d=Math.floor(n/u),n%=u,s[o]=n<0?n+u:n;return"number"==typeof(s=f(s))?(a&&(s=-s),new c(s)):new l(s,a)}function A(t,e){var a,o,n,r,s=t.length,l=e.length,c=_(s+l),d=i;for(n=0;n<s;++n){r=t[n];for(var u=0;u<l;++u)a=r*e[u]+c[n+u],o=Math.floor(a/d),c[n+u]=a-o*d,c[n+u+1]+=o}return h(c),c}function I(t,e){var a,o,n=t.length,r=new Array(n),s=i,l=0;for(o=0;o<n;o++)a=t[o]*e+l,l=Math.floor(a/s),r[o]=a-l*s;for(;l>0;)r[o++]=l%s,l=Math.floor(l/s);return r}function C(t,e){for(var i=[];e-- >0;)i.push(0);return i.concat(t)}function B(t,e){var i=Math.max(t.length,e.length);if(i<=30)return A(t,e);i=Math.ceil(i/2);var a=t.slice(i),o=t.slice(0,i),n=e.slice(i),r=e.slice(0,i),s=B(o,r),l=B(a,n),c=B(b(o,a),b(r,n)),d=b(b(s,C(w(w(c,s),l),i)),C(l,2*i));return h(d),d}function E(t,e,a){return new l(t<i?I(e,t):A(e,g(t)),a)}function F(t){var e,a,o,n,r=t.length,s=_(r+r),l=i;for(o=0;o<r;o++){a=0-(n=t[o])*n;for(var c=o;c<r;c++)e=n*t[c]*2+s[o+c]+a,a=Math.floor(e/l),s[o+c]=e-a*l;s[o+r]=a}return h(s),s}function S(t,e){var i,a,o,n,r=t.length,s=_(r);for(o=0,i=r-1;i>=0;--i)o=(n=1e7*o+t[i])-(a=p(n/e))*e,s[i]=0|a;return[s,0|o]}function v(t,e){var a,o=W(e);if(r)return[new d(t.value/o.value),new d(t.value%o.value)];var n,u=t.value,m=o.value;if(0===m)throw new Error("Cannot divide by zero");if(t.isSmall)return o.isSmall?[new c(p(u/m)),new c(u%m)]:[s[0],t];if(o.isSmall){if(1===m)return[t,s[0]];if(-1==m)return[t.negate(),s[0]];var b=Math.abs(m);if(b<i){n=f((a=S(u,b))[0]);var L=a[1];return t.sign&&(L=-L),"number"==typeof n?(t.sign!==o.sign&&(n=-n),[new c(n),new c(L)]):[new l(n,t.sign!==o.sign),new c(L)]}m=g(b)}var y=x(u,m);if(-1===y)return[s[0],t];if(0===y)return[s[t.sign===o.sign?1:-1],s[0]];a=u.length+m.length<=200?function(t,e){var a,o,n,r,s,l,c,d=t.length,u=e.length,g=i,h=_(e.length),p=e[u-1],m=Math.ceil(g/(2*p)),b=I(t,m),L=I(e,m);for(b.length<=d&&b.push(0),L.push(0),p=L[u-1],o=d-u;o>=0;o--){for(a=g-1,b[o+u]!==p&&(a=Math.floor((b[o+u]*g+b[o+u-1])/p)),n=0,r=0,l=L.length,s=0;s<l;s++)n+=a*L[s],c=Math.floor(n/g),r+=b[o+s]-(n-c*g),n=c,r<0?(b[o+s]=r+g,r=-1):(b[o+s]=r,r=0);for(;0!==r;){for(a-=1,n=0,s=0;s<l;s++)(n+=b[o+s]-g+L[s])<0?(b[o+s]=n+g,n=0):(b[o+s]=n,n=1);r+=n}h[o]=a}return b=S(b,m)[0],[f(h),f(b)]}(u,m):function(t,e){for(var a,o,n,r,s,l=t.length,c=e.length,d=[],u=[],g=i;l;)if(u.unshift(t[--l]),h(u),x(u,e)<0)d.push(0);else{n=u[(o=u.length)-1]*g+u[o-2],r=e[c-1]*g+e[c-2],o>c&&(n=(n+1)*g),a=Math.ceil(n/r);do{if(x(s=I(e,a),u)<=0)break;a--}while(a);d.push(a),u=w(u,s)}return d.reverse(),[f(d),f(u)]}(u,m),n=a[0];var A=t.sign!==o.sign,C=a[1],B=t.sign;return"number"==typeof n?(A&&(n=-n),n=new c(n)):n=new l(n,A),"number"==typeof C?(B&&(C=-C),C=new c(C)):C=new l(C,B),[n,C]}function x(t,e){if(t.length!==e.length)return t.length>e.length?1:-1;for(var i=t.length-1;i>=0;i--)if(t[i]!==e[i])return t[i]>e[i]?1:-1;return 0}function $(t){var e=t.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function P(t,i){for(var a,o,n,r=t.prev(),s=r,l=0;s.isEven();)s=s.divide(2),l++;t:for(o=0;o<i.length;o++)if(!t.lesser(i[o])&&!(n=e(i[o]).modPow(s,t)).isUnit()&&!n.equals(r)){for(a=l-1;0!=a;a--){if((n=n.square().mod(t)).isUnit())return!1;if(n.equals(r))continue t}return!1}return!0}l.prototype=Object.create(s.prototype),c.prototype=Object.create(s.prototype),d.prototype=Object.create(s.prototype),l.prototype.add=function(t){var e=W(t);if(this.sign!==e.sign)return this.subtract(e.negate());var i=this.value,a=e.value;return e.isSmall?new l(L(i,Math.abs(a)),this.sign):new l(b(i,a),this.sign)},l.prototype.plus=l.prototype.add,c.prototype.add=function(t){var e=W(t),i=this.value;if(i<0!==e.sign)return this.subtract(e.negate());var a=e.value;if(e.isSmall){if(u(i+a))return new c(i+a);a=g(Math.abs(a))}return new l(L(a,Math.abs(i)),i<0)},c.prototype.plus=c.prototype.add,d.prototype.add=function(t){return new d(this.value+W(t).value)},d.prototype.plus=d.prototype.add,l.prototype.subtract=function(t){var e=W(t);if(this.sign!==e.sign)return this.add(e.negate());var i=this.value,a=e.value;return e.isSmall?y(i,Math.abs(a),this.sign):function(t,e,i){var a;return x(t,e)>=0?a=w(t,e):(a=w(e,t),i=!i),"number"==typeof(a=f(a))?(i&&(a=-a),new c(a)):new l(a,i)}(i,a,this.sign)},l.prototype.minus=l.prototype.subtract,c.prototype.subtract=function(t){var e=W(t),i=this.value;if(i<0!==e.sign)return this.add(e.negate());var a=e.value;return e.isSmall?new c(i-a):y(a,Math.abs(i),i>=0)},c.prototype.minus=c.prototype.subtract,d.prototype.subtract=function(t){return new d(this.value-W(t).value)},d.prototype.minus=d.prototype.subtract,l.prototype.negate=function(){return new l(this.value,!this.sign)},c.prototype.negate=function(){var t=this.sign,e=new c(-this.value);return e.sign=!t,e},d.prototype.negate=function(){return new d(-this.value)},l.prototype.abs=function(){return new l(this.value,!1)},c.prototype.abs=function(){return new c(Math.abs(this.value))},d.prototype.abs=function(){return new d(this.value>=0?this.value:-this.value)},l.prototype.multiply=function(t){var e,a,o,n=W(t),r=this.value,c=n.value,d=this.sign!==n.sign;if(n.isSmall){if(0===c)return s[0];if(1===c)return this;if(-1===c)return this.negate();if((e=Math.abs(c))<i)return new l(I(r,e),d);c=g(e)}return a=r.length,o=c.length,new l(-.012*a-.012*o+15e-6*a*o>0?B(r,c):A(r,c),d)},l.prototype.times=l.prototype.multiply,c.prototype._multiplyBySmall=function(t){return u(t.value*this.value)?new c(t.value*this.value):E(Math.abs(t.value),g(Math.abs(this.value)),this.sign!==t.sign)},l.prototype._multiplyBySmall=function(t){return 0===t.value?s[0]:1===t.value?this:-1===t.value?this.negate():E(Math.abs(t.value),this.value,this.sign!==t.sign)},c.prototype.multiply=function(t){return W(t)._multiplyBySmall(this)},c.prototype.times=c.prototype.multiply,d.prototype.multiply=function(t){return new d(this.value*W(t).value)},d.prototype.times=d.prototype.multiply,l.prototype.square=function(){return new l(F(this.value),!1)},c.prototype.square=function(){var t=this.value*this.value;return u(t)?new c(t):new l(F(g(Math.abs(this.value))),!1)},d.prototype.square=function(t){return new d(this.value*this.value)},l.prototype.divmod=function(t){var e=v(this,t);return{quotient:e[0],remainder:e[1]}},d.prototype.divmod=c.prototype.divmod=l.prototype.divmod,l.prototype.divide=function(t){return v(this,t)[0]},d.prototype.over=d.prototype.divide=function(t){return new d(this.value/W(t).value)},c.prototype.over=c.prototype.divide=l.prototype.over=l.prototype.divide,l.prototype.mod=function(t){return v(this,t)[1]},d.prototype.mod=d.prototype.remainder=function(t){return new d(this.value%W(t).value)},c.prototype.remainder=c.prototype.mod=l.prototype.remainder=l.prototype.mod,l.prototype.pow=function(t){var e,i,a,o=W(t),n=this.value,r=o.value;if(0===r)return s[1];if(0===n)return s[0];if(1===n)return s[1];if(-1===n)return o.isEven()?s[1]:s[-1];if(o.sign)return s[0];if(!o.isSmall)throw new Error("The exponent "+o.toString()+" is too large.");if(this.isSmall&&u(e=Math.pow(n,r)))return new c(p(e));for(i=this,a=s[1];!0&r&&(a=a.times(i),--r),0!==r;)r/=2,i=i.square();return a},c.prototype.pow=l.prototype.pow,d.prototype.pow=function(t){var e=W(t),i=this.value,a=e.value,o=BigInt(0),n=BigInt(1),r=BigInt(2);if(a===o)return s[1];if(i===o)return s[0];if(i===n)return s[1];if(i===BigInt(-1))return e.isEven()?s[1]:s[-1];if(e.isNegative())return new d(o);for(var l=this,c=s[1];(a&n)===n&&(c=c.times(l),--a),a!==o;)a/=r,l=l.square();return c},l.prototype.modPow=function(t,e){if(t=W(t),(e=W(e)).isZero())throw new Error("Cannot take modPow with modulus 0");var i=s[1],a=this.mod(e);for(t.isNegative()&&(t=t.multiply(s[-1]),a=a.modInv(e));t.isPositive();){if(a.isZero())return s[0];t.isOdd()&&(i=i.multiply(a).mod(e)),t=t.divide(2),a=a.square().mod(e)}return i},d.prototype.modPow=c.prototype.modPow=l.prototype.modPow,l.prototype.compareAbs=function(t){var e=W(t),i=this.value,a=e.value;return e.isSmall?1:x(i,a)},c.prototype.compareAbs=function(t){var e=W(t),i=Math.abs(this.value),a=e.value;return e.isSmall?i===(a=Math.abs(a))?0:i>a?1:-1:-1},d.prototype.compareAbs=function(t){var e=this.value,i=W(t).value;return(e=e>=0?e:-e)===(i=i>=0?i:-i)?0:e>i?1:-1},l.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var e=W(t),i=this.value,a=e.value;return this.sign!==e.sign?e.sign?1:-1:e.isSmall?this.sign?-1:1:x(i,a)*(this.sign?-1:1)},l.prototype.compareTo=l.prototype.compare,c.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var e=W(t),i=this.value,a=e.value;return e.isSmall?i==a?0:i>a?1:-1:i<0!==e.sign?i<0?-1:1:i<0?1:-1},c.prototype.compareTo=c.prototype.compare,d.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var e=this.value,i=W(t).value;return e===i?0:e>i?1:-1},d.prototype.compareTo=d.prototype.compare,l.prototype.equals=function(t){return 0===this.compare(t)},d.prototype.eq=d.prototype.equals=c.prototype.eq=c.prototype.equals=l.prototype.eq=l.prototype.equals,l.prototype.notEquals=function(t){return 0!==this.compare(t)},d.prototype.neq=d.prototype.notEquals=c.prototype.neq=c.prototype.notEquals=l.prototype.neq=l.prototype.notEquals,l.prototype.greater=function(t){return this.compare(t)>0},d.prototype.gt=d.prototype.greater=c.prototype.gt=c.prototype.greater=l.prototype.gt=l.prototype.greater,l.prototype.lesser=function(t){return this.compare(t)<0},d.prototype.lt=d.prototype.lesser=c.prototype.lt=c.prototype.lesser=l.prototype.lt=l.prototype.lesser,l.prototype.greaterOrEquals=function(t){return this.compare(t)>=0},d.prototype.geq=d.prototype.greaterOrEquals=c.prototype.geq=c.prototype.greaterOrEquals=l.prototype.geq=l.prototype.greaterOrEquals,l.prototype.lesserOrEquals=function(t){return this.compare(t)<=0},d.prototype.leq=d.prototype.lesserOrEquals=c.prototype.leq=c.prototype.lesserOrEquals=l.prototype.leq=l.prototype.lesserOrEquals,l.prototype.isEven=function(){return 0==(1&this.value[0])},c.prototype.isEven=function(){return 0==(1&this.value)},d.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},l.prototype.isOdd=function(){return 1==(1&this.value[0])},c.prototype.isOdd=function(){return 1==(1&this.value)},d.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},l.prototype.isPositive=function(){return!this.sign},c.prototype.isPositive=function(){return this.value>0},d.prototype.isPositive=c.prototype.isPositive,l.prototype.isNegative=function(){return this.sign},c.prototype.isNegative=function(){return this.value<0},d.prototype.isNegative=c.prototype.isNegative,l.prototype.isUnit=function(){return!1},c.prototype.isUnit=function(){return 1===Math.abs(this.value)},d.prototype.isUnit=function(){return this.abs().value===BigInt(1)},l.prototype.isZero=function(){return!1},c.prototype.isZero=function(){return 0===this.value},d.prototype.isZero=function(){return this.value===BigInt(0)},l.prototype.isDivisibleBy=function(t){var e=W(t);return!e.isZero()&&(!!e.isUnit()||(0===e.compareAbs(2)?this.isEven():this.mod(e).isZero()))},d.prototype.isDivisibleBy=c.prototype.isDivisibleBy=l.prototype.isDivisibleBy,l.prototype.isPrime=function(i){var a=$(this);if(a!==t)return a;var o=this.abs(),n=o.bitLength();if(n<=64)return P(o,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var r=Math.log(2)*n.toJSNumber(),s=Math.ceil(!0===i?2*Math.pow(r,2):r),l=[],c=0;c<s;c++)l.push(e(c+2));return P(o,l)},d.prototype.isPrime=c.prototype.isPrime=l.prototype.isPrime,l.prototype.isProbablePrime=function(i,a){var o=$(this);if(o!==t)return o;for(var n=this.abs(),r=i===t?5:i,s=[],l=0;l<r;l++)s.push(e.randBetween(2,n.minus(2),a));return P(n,s)},d.prototype.isProbablePrime=c.prototype.isProbablePrime=l.prototype.isProbablePrime,l.prototype.modInv=function(t){for(var i,a,o,n=e.zero,r=e.one,s=W(t),l=this.abs();!l.isZero();)i=s.divide(l),a=n,o=s,n=r,s=l,r=a.subtract(i.multiply(r)),l=o.subtract(i.multiply(l));if(!s.isUnit())throw new Error(this.toString()+" and "+t.toString()+" are not co-prime");return-1===n.compare(0)&&(n=n.add(t)),this.isNegative()?n.negate():n},d.prototype.modInv=c.prototype.modInv=l.prototype.modInv,l.prototype.next=function(){var t=this.value;return this.sign?y(t,1,this.sign):new l(L(t,1),this.sign)},c.prototype.next=function(){var t=this.value;return t+1<a?new c(t+1):new l(o,!1)},d.prototype.next=function(){return new d(this.value+BigInt(1))},l.prototype.prev=function(){var t=this.value;return this.sign?new l(L(t,1),!0):y(t,1,this.sign)},c.prototype.prev=function(){var t=this.value;return t-1>-a?new c(t-1):new l(o,!0)},d.prototype.prev=function(){return new d(this.value-BigInt(1))};for(var G=[1];2*G[G.length-1]<=i;)G.push(2*G[G.length-1]);var R=G.length,O=G[R-1];function U(t){return Math.abs(t)<=i}function q(t,i,a){i=W(i);for(var o=t.isNegative(),n=i.isNegative(),r=o?t.not():t,s=n?i.not():i,l=0,c=0,d=null,u=null,g=[];!r.isZero()||!s.isZero();)l=(d=v(r,O))[1].toJSNumber(),o&&(l=O-1-l),c=(u=v(s,O))[1].toJSNumber(),n&&(c=O-1-c),r=d[0],s=u[0],g.push(a(l,c));for(var f=0!==a(o?1:0,n?1:0)?e(-1):e(0),h=g.length-1;h>=0;h-=1)f=f.multiply(O).add(e(g[h]));return f}l.prototype.shiftLeft=function(t){var e=W(t).toJSNumber();if(!U(e))throw new Error(String(e)+" is too large for shifting.");if(e<0)return this.shiftRight(-e);var i=this;if(i.isZero())return i;for(;e>=R;)i=i.multiply(O),e-=R-1;return i.multiply(G[e])},d.prototype.shiftLeft=c.prototype.shiftLeft=l.prototype.shiftLeft,l.prototype.shiftRight=function(t){var e,i=W(t).toJSNumber();if(!U(i))throw new Error(String(i)+" is too large for shifting.");if(i<0)return this.shiftLeft(-i);for(var a=this;i>=R;){if(a.isZero()||a.isNegative()&&a.isUnit())return a;a=(e=v(a,O))[1].isNegative()?e[0].prev():e[0],i-=R-1}return(e=v(a,G[i]))[1].isNegative()?e[0].prev():e[0]},d.prototype.shiftRight=c.prototype.shiftRight=l.prototype.shiftRight,l.prototype.not=function(){return this.negate().prev()},d.prototype.not=c.prototype.not=l.prototype.not,l.prototype.and=function(t){return q(this,t,(function(t,e){return t&e}))},d.prototype.and=c.prototype.and=l.prototype.and,l.prototype.or=function(t){return q(this,t,(function(t,e){return t|e}))},d.prototype.or=c.prototype.or=l.prototype.or,l.prototype.xor=function(t){return q(this,t,(function(t,e){return t^e}))},d.prototype.xor=c.prototype.xor=l.prototype.xor;var z=1<<30;function M(t){var e=t.value,a="number"==typeof e?e|z:"bigint"==typeof e?e|BigInt(z):e[0]+e[1]*i|1073758208;return a&-a}function T(t,i){if(i.compareTo(t)<=0){var a=T(t,i.square(i)),o=a.p,n=a.e,r=o.multiply(i);return r.compareTo(t)<=0?{p:r,e:2*n+1}:{p:o,e:2*n}}return{p:e(1),e:0}}function Q(t,e){return t=W(t),e=W(e),t.greater(e)?t:e}function k(t,e){return t=W(t),e=W(e),t.lesser(e)?t:e}function H(t,e){if(t=W(t).abs(),e=W(e).abs(),t.equals(e))return t;if(t.isZero())return e;if(e.isZero())return t;for(var i,a,o=s[1];t.isEven()&&e.isEven();)i=k(M(t),M(e)),t=t.divide(i),e=e.divide(i),o=o.multiply(i);for(;t.isEven();)t=t.divide(M(t));do{for(;e.isEven();)e=e.divide(M(e));t.greater(e)&&(a=e,e=t,t=a),e=e.subtract(t)}while(!e.isZero());return o.isUnit()?t:t.multiply(o)}l.prototype.bitLength=function(){var t=this;return t.compareTo(e(0))<0&&(t=t.negate().subtract(e(1))),0===t.compareTo(e(0))?e(0):e(T(t,e(2)).e).add(e(1))},d.prototype.bitLength=c.prototype.bitLength=l.prototype.bitLength;var N=function(t,e,i,a){i=i||n,t=String(t),a||(t=t.toLowerCase(),i=i.toLowerCase());var o,r=t.length,s=Math.abs(e),l={};for(o=0;o<i.length;o++)l[i[o]]=o;for(o=0;o<r;o++){if("-"!==(u=t[o])&&(u in l&&l[u]>=s)){if("1"===u&&1===s)continue;throw new Error(u+" is not a valid digit in base "+e+".")}}e=W(e);var c=[],d="-"===t[0];for(o=d?1:0;o<t.length;o++){var u;if((u=t[o])in l)c.push(W(l[u]));else{if("<"!==u)throw new Error(u+" is not a valid character");var g=o;do{o++}while(">"!==t[o]&&o<t.length);c.push(W(t.slice(g+1,o)))}}return D(c,e,d)};function D(t,e,i){var a,o=s[0],n=s[1];for(a=t.length-1;a>=0;a--)o=o.add(t[a].times(n)),n=n.times(e);return i?o.negate():o}function K(t,i){if((i=e(i)).isZero()){if(t.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(i.equals(-1)){if(t.isZero())return{value:[0],isNegative:!1};if(t.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-t.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var a=Array.apply(null,Array(t.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return a.unshift([1]),{value:[].concat.apply([],a),isNegative:!1}}var o=!1;if(t.isNegative()&&i.isPositive()&&(o=!0,t=t.abs()),i.isUnit())return t.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(t.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:o};for(var n,r=[],s=t;s.isNegative()||s.compareAbs(i)>=0;){n=s.divmod(i),s=n.quotient;var l=n.remainder;l.isNegative()&&(l=i.minus(l).abs(),s=s.next()),r.push(l.toJSNumber())}return r.push(s.toJSNumber()),{value:r.reverse(),isNegative:o}}function V(t,e,i){var a=K(t,e);return(a.isNegative?"-":"")+a.value.map((function(t){return function(t,e){return t<(e=e||n).length?e[t]:"<"+t+">"}(t,i)})).join("")}function j(t){if(u(+t)){var e=+t;if(e===p(e))return r?new d(BigInt(e)):new c(e);throw new Error("Invalid integer: "+t)}var i="-"===t[0];i&&(t=t.slice(1));var a=t.split(/e/i);if(a.length>2)throw new Error("Invalid integer: "+a.join("e"));if(2===a.length){var o=a[1];if("+"===o[0]&&(o=o.slice(1)),(o=+o)!==p(o)||!u(o))throw new Error("Invalid integer: "+o+" is not a valid exponent.");var n=a[0],s=n.indexOf(".");if(s>=0&&(o-=n.length-s-1,n=n.slice(0,s)+n.slice(s+1)),o<0)throw new Error("Cannot include negative exponent part for integers");t=n+=new Array(o+1).join("0")}if(!/^([0-9][0-9]*)$/.test(t))throw new Error("Invalid integer: "+t);if(r)return new d(BigInt(i?"-"+t:t));for(var g=[],f=t.length,_=f-7;f>0;)g.push(+t.slice(_,f)),(_-=7)<0&&(_=0),f-=7;return h(g),new l(g,i)}function W(t){return"number"==typeof t?function(t){if(r)return new d(BigInt(t));if(u(t)){if(t!==p(t))throw new Error(t+" is not an integer.");return new c(t)}return j(t.toString())}(t):"string"==typeof t?j(t):"bigint"==typeof t?new d(t):t}l.prototype.toArray=function(t){return K(this,t)},c.prototype.toArray=function(t){return K(this,t)},d.prototype.toArray=function(t){return K(this,t)},l.prototype.toString=function(e,i){if(e===t&&(e=10),10!==e)return V(this,e,i);for(var a,o=this.value,n=o.length,r=String(o[--n]);--n>=0;)a=String(o[n]),r+="0000000".slice(a.length)+a;return(this.sign?"-":"")+r},c.prototype.toString=function(e,i){return e===t&&(e=10),10!=e?V(this,e,i):String(this.value)},d.prototype.toString=c.prototype.toString,d.prototype.toJSON=l.prototype.toJSON=c.prototype.toJSON=function(){return this.toString()},l.prototype.valueOf=function(){return parseInt(this.toString(),10)},l.prototype.toJSNumber=l.prototype.valueOf,c.prototype.valueOf=function(){return this.value},c.prototype.toJSNumber=c.prototype.valueOf,d.prototype.valueOf=d.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var Z=0;Z<1e3;Z++)s[Z]=W(Z),Z>0&&(s[-Z]=W(-Z));return s.one=s[1],s.zero=s[0],s.minusOne=s[-1],s.max=Q,s.min=k,s.gcd=H,s.lcm=function(t,e){return t=W(t).abs(),e=W(e).abs(),t.divide(H(t,e)).multiply(e)},s.isInstance=function(t){return t instanceof l||t instanceof c||t instanceof d},s.randBetween=function(t,e,a){t=W(t),e=W(e);var o=a||Math.random,n=k(t,e),r=Q(t,e).subtract(n).add(1);if(r.isSmall)return n.add(Math.floor(o()*r));for(var l=K(r,i).value,c=[],d=!0,u=0;u<l.length;u++){var g=d?l[u]+(u+1<l.length?l[u+1]/i:0):i,f=p(o()*g);c.push(f),f<l[u]&&(d=!1)}return n.add(s.fromArray(c,i,!1))},s.fromArray=function(t,e,i){return D(t.map(W),W(e||10),i)},s}();t.hasOwnProperty("exports")&&(t.exports=e)}(BigInteger);var bigInt$8=BigInteger.exports;function fromString$2(t,e){return"string"==typeof t&&"0x"==t.slice(0,2)?bigInt$8(t.slice(2),16):bigInt$8(t,e)}const e$1=fromString$2;function fromArray$2(t,e){return bigInt$8.fromArray(t,e)}function bitLength$1(t){return bigInt$8(t).bitLength()}function isNegative$1(t){return bigInt$8(t).isNegative()}function isZero$1(t){return bigInt$8(t).isZero()}function shiftLeft$1(t,e){return bigInt$8(t).shiftLeft(e)}function shiftRight$1(t,e){return bigInt$8(t).shiftRight(e)}const shl$1=shiftLeft$1,shr$1=shiftRight$1;function isOdd$1(t){return bigInt$8(t).isOdd()}function naf$1(t){let e=bigInt$8(t);const i=[];for(;e.gt(bigInt$8.zero);){if(e.isOdd()){const t=2-e.mod(4).toJSNumber();i.push(t),e=e.minus(t)}else i.push(0);e=e.shiftRight(1)}return i}function bits$1(t){let e=bigInt$8(t);const i=[];for(;e.gt(bigInt$8.zero);)e.isOdd()?i.push(1):i.push(0),e=e.shiftRight(1);return i}function toNumber$2(t){if(!t.lt(bigInt$8("9007199254740992",10)))throw new Error("Number too big");return t.toJSNumber()}function toArray$1(t,e){return bigInt$8(t).toArray(e)}function add$1(t,e){return bigInt$8(t).add(bigInt$8(e))}function sub$1(t,e){return bigInt$8(t).minus(bigInt$8(e))}function neg$1(t){return bigInt$8.zero.minus(bigInt$8(t))}function mul$1(t,e){return bigInt$8(t).times(bigInt$8(e))}function square$1(t){return bigInt$8(t).square()}function pow$1(t,e){return bigInt$8(t).pow(bigInt$8(e))}function exp$2(t,e){return bigInt$8(t).pow(bigInt$8(e))}function abs$1(t){return bigInt$8(t).abs()}function div$1(t,e){return bigInt$8(t).divide(bigInt$8(e))}function mod$1(t,e){return bigInt$8(t).mod(bigInt$8(e))}function eq$1(t,e){return bigInt$8(t).eq(bigInt$8(e))}function neq$1(t,e){return bigInt$8(t).neq(bigInt$8(e))}function lt$1(t,e){return bigInt$8(t).lt(bigInt$8(e))}function gt$1(t,e){return bigInt$8(t).gt(bigInt$8(e))}function leq$1(t,e){return bigInt$8(t).leq(bigInt$8(e))}function geq$1(t,e){return bigInt$8(t).geq(bigInt$8(e))}function band$1(t,e){return bigInt$8(t).and(bigInt$8(e))}function bor$1(t,e){return bigInt$8(t).or(bigInt$8(e))}function bxor$1(t,e){return bigInt$8(t).xor(bigInt$8(e))}function land$1(t,e){return!bigInt$8(t).isZero()&&!bigInt$8(e).isZero()}function lor$1(t,e){return!bigInt$8(t).isZero()||!bigInt$8(e).isZero()}function lnot$1(t){return bigInt$8(t).isZero()}var Scalar_bigint=Object.freeze({__proto__:null,fromString:fromString$2,e:e$1,fromArray:fromArray$2,bitLength:bitLength$1,isNegative:isNegative$1,isZero:isZero$1,shiftLeft:shiftLeft$1,shiftRight:shiftRight$1,shl:shl$1,shr:shr$1,isOdd:isOdd$1,naf:naf$1,bits:bits$1,toNumber:toNumber$2,toArray:toArray$1,add:add$1,sub:sub$1,neg:neg$1,mul:mul$1,square:square$1,pow:pow$1,exp:exp$2,abs:abs$1,div:div$1,mod:mod$1,eq:eq$1,neq:neq$1,lt:lt$1,gt:gt$1,leq:leq$1,geq:geq$1,band:band$1,bor:bor$1,bxor:bxor$1,land:land$1,lor:lor$1,lnot:lnot$1});const supportsNativeBigInt$2="function"==typeof BigInt;let Scalar$1={};supportsNativeBigInt$2?Object.assign(Scalar$1,Scalar_native):Object.assign(Scalar$1,Scalar_bigint),Scalar$1.toRprLE=function(t,e,i,a){const o="0000000"+i.toString(16),n=new Uint32Array(t.buffer,e,a/4),r=1+(4*(o.length-7)-1>>5);for(let t=0;t<r;t++)n[t]=parseInt(o.substring(o.length-8*t-8,o.length-8*t),16);for(let t=r;t<n.length;t++)n[t]=0;for(let e=4*n.length;e<a;e++)t[e]=Scalar$1.toNumber(Scalar$1.band(Scalar$1.shiftRight(i,8*e),255))},Scalar$1.toRprBE=function(t,e,i,a){const o="0000000"+i.toString(16),n=new DataView(t.buffer,t.byteOffset+e,a),r=1+(4*(o.length-7)-1>>5);for(let t=0;t<r;t++)n.setUint32(a-4*t-4,parseInt(o.substring(o.length-8*t-8,o.length-8*t),16),!1);for(let t=0;t<a/4-r;t++)n[t]=0},Scalar$1.fromRprLE=function(t,e,i){i=i||t.byteLength,e=e||0;const a=new Uint32Array(t.buffer,e,i/4),o=new Array(i/4);return a.forEach(((t,e)=>o[o.length-e-1]=t.toString(16).padStart(8,"0"))),Scalar$1.fromString(o.join(""),16)},Scalar$1.fromRprBE=function(t,e,i){i=i||t.byteLength,e=e||0;const a=new DataView(t.buffer,t.byteOffset+e,i),o=new Array(i/4);for(let t=0;t<i/4;t++)o[t]=a.getUint32(4*t,!1).toString(16).padStart(8,"0");return Scalar$1.fromString(o.join(""),16)},Scalar$1.toString=function(t,e){return t.toString(e)},Scalar$1.toLEBuff=function(t){const e=new Uint8Array(Math.floor((Scalar$1.bitLength(t)-1)/8)+1);return Scalar$1.toRprLE(e,0,t,e.byteLength),e},Scalar$1.zero=Scalar$1.e(0),Scalar$1.one=Scalar$1.e(1);let{toRprLE:toRprLE,toRprBE:toRprBE,fromRprLE:fromRprLE,fromRprBE:fromRprBE,toString:toString$6,toLEBuff:toLEBuff,zero:zero,one:one,fromString:fromString$1,e:e,fromArray:fromArray$1,bitLength:bitLength,isNegative:isNegative,isZero:isZero,shiftLeft:shiftLeft,shiftRight:shiftRight,shl:shl,shr:shr,isOdd:isOdd,naf:naf,bits:bits,toNumber:toNumber$1,toArray:toArray,add:add,sub:sub,neg:neg,mul:mul,square:square,pow:pow,exp:exp$1,abs:abs,div:div,mod:mod,eq:eq,neq:neq,lt:lt,gt:gt,leq:leq,geq:geq,band:band,bor:bor,bxor:bxor,land:land,lor:lor,lnot:lnot}=Scalar$1;var _Scalar=Object.freeze({__proto__:null,toRprLE:toRprLE,toRprBE:toRprBE,fromRprLE:fromRprLE,fromRprBE:fromRprBE,toString:toString$6,toLEBuff:toLEBuff,zero:zero,one:one,fromString:fromString$1,e:e,fromArray:fromArray$1,bitLength:bitLength,isNegative:isNegative,isZero:isZero,shiftLeft:shiftLeft,shiftRight:shiftRight,shl:shl,shr:shr,isOdd:isOdd,naf:naf,bits:bits,toNumber:toNumber$1,toArray:toArray,add:add,sub:sub,neg:neg,mul:mul,square:square,pow:pow,exp:exp$1,abs:abs,div:div,mod:mod,eq:eq,neq:neq,lt:lt,gt:gt,leq:leq,geq:geq,band:band,bor:bor,bxor:bxor,land:land,lor:lor,lnot:lnot});function exp(t,e,i){if(isZero(i))return t.one;const a=bits(i);if(0==a.length)return t.one;let o=e;for(let i=a.length-2;i>=0;i--)o=t.square(o),a[i]&&(o=t.mul(o,e));return o}function buildSqrt(t){if(t.m%2==1)if(eq(mod(t.p,4),1))if(eq(mod(t.p,8),1))if(eq(mod(t.p,16),1))alg5_tonelliShanks(t);else{if(!eq(mod(t.p,16),9))throw new Error("Field withot sqrt");alg4_kong(t)}else{if(!eq(mod(t.p,8),5))throw new Error("Field withot sqrt");alg3_atkin(t)}else eq(mod(t.p,4),3)&&alg2_shanks(t);else{const e=mod(pow(t.p,t.m/2),4);1==e?alg10_adj(t):3==e?alg9_adj(t):alg8_complex(t)}}function alg5_tonelliShanks(t){for(t.sqrt_q=pow(t.p,t.m),t.sqrt_s=0,t.sqrt_t=sub(t.sqrt_q,1);!isOdd(t.sqrt_t);)t.sqrt_s=t.sqrt_s+1,t.sqrt_t=div(t.sqrt_t,2);let e=t.one;for(;t.eq(e,t.one);){const i=t.random();t.sqrt_z=t.pow(i,t.sqrt_t),e=t.pow(t.sqrt_z,2**(t.sqrt_s-1))}t.sqrt_tm1d2=div(sub(t.sqrt_t,1),2),t.sqrt=function(t){const e=this;if(e.isZero(t))return e.zero;let i=e.pow(t,e.sqrt_tm1d2);const a=e.pow(e.mul(e.square(i),t),2**(e.sqrt_s-1));if(e.eq(a,e.negone))return null;let o=e.sqrt_s,n=e.mul(t,i),r=e.mul(n,i),s=e.sqrt_z;for(;!e.eq(r,e.one);){let t=e.square(r),a=1;for(;!e.eq(t,e.one);)t=e.square(t),a++;i=s;for(let t=0;t<o-a-1;t++)i=e.square(i);s=e.square(i),r=e.mul(r,s),n=e.mul(n,i),o=a}return e.geq(n,e.zero)?n:e.neg(n)}}function alg4_kong(t){t.sqrt=function(){throw new Error("Sqrt alg 4 not implemented")}}function alg3_atkin(t){t.sqrt=function(){throw new Error("Sqrt alg 3 not implemented")}}function alg2_shanks(t){t.sqrt_q=pow(t.p,t.m),t.sqrt_e1=div(sub(t.sqrt_q,3),4),t.sqrt=function(e){if(this.isZero(e))return this.zero;const i=this.pow(e,this.sqrt_e1),a=this.mul(this.square(i),e);if(this.eq(a,this.negone))return null;const o=this.mul(i,e);return t.geq(o,t.zero)?o:t.neg(o)}}function alg10_adj(t){t.sqrt=function(){throw new Error("Sqrt alg 10 not implemented")}}function alg9_adj(t){t.sqrt_q=pow(t.p,t.m/2),t.sqrt_e34=div(sub(t.sqrt_q,3),4),t.sqrt_e12=div(sub(t.sqrt_q,1),2),t.frobenius=function(e,i){return e%2==1?t.conjugate(i):i},t.sqrt=function(t){const e=this,i=e.pow(t,e.sqrt_e34),a=e.mul(e.square(i),t),o=e.mul(e.frobenius(1,a),a);if(e.eq(o,e.negone))return null;const n=e.mul(i,t);let r;if(e.eq(a,e.negone))r=e.mul(n,[e.F.zero,e.F.one]);else{const t=e.pow(e.add(e.one,a),e.sqrt_e12);r=e.mul(t,n)}return e.geq(r,e.zero)?r:e.neg(r)}}function alg8_complex(t){t.sqrt=function(){throw new Error("Sqrt alg 8 not implemented")}}function quarterRound(t,e,i,a,o){t[e]=t[e]+t[i]>>>0,t[o]=(t[o]^t[e])>>>0,t[o]=(t[o]<<16|t[o]>>>16&65535)>>>0,t[a]=t[a]+t[o]>>>0,t[i]=(t[i]^t[a])>>>0,t[i]=(t[i]<<12|t[i]>>>20&4095)>>>0,t[e]=t[e]+t[i]>>>0,t[o]=(t[o]^t[e])>>>0,t[o]=(t[o]<<8|t[o]>>>24&255)>>>0,t[a]=t[a]+t[o]>>>0,t[i]=(t[i]^t[a])>>>0,t[i]=(t[i]<<7|t[i]>>>25&127)>>>0}function doubleRound(t){quarterRound(t,0,4,8,12),quarterRound(t,1,5,9,13),quarterRound(t,2,6,10,14),quarterRound(t,3,7,11,15),quarterRound(t,0,5,10,15),quarterRound(t,1,6,11,12),quarterRound(t,2,7,8,13),quarterRound(t,3,4,9,14)}class ChaCha{constructor(t){t=t||[0,0,0,0,0,0,0,0],this.state=[1634760805,857760878,2036477234,1797285236,t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],0,0,0,0],this.idx=16,this.buff=new Array(16)}nextU32(){return 16==this.idx&&this.update(),this.buff[this.idx++]}nextU64(){return add(mul(this.nextU32(),4294967296),this.nextU32())}nextBool(){return 1==(1&this.nextU32())}update(){for(let t=0;t<16;t++)this.buff[t]=this.state[t];for(let t=0;t<10;t++)doubleRound(this.buff);for(let t=0;t<16;t++)this.buff[t]=this.buff[t]+this.state[t]>>>0;this.idx=0,this.state[12]=this.state[12]+1>>>0,0==this.state[12]&&(this.state[13]=this.state[13]+1>>>0,0==this.state[13]&&(this.state[14]=this.state[14]+1>>>0,0==this.state[14]&&(this.state[15]=this.state[15]+1>>>0)))}}var crypto={};function getRandomBytes(t){let e=new Uint8Array(t);if(void 0!==globalThis.crypto)globalThis.crypto.getRandomValues(e);else for(let i=0;i<t;i++)e[i]=4294967296*Math.random()>>>0;return e}function getRandomSeed(){const t=getRandomBytes(32),e=new Uint32Array(t.buffer),i=[];for(let t=0;t<8;t++)i.push(e[t]);return i}let threadRng=null;function getThreadRng(){return threadRng||(threadRng=new ChaCha(getRandomSeed()),threadRng)}class FFT{constructor(t,e,i){this.F=e,this.G=t,this.opMulGF=i;let a=e.sqrt_t||e.t,o=e.sqrt_s||e.s,n=e.one;for(;e.eq(e.pow(n,e.half),e.one);)n=e.add(n,e.one);this.w=new Array(o+1),this.wi=new Array(o+1),this.w[o]=this.F.pow(n,a),this.wi[o]=this.F.inv(this.w[o]);let r=o-1;for(;r>=0;)this.w[r]=this.F.square(this.w[r+1]),this.wi[r]=this.F.square(this.wi[r+1]),r--;this.roots=[],this._setRoots(Math.min(o,15))}_setRoots(t){for(let e=t;e>=0&&!this.roots[e];e--){let t=this.F.one;const i=1<<e,a=new Array(i);for(let o=0;o<i;o++)a[o]=t,t=this.F.mul(t,this.w[e]);this.roots[e]=a}}fft(t){if(t.length<=1)return t;const e=log2$2(t.length-1)+1;this._setRoots(e);const i=1<<e;if(t.length!=i)throw new Error("Size must be multiple of 2");return __fft(this,t,e,0,1)}ifft(t){if(t.length<=1)return t;const e=log2$2(t.length-1)+1;this._setRoots(e);const i=1<<e;if(t.length!=i)throw new Error("Size must be multiple of 2");const a=__fft(this,t,e,0,1),o=this.F.inv(this.F.mulScalar(this.F.one,i)),n=new Array(i);for(let t=0;t<i;t++)n[t]=this.opMulGF(a[(i-t)%i],o);return n}}function log2$2(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function __fft(t,e,i,a,o){const n=1<<i;if(1==n)return[e[a]];if(2==n)return[t.G.add(e[a],e[a+o]),t.G.sub(e[a],e[a+o])];const r=n>>1,s=__fft(t,e,i-1,a,2*o),l=__fft(t,e,i-1,a+o,2*o),c=new Array(n);for(let e=0;e<r;e++)c[e]=t.G.add(s[e],t.opMulGF(l[e],t.roots[i][e])),c[e+r]=t.G.sub(s[e],t.opMulGF(l[e],t.roots[i][e]));return c}var FFFT=Object.freeze({__proto__:null,default:FFT});class ZqField$1{constructor(t){this.type="F1",this.one=BigInt(1),this.zero=BigInt(0),this.p=BigInt(t),this.m=1,this.negone=this.p-this.one,this.two=BigInt(2),this.half=this.p>>this.one,this.bitLength=bitLength(this.p),this.mask=(this.one<<BigInt(this.bitLength))-this.one,this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=2*this.n64,this.n8=8*this.n64,this.R=this.e(this.one<<BigInt(64*this.n64)),this.Ri=this.inv(this.R);const e=this.negone>>this.one;this.nqr=this.two;let i=this.pow(this.nqr,e);for(;!this.eq(i,this.negone);)this.nqr=this.nqr+this.one,i=this.pow(this.nqr,e);for(this.s=0,this.t=this.negone;(this.t&this.one)==this.zero;)this.s=this.s+1,this.t=this.t>>this.one;this.nqr_to_t=this.pow(this.nqr,this.t),buildSqrt(this),this.FFT=new FFT(this,this,this.mul.bind(this)),this.fft=this.FFT.fft.bind(this.FFT),this.ifft=this.FFT.ifft.bind(this.FFT),this.w=this.FFT.w,this.wi=this.FFT.wi,this.shift=this.square(this.nqr),this.k=this.exp(this.nqr,2**this.s)}e(t,e){let i;if(e?16==e&&(i=BigInt("0x"+t)):i=BigInt(t),i<0){let t=-i;return t>=this.p&&(t%=this.p),this.p-t}return i>=this.p?i%this.p:i}add(t,e){const i=t+e;return i>=this.p?i-this.p:i}sub(t,e){return t>=e?t-e:this.p-e+t}neg(t){return t?this.p-t:t}mul(t,e){return t*e%this.p}mulScalar(t,e){return t*this.e(e)%this.p}square(t){return t*t%this.p}eq(t,e){return t==e}neq(t,e){return t!=e}lt(t,e){return(t>this.half?t-this.p:t)<(e>this.half?e-this.p:e)}gt(t,e){return(t>this.half?t-this.p:t)>(e>this.half?e-this.p:e)}leq(t,e){return(t>this.half?t-this.p:t)<=(e>this.half?e-this.p:e)}geq(t,e){return(t>this.half?t-this.p:t)>=(e>this.half?e-this.p:e)}div(t,e){return this.mul(t,this.inv(e))}idiv(t,e){if(!e)throw new Error("Division by zero");return t/e}inv(t){if(!t)throw new Error("Division by zero");let e=this.zero,i=this.p,a=this.one,o=t%this.p;for(;o;){let t=i/o;[e,a]=[a,e-t*a],[i,o]=[o,i-t*o]}return e<this.zero&&(e+=this.p),e}mod(t,e){return t%e}pow(t,e){return exp(this,t,e)}exp(t,e){return exp(this,t,e)}band(t,e){const i=t&e&this.mask;return i>=this.p?i-this.p:i}bor(t,e){const i=(t|e)&this.mask;return i>=this.p?i-this.p:i}bxor(t,e){const i=(t^e)&this.mask;return i>=this.p?i-this.p:i}bnot(t){const e=t^this.mask;return e>=this.p?e-this.p:e}shl(t,e){if(Number(e)<this.bitLength){const i=t<<e&this.mask;return i>=this.p?i-this.p:i}{const i=this.p-e;return Number(i)<this.bitLength?t>>i:this.zero}}shr(t,e){if(Number(e)<this.bitLength)return t>>e;{const i=this.p-e;if(Number(i)<this.bitLength){const e=t<<i&this.mask;return e>=this.p?e-this.p:e}return 0}}land(t,e){return t&&e?this.one:this.zero}lor(t,e){return t||e?this.one:this.zero}lnot(t){return t?this.zero:this.one}sqrt_old(t){if(t==this.zero)return this.zero;if(this.pow(t,this.negone>>this.one)!=this.one)return null;let e=this.s,i=this.nqr_to_t,a=this.pow(t,this.t),o=this.pow(t,this.add(this.t,this.one)>>this.one);for(;a!=this.one;){let t=this.square(a),n=1;for(;t!=this.one;)n++,t=this.square(t);let r=i;for(let t=0;t<e-n-1;t++)r=this.square(r);e=n,i=this.square(r),a=this.mul(a,i),o=this.mul(o,r)}return o>this.p>>this.one&&(o=this.neg(o)),o}normalize(t,e){if((t=BigInt(t,e))<0){let e=-t;return e>=this.p&&(e%=this.p),this.p-e}return t>=this.p?t%this.p:t}random(){const t=2*this.bitLength/8;let e=this.zero;for(let i=0;i<t;i++)e=(e<<BigInt(8))+BigInt(getRandomBytes(1)[0]);return e%this.p}toString(t,e){let i;if(e=e||10,t>this.half&&10==e){i="-"+(this.p-t).toString(e)}else i=t.toString(e);return i}isZero(t){return t==this.zero}fromRng(t){let e;do{e=this.zero;for(let i=0;i<this.n64;i++)e+=t.nextU64()<<BigInt(64*i);e&=this.mask}while(e>=this.p);return e=e*this.Ri%this.p,e}fft(t){return this.FFT.fft(t)}ifft(t){return this.FFT.ifft(t)}}class ZqField{constructor(t){this.type="F1",this.one=bigInt$8.one,this.zero=bigInt$8.zero,this.p=bigInt$8(t),this.m=1,this.negone=this.p.minus(bigInt$8.one),this.two=bigInt$8(2),this.half=this.p.shiftRight(1),this.bitLength=this.p.bitLength(),this.mask=bigInt$8.one.shiftLeft(this.bitLength).minus(bigInt$8.one),this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=2*this.n64,this.n8=8*this.n64,this.R=bigInt$8.one.shiftLeft(64*this.n64),this.Ri=this.inv(this.R);const e=this.negone.shiftRight(this.one);this.nqr=this.two;let i=this.pow(this.nqr,e);for(;!i.equals(this.negone);)this.nqr=this.nqr.add(this.one),i=this.pow(this.nqr,e);for(this.s=this.zero,this.t=this.negone;!this.t.isOdd();)this.s=this.s.add(this.one),this.t=this.t.shiftRight(this.one);this.nqr_to_t=this.pow(this.nqr,this.t),buildSqrt(this),this.FFT=new FFFT(this,this,this.mul.bind(this)),this.fft=this.FFT.fft.bind(this.FFT),this.ifft=this.FFT.ifft.bind(this.FFT),this.w=this.FFT.w,this.wi=this.FFT.wi,this.shift=this.square(this.nqr),this.k=this.exp(this.nqr,2**this.s)}e(t,e){const i=bigInt$8(t,e);return this.normalize(i)}add(t,e){let i=t.add(e);return i.geq(this.p)&&(i=i.minus(this.p)),i}sub(t,e){return t.geq(e)?t.minus(e):this.p.minus(e.minus(t))}neg(t){return t.isZero()?t:this.p.minus(t)}mul(t,e){return t.times(e).mod(this.p)}mulScalar(t,e){return t.times(bigInt$8(e)).mod(this.p)}square(t){return t.square().mod(this.p)}eq(t,e){return t.eq(e)}neq(t,e){return t.neq(e)}lt(t,e){const i=t.gt(this.half)?t.minus(this.p):t,a=e.gt(this.half)?e.minus(this.p):e;return i.lt(a)}gt(t,e){const i=t.gt(this.half)?t.minus(this.p):t,a=e.gt(this.half)?e.minus(this.p):e;return i.gt(a)}leq(t,e){const i=t.gt(this.half)?t.minus(this.p):t,a=e.gt(this.half)?e.minus(this.p):e;return i.leq(a)}geq(t,e){const i=t.gt(this.half)?t.minus(this.p):t,a=e.gt(this.half)?e.minus(this.p):e;return i.geq(a)}div(t,e){if(e.isZero())throw new Error("Division by zero");return t.times(e.modInv(this.p)).mod(this.p)}idiv(t,e){if(e.isZero())throw new Error("Division by zero");return t.divide(e)}inv(t){if(t.isZero())throw new Error("Division by zero");return t.modInv(this.p)}mod(t,e){return t.mod(e)}pow(t,e){return t.modPow(e,this.p)}exp(t,e){return t.modPow(e,this.p)}band(t,e){return t.and(e).and(this.mask).mod(this.p)}bor(t,e){return t.or(e).and(this.mask).mod(this.p)}bxor(t,e){return t.xor(e).and(this.mask).mod(this.p)}bnot(t){return t.xor(this.mask).mod(this.p)}shl(t,e){if(e.lt(this.bitLength))return t.shiftLeft(e).and(this.mask).mod(this.p);{const i=this.p.minus(e);return i.lt(this.bitLength)?this.shr(t,i):bigInt$8.zero}}shr(t,e){if(e.lt(this.bitLength))return t.shiftRight(e);{const i=this.p.minus(e);return i.lt(this.bitLength)?this.shl(t,i):bigInt$8.zero}}land(t,e){return t.isZero()||e.isZero()?bigInt$8.zero:bigInt$8.one}lor(t,e){return t.isZero()&&e.isZero()?bigInt$8.zero:bigInt$8.one}lnot(t){return t.isZero()?bigInt$8.one:bigInt$8.zero}sqrt_old(t){if(t.equals(this.zero))return this.zero;if(!this.pow(t,this.negone.shiftRight(this.one)).equals(this.one))return null;let e=parseInt(this.s),i=this.nqr_to_t,a=this.pow(t,this.t),o=this.pow(t,this.add(this.t,this.one).shiftRight(this.one));for(;!a.equals(this.one);){let t=this.square(a),n=1;for(;!t.equals(this.one);)n++,t=this.square(t);let r=i;for(let t=0;t<e-n-1;t++)r=this.square(r);e=n,i=this.square(r),a=this.mul(a,i),o=this.mul(o,r)}return o.greater(this.p.shiftRight(this.one))&&(o=this.neg(o)),o}normalize(t){return(t=bigInt$8(t)).isNegative()?this.p.minus(t.abs().mod(this.p)):t.mod(this.p)}random(){let t=bigInt$8(0),e=bigInt$8(this.p.square());for(;!e.isZero();)t=t.shiftLeft(8).add(bigInt$8(getRandomBytes(1)[0])),e=e.shiftRight(8);return t.mod(this.p)}toString(t,e){let i;if(e=e||10,t.lesserOrEquals(this.p.shiftRight(bigInt$8(1)))||10!=e)i=t.toString(e);else{i="-"+this.p.minus(t).toString(e)}return i}isZero(t){return t.isZero()}fromRng(t){let e;do{e=bigInt$8(0);for(let i=0;i<this.n64;i++)e=e.add(e,t.nextU64().shiftLeft(64*i));e=e.and(this.mask)}while(e.geq(this.p));return e=e.times(this.Ri).mod(this.q),e}fft(t){return this.FFT.fft(t)}ifft(t){return this.FFT.ifft(t)}}const supportsNativeBigInt$1="function"==typeof BigInt;let _F1Field;_F1Field=supportsNativeBigInt$1?ZqField$1:ZqField;class F1Field extends _F1Field{toRprLE(t,e,i){toRprLE(t,e,i,8*this.n64)}toRprBE(t,e,i){toRprBE(t,e,i,8*this.n64)}toRprBEM(t,e,i){return this.toRprBE(t,e,this.mul(this.R,i))}toRprLEM(t,e,i){return this.toRprLE(t,e,this.mul(this.R,i))}fromRprLE(t,e){return fromRprLE(t,e,this.n8)}fromRprBE(t,e){return fromRprBE(t,e,this.n8)}fromRprLEM(t,e){return this.mul(this.fromRprLE(t,e),this.Ri)}fromRprBEM(t,e){return this.mul(this.fromRprBE(t,e),this.Ri)}toObject(t){return t}}var utils$c={};const bigInt$7=BigInteger.exports;utils$c.bigInt2BytesLE=function(t,e){const i=Array(e);let a=bigInt$7(t);for(let t=0;t<e;t++)i[t]=a.and(255).toJSNumber(),a=a.shiftRight(8);return i},utils$c.bigInt2U32LE=function(t,e){const i=Array(e);let a=bigInt$7(t);for(let t=0;t<e;t++)i[t]=a.and(4294967295).toJSNumber(),a=a.shiftRight(32);return i},utils$c.isOcamNum=function(t){return!!Array.isArray(t)&&(3==t.length&&("number"==typeof t[0]&&("number"==typeof t[1]&&!!Array.isArray(t[2]))))};const utils$b=utils$c;var build_int=function(t,e,i){const a=i||"int";if(t.modules[a])return a;t.modules[a]={};const o=2*e,n=8*e;return t.alloc(n,utils$b.bigInt2BytesLE(1,n)),function(){const i=t.addFunction(a+"_copy");i.addParam("px","i32"),i.addParam("pr","i32");const o=i.getCodeBuilder();for(let t=0;t<e;t++)i.addCode(o.i64_store(o.getLocal("pr"),8*t,o.i64_load(o.getLocal("px"),8*t)))}(),function(){const i=t.addFunction(a+"_zero");i.addParam("pr","i32");const o=i.getCodeBuilder();for(let t=0;t<e;t++)i.addCode(o.i64_store(o.getLocal("pr"),8*t,o.i64_const(0)))}(),function(){const i=t.addFunction(a+"_isZero");i.addParam("px","i32"),i.setReturnType("i32");const o=i.getCodeBuilder();i.addCode(function t(e){return 0==e?o.ret(o.i64_eqz(o.i64_load(o.getLocal("px")))):o.if(o.i64_eqz(o.i64_load(o.getLocal("px"),8*e)),t(e-1),o.ret(o.i32_const(0)))}(e-1)),i.addCode(o.ret(o.i32_const(0)))}(),function(){const i=t.addFunction(a+"_one");i.addParam("pr","i32");const o=i.getCodeBuilder();i.addCode(o.i64_store(o.getLocal("pr"),0,o.i64_const(1)));for(let t=1;t<e;t++)i.addCode(o.i64_store(o.getLocal("pr"),8*t,o.i64_const(0)))}(),function(){const i=t.addFunction(a+"_eq");i.addParam("px","i32"),i.addParam("py","i32"),i.setReturnType("i32");const o=i.getCodeBuilder();i.addCode(function t(e){return 0==e?o.ret(o.i64_eq(o.i64_load(o.getLocal("px")),o.i64_load(o.getLocal("py")))):o.if(o.i64_eq(o.i64_load(o.getLocal("px"),8*e),o.i64_load(o.getLocal("py"),8*e)),t(e-1),o.ret(o.i32_const(0)))}(e-1)),i.addCode(o.ret(o.i32_const(0)))}(),function(){const i=t.addFunction(a+"_gte");i.addParam("px","i32"),i.addParam("py","i32"),i.setReturnType("i32");const o=i.getCodeBuilder();i.addCode(function t(e){return 0==e?o.ret(o.i64_ge_u(o.i64_load(o.getLocal("px")),o.i64_load(o.getLocal("py")))):o.if(o.i64_lt_u(o.i64_load(o.getLocal("px"),8*e),o.i64_load(o.getLocal("py"),8*e)),o.ret(o.i32_const(0)),o.if(o.i64_gt_u(o.i64_load(o.getLocal("px"),8*e),o.i64_load(o.getLocal("py"),8*e)),o.ret(o.i32_const(1)),t(e-1)))}(e-1)),i.addCode(o.ret(o.i32_const(0)))}(),function(){const e=t.addFunction(a+"_add");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32"),e.setReturnType("i32"),e.addLocal("c","i64");const i=e.getCodeBuilder();e.addCode(i.setLocal("c",i.i64_add(i.i64_load32_u(i.getLocal("x")),i.i64_load32_u(i.getLocal("y"))))),e.addCode(i.i64_store32(i.getLocal("r"),i.getLocal("c")));for(let t=1;t<o;t++)e.addCode(i.setLocal("c",i.i64_add(i.i64_add(i.i64_load32_u(i.getLocal("x"),4*t),i.i64_load32_u(i.getLocal("y"),4*t)),i.i64_shr_u(i.getLocal("c"),i.i64_const(32))))),e.addCode(i.i64_store32(i.getLocal("r"),4*t,i.getLocal("c")));e.addCode(i.i32_wrap_i64(i.i64_shr_u(i.getLocal("c"),i.i64_const(32))))}(),function(){const e=t.addFunction(a+"_sub");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32"),e.setReturnType("i32"),e.addLocal("c","i64");const i=e.getCodeBuilder();e.addCode(i.setLocal("c",i.i64_sub(i.i64_load32_u(i.getLocal("x")),i.i64_load32_u(i.getLocal("y"))))),e.addCode(i.i64_store32(i.getLocal("r"),i.i64_and(i.getLocal("c"),i.i64_const("0xFFFFFFFF"))));for(let t=1;t<o;t++)e.addCode(i.setLocal("c",i.i64_add(i.i64_sub(i.i64_load32_u(i.getLocal("x"),4*t),i.i64_load32_u(i.getLocal("y"),4*t)),i.i64_shr_s(i.getLocal("c"),i.i64_const(32))))),e.addCode(i.i64_store32(i.getLocal("r"),4*t,i.i64_and(i.getLocal("c"),i.i64_const("0xFFFFFFFF"))));e.addCode(i.i32_wrap_i64(i.i64_shr_s(i.getLocal("c"),i.i64_const(32))))}(),function(){const e=t.addFunction(a+"_mul");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32"),e.addLocal("c0","i64"),e.addLocal("c1","i64");for(let t=0;t<o;t++)e.addLocal("x"+t,"i64"),e.addLocal("y"+t,"i64");const i=e.getCodeBuilder(),n=[],r=[];function s(t,e){let a,o;return n[t]?a=i.getLocal("x"+t):(a=i.teeLocal("x"+t,i.i64_load32_u(i.getLocal("x"),4*t)),n[t]=!0),r[e]?o=i.getLocal("y"+e):(o=i.teeLocal("y"+e,i.i64_load32_u(i.getLocal("y"),4*e)),r[e]=!0),i.i64_mul(a,o)}let l="c0",c="c1";for(let t=0;t<2*o-1;t++){for(let a=Math.max(0,t-o+1);a<=t&&a<o;a++){const o=t-a;e.addCode(i.setLocal(l,i.i64_add(i.i64_and(i.getLocal(l),i.i64_const(4294967295)),s(a,o)))),e.addCode(i.setLocal(c,i.i64_add(i.getLocal(c),i.i64_shr_u(i.getLocal(l),i.i64_const(32)))))}e.addCode(i.i64_store32(i.getLocal("r"),4*t,i.getLocal(l))),[l,c]=[c,l],e.addCode(i.setLocal(c,i.i64_shr_u(i.getLocal(l),i.i64_const(32))))}e.addCode(i.i64_store32(i.getLocal("r"),4*o*2-4,i.getLocal(l)))}(),function(){const e=t.addFunction(a+"_square");e.addParam("x","i32"),e.addParam("r","i32"),e.addLocal("c0","i64"),e.addLocal("c1","i64"),e.addLocal("c0_old","i64"),e.addLocal("c1_old","i64");for(let t=0;t<o;t++)e.addLocal("x"+t,"i64");const i=e.getCodeBuilder(),n=[];function r(t,e){let a,o;return n[t]?a=i.getLocal("x"+t):(a=i.teeLocal("x"+t,i.i64_load32_u(i.getLocal("x"),4*t)),n[t]=!0),n[e]?o=i.getLocal("x"+e):(o=i.teeLocal("x"+e,i.i64_load32_u(i.getLocal("x"),4*e)),n[e]=!0),i.i64_mul(a,o)}let s="c0",l="c1",c="c0_old",d="c1_old";for(let t=0;t<2*o-1;t++){e.addCode(i.setLocal(s,i.i64_const(0)),i.setLocal(l,i.i64_const(0)));for(let a=Math.max(0,t-o+1);a<t+1>>1&&a<o;a++){const o=t-a;e.addCode(i.setLocal(s,i.i64_add(i.i64_and(i.getLocal(s),i.i64_const(4294967295)),r(a,o)))),e.addCode(i.setLocal(l,i.i64_add(i.getLocal(l),i.i64_shr_u(i.getLocal(s),i.i64_const(32)))))}e.addCode(i.setLocal(s,i.i64_shl(i.i64_and(i.getLocal(s),i.i64_const(4294967295)),i.i64_const(1)))),e.addCode(i.setLocal(l,i.i64_add(i.i64_shl(i.getLocal(l),i.i64_const(1)),i.i64_shr_u(i.getLocal(s),i.i64_const(32))))),t%2==0&&(e.addCode(i.setLocal(s,i.i64_add(i.i64_and(i.getLocal(s),i.i64_const(4294967295)),r(t>>1,t>>1)))),e.addCode(i.setLocal(l,i.i64_add(i.getLocal(l),i.i64_shr_u(i.getLocal(s),i.i64_const(32)))))),t>0&&(e.addCode(i.setLocal(s,i.i64_add(i.i64_and(i.getLocal(s),i.i64_const(4294967295)),i.i64_and(i.getLocal(c),i.i64_const(4294967295))))),e.addCode(i.setLocal(l,i.i64_add(i.i64_add(i.getLocal(l),i.i64_shr_u(i.getLocal(s),i.i64_const(32))),i.getLocal(d))))),e.addCode(i.i64_store32(i.getLocal("r"),4*t,i.getLocal(s))),e.addCode(i.setLocal(c,i.getLocal(l)),i.setLocal(d,i.i64_shr_u(i.getLocal(c),i.i64_const(32))))}e.addCode(i.i64_store32(i.getLocal("r"),4*o*2-4,i.getLocal(c)))}(),function(){const e=t.addFunction(a+"_squareOld");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(a+"_mul",i.getLocal("x"),i.getLocal("x"),i.getLocal("r")))}(),function(){!function(){const e=t.addFunction(a+"__mul1");e.addParam("px","i32"),e.addParam("y","i64"),e.addParam("pr","i32"),e.addLocal("c","i64");const i=e.getCodeBuilder();e.addCode(i.setLocal("c",i.i64_mul(i.i64_load32_u(i.getLocal("px"),0,0),i.getLocal("y")))),e.addCode(i.i64_store32(i.getLocal("pr"),0,0,i.getLocal("c")));for(let t=1;t<o;t++)e.addCode(i.setLocal("c",i.i64_add(i.i64_mul(i.i64_load32_u(i.getLocal("px"),4*t,0),i.getLocal("y")),i.i64_shr_u(i.getLocal("c"),i.i64_const(32))))),e.addCode(i.i64_store32(i.getLocal("pr"),4*t,0,i.getLocal("c")))}(),function(){const e=t.addFunction(a+"__add1");e.addParam("x","i32"),e.addParam("y","i64"),e.addLocal("c","i64"),e.addLocal("px","i32");const i=e.getCodeBuilder();e.addCode(i.setLocal("px",i.getLocal("x"))),e.addCode(i.setLocal("c",i.i64_add(i.i64_load32_u(i.getLocal("px"),0,0),i.getLocal("y")))),e.addCode(i.i64_store32(i.getLocal("px"),0,0,i.getLocal("c"))),e.addCode(i.setLocal("c",i.i64_shr_u(i.getLocal("c"),i.i64_const(32)))),e.addCode(i.block(i.loop(i.br_if(1,i.i64_eqz(i.getLocal("c"))),i.setLocal("px",i.i32_add(i.getLocal("px"),i.i32_const(4))),i.setLocal("c",i.i64_add(i.i64_load32_u(i.getLocal("px"),0,0),i.getLocal("c"))),i.i64_store32(i.getLocal("px"),0,0,i.getLocal("c")),i.setLocal("c",i.i64_shr_u(i.getLocal("c"),i.i64_const(32))),i.br(0))))}();const e=t.addFunction(a+"_div");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("c","i32"),e.addParam("r","i32"),e.addLocal("rr","i32"),e.addLocal("cc","i32"),e.addLocal("eX","i32"),e.addLocal("eY","i32"),e.addLocal("sy","i64"),e.addLocal("sx","i64"),e.addLocal("ec","i32");const i=e.getCodeBuilder(),r=i.i32_const(t.alloc(n)),s=i.i32_const(t.alloc(n)),l=i.i32_const(t.alloc(n)),c=i.getLocal("cc"),d=i.getLocal("rr"),u=t.alloc(2*n),g=i.i32_const(u),f=i.i32_const(u+n);e.addCode(i.if(i.getLocal("c"),i.setLocal("cc",i.getLocal("c")),i.setLocal("cc",s))),e.addCode(i.if(i.getLocal("r"),i.setLocal("rr",i.getLocal("r")),i.setLocal("rr",l))),e.addCode(i.call(a+"_copy",i.getLocal("x"),d)),e.addCode(i.call(a+"_copy",i.getLocal("y"),r)),e.addCode(i.call(a+"_zero",c)),e.addCode(i.call(a+"_zero",g)),e.addCode(i.setLocal("eX",i.i32_const(n-1))),e.addCode(i.setLocal("eY",i.i32_const(n-1))),e.addCode(i.block(i.loop(i.br_if(1,i.i32_or(i.i32_load8_u(i.i32_add(r,i.getLocal("eY")),0,0),i.i32_eq(i.getLocal("eY"),i.i32_const(3)))),i.setLocal("eY",i.i32_sub(i.getLocal("eY"),i.i32_const(1))),i.br(0)))),e.addCode(i.setLocal("sy",i.i64_add(i.i64_load32_u(i.i32_sub(i.i32_add(r,i.getLocal("eY")),i.i32_const(3)),0,0),i.i64_const(1)))),e.addCode(i.if(i.i64_eq(i.getLocal("sy"),i.i64_const(1)),i.drop(i.i64_div_u(i.i64_const(0),i.i64_const(0))))),e.addCode(i.block(i.loop(i.block(i.loop(i.br_if(1,i.i32_or(i.i32_load8_u(i.i32_add(d,i.getLocal("eX")),0,0),i.i32_eq(i.getLocal("eX"),i.i32_const(7)))),i.setLocal("eX",i.i32_sub(i.getLocal("eX"),i.i32_const(1))),i.br(0))),i.setLocal("sx",i.i64_load(i.i32_sub(i.i32_add(d,i.getLocal("eX")),i.i32_const(7)),0,0)),i.setLocal("sx",i.i64_div_u(i.getLocal("sx"),i.getLocal("sy"))),i.setLocal("ec",i.i32_sub(i.i32_sub(i.getLocal("eX"),i.getLocal("eY")),i.i32_const(4))),i.block(i.loop(i.br_if(1,i.i32_and(i.i64_eqz(i.i64_and(i.getLocal("sx"),i.i64_const("0xFFFFFFFF00000000"))),i.i32_ge_s(i.getLocal("ec"),i.i32_const(0)))),i.setLocal("sx",i.i64_shr_u(i.getLocal("sx"),i.i64_const(8))),i.setLocal("ec",i.i32_add(i.getLocal("ec"),i.i32_const(1))),i.br(0))),i.if(i.i64_eqz(i.getLocal("sx")),[...i.br_if(2,i.i32_eqz(i.call(a+"_gte",d,r))),...i.setLocal("sx",i.i64_const(1)),...i.setLocal("ec",i.i32_const(0))]),i.call(a+"__mul1",r,i.getLocal("sx"),f),i.drop(i.call(a+"_sub",d,i.i32_sub(f,i.getLocal("ec")),d)),i.call(a+"__add1",i.i32_add(c,i.getLocal("ec")),i.getLocal("sx")),i.br(0))))}(),function(){const e=t.addFunction(a+"_inverseMod");e.addParam("px","i32"),e.addParam("pm","i32"),e.addParam("pr","i32"),e.addLocal("t","i32"),e.addLocal("newt","i32"),e.addLocal("r","i32"),e.addLocal("qq","i32"),e.addLocal("qr","i32"),e.addLocal("newr","i32"),e.addLocal("swp","i32"),e.addLocal("x","i32"),e.addLocal("signt","i32"),e.addLocal("signnewt","i32"),e.addLocal("signx","i32");const i=e.getCodeBuilder(),o=i.i32_const(t.alloc(n)),r=i.i32_const(t.alloc(n)),s=i.i32_const(t.alloc(n)),l=i.i32_const(t.alloc(n)),c=i.i32_const(t.alloc(n)),d=i.i32_const(t.alloc(n)),u=i.i32_const(t.alloc(2*n)),g=i.i32_const(t.alloc(n));e.addCode(i.setLocal("t",o),i.call(a+"_zero",o),i.setLocal("signt",i.i32_const(0))),e.addCode(i.setLocal("r",r),i.call(a+"_copy",i.getLocal("pm"),r)),e.addCode(i.setLocal("newt",s),i.call(a+"_one",s),i.setLocal("signnewt",i.i32_const(0))),e.addCode(i.setLocal("newr",l),i.call(a+"_copy",i.getLocal("px"),l)),e.addCode(i.setLocal("qq",c)),e.addCode(i.setLocal("qr",d)),e.addCode(i.setLocal("x",g)),e.addCode(i.block(i.loop(i.br_if(1,i.call(a+"_isZero",i.getLocal("newr"))),i.call(a+"_div",i.getLocal("r"),i.getLocal("newr"),i.getLocal("qq"),i.getLocal("qr")),i.call(a+"_mul",i.getLocal("qq"),i.getLocal("newt"),u),i.if(i.getLocal("signt"),i.if(i.getLocal("signnewt"),i.if(i.call(a+"_gte",u,i.getLocal("t")),[...i.drop(i.call(a+"_sub",u,i.getLocal("t"),i.getLocal("x"))),...i.setLocal("signx",i.i32_const(0))],[...i.drop(i.call(a+"_sub",i.getLocal("t"),u,i.getLocal("x"))),...i.setLocal("signx",i.i32_const(1))]),[...i.drop(i.call(a+"_add",u,i.getLocal("t"),i.getLocal("x"))),...i.setLocal("signx",i.i32_const(1))]),i.if(i.getLocal("signnewt"),[...i.drop(i.call(a+"_add",u,i.getLocal("t"),i.getLocal("x"))),...i.setLocal("signx",i.i32_const(0))],i.if(i.call(a+"_gte",i.getLocal("t"),u),[...i.drop(i.call(a+"_sub",i.getLocal("t"),u,i.getLocal("x"))),...i.setLocal("signx",i.i32_const(0))],[...i.drop(i.call(a+"_sub",u,i.getLocal("t"),i.getLocal("x"))),...i.setLocal("signx",i.i32_const(1))]))),i.setLocal("swp",i.getLocal("t")),i.setLocal("t",i.getLocal("newt")),i.setLocal("newt",i.getLocal("x")),i.setLocal("x",i.getLocal("swp")),i.setLocal("signt",i.getLocal("signnewt")),i.setLocal("signnewt",i.getLocal("signx")),i.setLocal("swp",i.getLocal("r")),i.setLocal("r",i.getLocal("newr")),i.setLocal("newr",i.getLocal("qr")),i.setLocal("qr",i.getLocal("swp")),i.br(0)))),e.addCode(i.if(i.getLocal("signt"),i.drop(i.call(a+"_sub",i.getLocal("pm"),i.getLocal("t"),i.getLocal("pr"))),i.call(a+"_copy",i.getLocal("t"),i.getLocal("pr"))))}(),t.exportFunction(a+"_copy"),t.exportFunction(a+"_zero"),t.exportFunction(a+"_one"),t.exportFunction(a+"_isZero"),t.exportFunction(a+"_eq"),t.exportFunction(a+"_gte"),t.exportFunction(a+"_add"),t.exportFunction(a+"_sub"),t.exportFunction(a+"_mul"),t.exportFunction(a+"_square"),t.exportFunction(a+"_squareOld"),t.exportFunction(a+"_div"),t.exportFunction(a+"_inverseMod"),a},build_timesscalar=function(t,e,i,a,o,n,r){const s=t.addFunction(e);s.addParam("base","i32"),s.addParam("scalar","i32"),s.addParam("scalarLength","i32"),s.addParam("r","i32"),s.addLocal("i","i32"),s.addLocal("b","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(i));s.addCode(l.if(l.i32_eqz(l.getLocal("scalarLength")),[...l.call(r,l.getLocal("r")),...l.ret([])])),s.addCode(l.call(n,l.getLocal("base"),c)),s.addCode(l.call(r,l.getLocal("r"))),s.addCode(l.setLocal("i",l.getLocal("scalarLength"))),s.addCode(l.block(l.loop(l.setLocal("i",l.i32_sub(l.getLocal("i"),l.i32_const(1))),l.setLocal("b",l.i32_load8_u(l.i32_add(l.getLocal("scalar"),l.getLocal("i")))),...function(){const t=[];for(let e=0;e<8;e++)t.push(...l.call(o,l.getLocal("r"),l.getLocal("r")),...l.if(l.i32_ge_u(l.getLocal("b"),l.i32_const(128>>e)),[...l.setLocal("b",l.i32_sub(l.getLocal("b"),l.i32_const(128>>e))),...l.call(a,l.getLocal("r"),c,l.getLocal("r"))]));return t}(),l.br_if(1,l.i32_eqz(l.getLocal("i"))),l.br(0))))},build_batchinverse=buildBatchInverse$3;function buildBatchInverse$3(t,e){const i=8*t.modules[e].n64,a=t.addFunction(e+"_batchInverse");a.addParam("pIn","i32"),a.addParam("inStep","i32"),a.addParam("n","i32"),a.addParam("pOut","i32"),a.addParam("outStep","i32"),a.addLocal("itAux","i32"),a.addLocal("itIn","i32"),a.addLocal("itOut","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),n=o.i32_const(t.alloc(i));a.addCode(o.setLocal("itAux",o.i32_load(o.i32_const(0))),o.i32_store(o.i32_const(0),o.i32_add(o.getLocal("itAux"),o.i32_mul(o.i32_add(o.getLocal("n"),o.i32_const(1)),o.i32_const(i))))),a.addCode(o.call(e+"_one",o.getLocal("itAux")),o.setLocal("itIn",o.getLocal("pIn")),o.setLocal("itAux",o.i32_add(o.getLocal("itAux"),o.i32_const(i))),o.setLocal("i",o.i32_const(0)),o.block(o.loop(o.br_if(1,o.i32_eq(o.getLocal("i"),o.getLocal("n"))),o.if(o.call(e+"_isZero",o.getLocal("itIn")),o.call(e+"_copy",o.i32_sub(o.getLocal("itAux"),o.i32_const(i)),o.getLocal("itAux")),o.call(e+"_mul",o.getLocal("itIn"),o.i32_sub(o.getLocal("itAux"),o.i32_const(i)),o.getLocal("itAux"))),o.setLocal("itIn",o.i32_add(o.getLocal("itIn"),o.getLocal("inStep"))),o.setLocal("itAux",o.i32_add(o.getLocal("itAux"),o.i32_const(i))),o.setLocal("i",o.i32_add(o.getLocal("i"),o.i32_const(1))),o.br(0))),o.setLocal("itIn",o.i32_sub(o.getLocal("itIn"),o.getLocal("inStep"))),o.setLocal("itAux",o.i32_sub(o.getLocal("itAux"),o.i32_const(i))),o.setLocal("itOut",o.i32_add(o.getLocal("pOut"),o.i32_mul(o.i32_sub(o.getLocal("n"),o.i32_const(1)),o.getLocal("outStep")))),o.call(e+"_inverse",o.getLocal("itAux"),o.getLocal("itAux")),o.block(o.loop(o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.if(o.call(e+"_isZero",o.getLocal("itIn")),[...o.call(e+"_copy",o.getLocal("itAux"),o.i32_sub(o.getLocal("itAux"),o.i32_const(i))),...o.call(e+"_zero",o.getLocal("itOut"))],[...o.call(e+"_copy",o.i32_sub(o.getLocal("itAux"),o.i32_const(i)),n),...o.call(e+"_mul",o.getLocal("itAux"),o.getLocal("itIn"),o.i32_sub(o.getLocal("itAux"),o.i32_const(i))),...o.call(e+"_mul",o.getLocal("itAux"),n,o.getLocal("itOut"))]),o.setLocal("itIn",o.i32_sub(o.getLocal("itIn"),o.getLocal("inStep"))),o.setLocal("itOut",o.i32_sub(o.getLocal("itOut"),o.getLocal("outStep"))),o.setLocal("itAux",o.i32_sub(o.getLocal("itAux"),o.i32_const(i))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0)))),a.addCode(o.i32_store(o.i32_const(0),o.getLocal("itAux")))}var build_batchconvertion=buildBatchConvertion$3;function buildBatchConvertion$3(t,e,i,a,o,n){void 0===n&&(n=a<o);const r=t.addFunction(e);r.addParam("pIn","i32"),r.addParam("n","i32"),r.addParam("pOut","i32"),r.addLocal("i","i32"),r.addLocal("itIn","i32"),r.addLocal("itOut","i32");const s=r.getCodeBuilder();n?r.addCode(s.setLocal("itIn",s.i32_add(s.getLocal("pIn"),s.i32_mul(s.i32_sub(s.getLocal("n"),s.i32_const(1)),s.i32_const(a)))),s.setLocal("itOut",s.i32_add(s.getLocal("pOut"),s.i32_mul(s.i32_sub(s.getLocal("n"),s.i32_const(1)),s.i32_const(o)))),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.call(i,s.getLocal("itIn"),s.getLocal("itOut")),s.setLocal("itIn",s.i32_sub(s.getLocal("itIn"),s.i32_const(a))),s.setLocal("itOut",s.i32_sub(s.getLocal("itOut"),s.i32_const(o))),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0)))):r.addCode(s.setLocal("itIn",s.getLocal("pIn")),s.setLocal("itOut",s.getLocal("pOut")),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.call(i,s.getLocal("itIn"),s.getLocal("itOut")),s.setLocal("itIn",s.i32_add(s.getLocal("itIn"),s.i32_const(a))),s.setLocal("itOut",s.i32_add(s.getLocal("itOut"),s.i32_const(o))),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}var build_batchop=buildBatchConvertion$2;function buildBatchConvertion$2(t,e,i,a,o,n){void 0===n&&(n=a<o);const r=t.addFunction(e);r.addParam("pIn1","i32"),r.addParam("pIn2","i32"),r.addParam("n","i32"),r.addParam("pOut","i32"),r.addLocal("i","i32"),r.addLocal("itIn1","i32"),r.addLocal("itIn2","i32"),r.addLocal("itOut","i32");const s=r.getCodeBuilder();n?r.addCode(s.setLocal("itIn1",s.i32_add(s.getLocal("pIn1"),s.i32_mul(s.i32_sub(s.getLocal("n"),s.i32_const(1)),s.i32_const(a)))),s.setLocal("itIn2",s.i32_add(s.getLocal("pIn2"),s.i32_mul(s.i32_sub(s.getLocal("n"),s.i32_const(1)),s.i32_const(a)))),s.setLocal("itOut",s.i32_add(s.getLocal("pOut"),s.i32_mul(s.i32_sub(s.getLocal("n"),s.i32_const(1)),s.i32_const(o)))),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.call(i,s.getLocal("itIn1"),s.getLocal("itIn2"),s.getLocal("itOut")),s.setLocal("itIn1",s.i32_sub(s.getLocal("itIn1"),s.i32_const(a))),s.setLocal("itIn2",s.i32_sub(s.getLocal("itIn2"),s.i32_const(a))),s.setLocal("itOut",s.i32_sub(s.getLocal("itOut"),s.i32_const(o))),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0)))):r.addCode(s.setLocal("itIn1",s.getLocal("pIn1")),s.setLocal("itIn2",s.getLocal("pIn2")),s.setLocal("itOut",s.getLocal("pOut")),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.call(i,s.getLocal("itIn1"),s.getLocal("itIn2"),s.getLocal("itOut")),s.setLocal("itIn1",s.i32_add(s.getLocal("itIn1"),s.i32_const(a))),s.setLocal("itIn2",s.i32_add(s.getLocal("itIn2"),s.i32_const(a))),s.setLocal("itOut",s.i32_add(s.getLocal("itOut"),s.i32_const(o))),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}const bigInt$6=BigInteger.exports,buildInt=build_int,utils$a=utils$c,buildExp$2=build_timesscalar,buildBatchInverse$2=build_batchinverse,buildBatchConvertion$1=build_batchconvertion,buildBatchOp=build_batchop;var build_f1m=function(t,e,i,a){const o=bigInt$6(e),n=Math.floor((o.minus(1).bitLength()-1)/64)+1,r=2*n,s=8*n,l=i||"f1m";if(t.modules[l])return l;const c=buildInt(t,n,a),d=t.alloc(s,utils$a.bigInt2BytesLE(o,s));t.alloc(utils$a.bigInt2BytesLE(bigInt$6.one.shiftLeft(64*n).mod(o),s));const u=t.alloc(utils$a.bigInt2BytesLE(bigInt$6.one.shiftLeft(64*n).square().mod(o),s)),g=t.alloc(utils$a.bigInt2BytesLE(bigInt$6.one.shiftLeft(64*n).mod(o),s)),f=t.alloc(utils$a.bigInt2BytesLE(bigInt$6.zero,s)),h=o.minus(bigInt$6.one),_=h.shiftRight(1),p=t.alloc(s,utils$a.bigInt2BytesLE(_,s)),m=_.add(bigInt$6.one),b=t.alloc(s,utils$a.bigInt2BytesLE(m,s));t.modules[l]={pq:d,pR2:u,n64:n,q:o,pOne:g,pZero:f,pePlusOne:b};let L=bigInt$6(2);if(o.isPrime())for(;!L.modPow(_,o).equals(h);)L=L.add(bigInt$6.one);t.alloc(utils$a.bigInt2BytesLE(L.shiftLeft(64*n).mod(o),s));let w=0,y=h;for(;!y.isOdd()&&!y.isZero();)w++,y=y.shiftRight(1);const A=t.alloc(s,utils$a.bigInt2BytesLE(y,s)),I=L.modPow(y,o),C=t.alloc(utils$a.bigInt2BytesLE(I.shiftLeft(64*n).mod(o),s)),B=y.add(1).shiftRight(1),E=t.alloc(s,utils$a.bigInt2BytesLE(B,s));return t.exportFunction(c+"_copy",l+"_copy"),t.exportFunction(c+"_zero",l+"_zero"),t.exportFunction(c+"_isZero",l+"_isZero"),t.exportFunction(c+"_eq",l+"_eq"),function(){const e=t.addFunction(l+"_isOne");e.addParam("x","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(i.ret(i.call(c+"_eq",i.getLocal("x"),i.i32_const(g))))}(),function(){const e=t.addFunction(l+"_add");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.if(i.call(c+"_add",i.getLocal("x"),i.getLocal("y"),i.getLocal("r")),i.drop(i.call(c+"_sub",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))),i.if(i.call(c+"_gte",i.getLocal("r"),i.i32_const(d)),i.drop(i.call(c+"_sub",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))))))}(),function(){const e=t.addFunction(l+"_sub");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.if(i.call(c+"_sub",i.getLocal("x"),i.getLocal("y"),i.getLocal("r")),i.drop(i.call(c+"_add",i.getLocal("r"),i.i32_const(d),i.getLocal("r")))))}(),function(){const e=t.addFunction(l+"_neg");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(l+"_sub",i.i32_const(f),i.getLocal("x"),i.getLocal("r")))}(),function(){const e=t.alloc(r*r*8),i=t.addFunction(l+"_mReduct");i.addParam("t","i32"),i.addParam("r","i32"),i.addLocal("np32","i64"),i.addLocal("c","i64"),i.addLocal("m","i64");const a=i.getCodeBuilder(),n=bigInt$6("100000000",16).minus(o.modInv(bigInt$6("100000000",16))).toJSNumber();i.addCode(a.setLocal("np32",a.i64_const(n)));for(let t=0;t<r;t++){i.addCode(a.setLocal("c",a.i64_const(0))),i.addCode(a.setLocal("m",a.i64_and(a.i64_mul(a.i64_load32_u(a.getLocal("t"),4*t),a.getLocal("np32")),a.i64_const("0xFFFFFFFF"))));for(let e=0;e<r;e++)i.addCode(a.setLocal("c",a.i64_add(a.i64_add(a.i64_load32_u(a.getLocal("t"),4*(t+e)),a.i64_shr_u(a.getLocal("c"),a.i64_const(32))),a.i64_mul(a.i64_load32_u(a.i32_const(d),4*e),a.getLocal("m"))))),i.addCode(a.i64_store32(a.getLocal("t"),4*(t+e),a.getLocal("c")));i.addCode(a.i64_store32(a.i32_const(e),4*t,a.i64_shr_u(a.getLocal("c"),a.i64_const(32))))}i.addCode(a.call(l+"_add",a.i32_const(e),a.i32_add(a.getLocal("t"),a.i32_const(4*r)),a.getLocal("r")))}(),function(){const e=t.addFunction(l+"_mul");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32"),e.addLocal("c0","i64"),e.addLocal("c1","i64"),e.addLocal("np32","i64");for(let t=0;t<r;t++)e.addLocal("x"+t,"i64"),e.addLocal("y"+t,"i64"),e.addLocal("m"+t,"i64"),e.addLocal("q"+t,"i64");const i=e.getCodeBuilder(),a=bigInt$6("100000000",16).minus(o.modInv(bigInt$6("100000000",16))).toJSNumber();e.addCode(i.setLocal("np32",i.i64_const(a)));const n=[],s=[],u=[];function g(t,e){let a,o;return n[t]?a=i.getLocal("x"+t):(a=i.teeLocal("x"+t,i.i64_load32_u(i.getLocal("x"),4*t)),n[t]=!0),s[e]?o=i.getLocal("y"+e):(o=i.teeLocal("y"+e,i.i64_load32_u(i.getLocal("y"),4*e)),s[e]=!0),i.i64_mul(a,o)}function f(t,e){let a,o;return u[t]?a=i.getLocal("q"+t):(a=i.teeLocal("q"+t,i.i64_load32_u(i.i32_const(0),d+4*t)),u[t]=!0),o=i.getLocal("m"+e),i.i64_mul(a,o)}let h="c0",_="c1";for(let t=0;t<2*r-1;t++){for(let a=Math.max(0,t-r+1);a<=t&&a<r;a++){const o=t-a;e.addCode(i.setLocal(h,i.i64_add(i.i64_and(i.getLocal(h),i.i64_const(4294967295)),g(a,o)))),e.addCode(i.setLocal(_,i.i64_add(i.getLocal(_),i.i64_shr_u(i.getLocal(h),i.i64_const(32)))))}for(let a=Math.max(1,t-r+1);a<=t&&a<r;a++){const o=t-a;e.addCode(i.setLocal(h,i.i64_add(i.i64_and(i.getLocal(h),i.i64_const(4294967295)),f(a,o)))),e.addCode(i.setLocal(_,i.i64_add(i.getLocal(_),i.i64_shr_u(i.getLocal(h),i.i64_const(32)))))}t<r&&(e.addCode(i.setLocal("m"+t,i.i64_and(i.i64_mul(i.i64_and(i.getLocal(h),i.i64_const(4294967295)),i.getLocal("np32")),i.i64_const("0xFFFFFFFF")))),e.addCode(i.setLocal(h,i.i64_add(i.i64_and(i.getLocal(h),i.i64_const(4294967295)),f(0,t)))),e.addCode(i.setLocal(_,i.i64_add(i.getLocal(_),i.i64_shr_u(i.getLocal(h),i.i64_const(32)))))),t>=r&&e.addCode(i.i64_store32(i.getLocal("r"),4*(t-r),i.getLocal(h))),[h,_]=[_,h],e.addCode(i.setLocal(_,i.i64_shr_u(i.getLocal(h),i.i64_const(32))))}e.addCode(i.i64_store32(i.getLocal("r"),4*r-4,i.getLocal(h))),e.addCode(i.if(i.i32_wrap_i64(i.getLocal(_)),i.drop(i.call(c+"_sub",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))),i.if(i.call(c+"_gte",i.getLocal("r"),i.i32_const(d)),i.drop(i.call(c+"_sub",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))))))}(),function(){const e=t.addFunction(l+"_square");e.addParam("x","i32"),e.addParam("r","i32"),e.addLocal("c0","i64"),e.addLocal("c1","i64"),e.addLocal("c0_old","i64"),e.addLocal("c1_old","i64"),e.addLocal("np32","i64");for(let t=0;t<r;t++)e.addLocal("x"+t,"i64"),e.addLocal("m"+t,"i64"),e.addLocal("q"+t,"i64");const i=e.getCodeBuilder(),a=bigInt$6("100000000",16).minus(o.modInv(bigInt$6("100000000",16))).toJSNumber();e.addCode(i.setLocal("np32",i.i64_const(a)));const n=[],s=[];function u(t,e){let a,o;return n[t]?a=i.getLocal("x"+t):(a=i.teeLocal("x"+t,i.i64_load32_u(i.getLocal("x"),4*t)),n[t]=!0),n[e]?o=i.getLocal("x"+e):(o=i.teeLocal("x"+e,i.i64_load32_u(i.getLocal("x"),4*e)),n[e]=!0),i.i64_mul(a,o)}function g(t,e){let a,o;return s[t]?a=i.getLocal("q"+t):(a=i.teeLocal("q"+t,i.i64_load32_u(i.i32_const(0),d+4*t)),s[t]=!0),o=i.getLocal("m"+e),i.i64_mul(a,o)}let f="c0",h="c1",_="c0_old",p="c1_old";for(let t=0;t<2*r-1;t++){e.addCode(i.setLocal(f,i.i64_const(0)),i.setLocal(h,i.i64_const(0)));for(let a=Math.max(0,t-r+1);a<t+1>>1&&a<r;a++){const o=t-a;e.addCode(i.setLocal(f,i.i64_add(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),u(a,o)))),e.addCode(i.setLocal(h,i.i64_add(i.getLocal(h),i.i64_shr_u(i.getLocal(f),i.i64_const(32)))))}e.addCode(i.setLocal(f,i.i64_shl(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),i.i64_const(1)))),e.addCode(i.setLocal(h,i.i64_add(i.i64_shl(i.getLocal(h),i.i64_const(1)),i.i64_shr_u(i.getLocal(f),i.i64_const(32))))),t%2==0&&(e.addCode(i.setLocal(f,i.i64_add(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),u(t>>1,t>>1)))),e.addCode(i.setLocal(h,i.i64_add(i.getLocal(h),i.i64_shr_u(i.getLocal(f),i.i64_const(32)))))),t>0&&(e.addCode(i.setLocal(f,i.i64_add(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),i.i64_and(i.getLocal(_),i.i64_const(4294967295))))),e.addCode(i.setLocal(h,i.i64_add(i.i64_add(i.getLocal(h),i.i64_shr_u(i.getLocal(f),i.i64_const(32))),i.getLocal(p)))));for(let a=Math.max(1,t-r+1);a<=t&&a<r;a++){const o=t-a;e.addCode(i.setLocal(f,i.i64_add(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),g(a,o)))),e.addCode(i.setLocal(h,i.i64_add(i.getLocal(h),i.i64_shr_u(i.getLocal(f),i.i64_const(32)))))}t<r&&(e.addCode(i.setLocal("m"+t,i.i64_and(i.i64_mul(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),i.getLocal("np32")),i.i64_const("0xFFFFFFFF")))),e.addCode(i.setLocal(f,i.i64_add(i.i64_and(i.getLocal(f),i.i64_const(4294967295)),g(0,t)))),e.addCode(i.setLocal(h,i.i64_add(i.getLocal(h),i.i64_shr_u(i.getLocal(f),i.i64_const(32)))))),t>=r&&e.addCode(i.i64_store32(i.getLocal("r"),4*(t-r),i.getLocal(f))),e.addCode(i.setLocal(_,i.getLocal(h)),i.setLocal(p,i.i64_shr_u(i.getLocal(_),i.i64_const(32))))}e.addCode(i.i64_store32(i.getLocal("r"),4*r-4,i.getLocal(_))),e.addCode(i.if(i.i32_wrap_i64(i.getLocal(p)),i.drop(i.call(c+"_sub",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))),i.if(i.call(c+"_gte",i.getLocal("r"),i.i32_const(d)),i.drop(i.call(c+"_sub",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))))))}(),function(){const e=t.addFunction(l+"_squareOld");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(l+"_mul",i.getLocal("x"),i.getLocal("x"),i.getLocal("r")))}(),function(){const e=t.addFunction(l+"_toMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(l+"_mul",i.getLocal("x"),i.i32_const(u),i.getLocal("r")))}(),function(){const e=t.alloc(2*s),i=t.addFunction(l+"_fromMontgomery");i.addParam("x","i32"),i.addParam("r","i32");const a=i.getCodeBuilder();i.addCode(a.call(c+"_copy",a.getLocal("x"),a.i32_const(e))),i.addCode(a.call(c+"_zero",a.i32_const(e+s))),i.addCode(a.call(l+"_mReduct",a.i32_const(e),a.getLocal("r")))}(),function(){const e=t.addFunction(l+"_isNegative");e.addParam("x","i32"),e.setReturnType("i32");const i=e.getCodeBuilder(),a=i.i32_const(t.alloc(s));e.addCode(i.call(l+"_fromMontgomery",i.getLocal("x"),a),i.call(c+"_gte",a,i.i32_const(b)))}(),function(){const e=t.addFunction(l+"_sign");e.addParam("x","i32"),e.setReturnType("i32");const i=e.getCodeBuilder(),a=i.i32_const(t.alloc(s));e.addCode(i.if(i.call(c+"_isZero",i.getLocal("x")),i.ret(i.i32_const(0))),i.call(l+"_fromMontgomery",i.getLocal("x"),a),i.if(i.call(c+"_gte",a,i.i32_const(b)),i.ret(i.i32_const(-1))),i.ret(i.i32_const(1)))}(),function(){const e=t.addFunction(l+"_inverse");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(l+"_fromMontgomery",i.getLocal("x"),i.getLocal("r"))),e.addCode(i.call(c+"_inverseMod",i.getLocal("r"),i.i32_const(d),i.getLocal("r"))),e.addCode(i.call(l+"_toMontgomery",i.getLocal("r"),i.getLocal("r")))}(),function(){const e=t.addFunction(l+"_one");e.addParam("pr","i32");const i=e.getCodeBuilder();e.addCode(i.call(c+"_copy",i.i32_const(g),i.getLocal("pr")))}(),function(){const e=t.addFunction(l+"_load");e.addParam("scalar","i32"),e.addParam("scalarLen","i32"),e.addParam("r","i32"),e.addLocal("p","i32"),e.addLocal("l","i32"),e.addLocal("i","i32"),e.addLocal("j","i32");const i=e.getCodeBuilder(),a=i.i32_const(t.alloc(s)),o=t.alloc(s),n=i.i32_const(o);e.addCode(i.call(c+"_zero",i.getLocal("r")),i.setLocal("i",i.i32_const(s)),i.setLocal("p",i.getLocal("scalar")),i.block(i.loop(i.br_if(1,i.i32_gt_u(i.getLocal("i"),i.getLocal("scalarLen"))),i.if(i.i32_eq(i.getLocal("i"),i.i32_const(s)),i.call(l+"_one",a),i.call(l+"_mul",a,i.i32_const(u),a)),i.call(l+"_mul",i.getLocal("p"),a,n),i.call(l+"_add",i.getLocal("r"),n,i.getLocal("r")),i.setLocal("p",i.i32_add(i.getLocal("p"),i.i32_const(s))),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(s))),i.br(0))),i.setLocal("l",i.i32_rem_u(i.getLocal("scalarLen"),i.i32_const(s))),i.if(i.i32_eqz(i.getLocal("l")),i.ret([])),i.call(c+"_zero",n),i.setLocal("j",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("j"),i.getLocal("l"))),i.i32_store8(i.getLocal("j"),o,i.i32_load8_u(i.getLocal("p"))),i.setLocal("p",i.i32_add(i.getLocal("p"),i.i32_const(1))),i.setLocal("j",i.i32_add(i.getLocal("j"),i.i32_const(1))),i.br(0))),i.if(i.i32_eq(i.getLocal("i"),i.i32_const(s)),i.call(l+"_one",a),i.call(l+"_mul",a,i.i32_const(u),a)),i.call(l+"_mul",n,a,n),i.call(l+"_add",i.getLocal("r"),n,i.getLocal("r")))}(),function(){const e=t.addFunction(l+"_timesScalar");e.addParam("x","i32"),e.addParam("scalar","i32"),e.addParam("scalarLen","i32"),e.addParam("r","i32");const i=e.getCodeBuilder(),a=i.i32_const(t.alloc(s));e.addCode(i.call(l+"_load",i.getLocal("scalar"),i.getLocal("scalarLen"),a),i.call(l+"_toMontgomery",a,a),i.call(l+"_mul",i.getLocal("x"),a,i.getLocal("r")))}(),buildBatchInverse$2(t,l),buildBatchConvertion$1(t,l+"_batchToMontgomery",l+"_toMontgomery",s,s),buildBatchConvertion$1(t,l+"_batchFromMontgomery",l+"_fromMontgomery",s,s),buildBatchConvertion$1(t,l+"_batchNeg",l+"_neg",s,s),buildBatchOp(t,l+"_batchAdd",l+"_add",s,s),buildBatchOp(t,l+"_batchSub",l+"_sub",s,s),buildBatchOp(t,l+"_batchMul",l+"_mul",s,s),t.exportFunction(l+"_add"),t.exportFunction(l+"_sub"),t.exportFunction(l+"_neg"),t.exportFunction(l+"_isNegative"),t.exportFunction(l+"_isOne"),t.exportFunction(l+"_sign"),t.exportFunction(l+"_mReduct"),t.exportFunction(l+"_mul"),t.exportFunction(l+"_square"),t.exportFunction(l+"_squareOld"),t.exportFunction(l+"_fromMontgomery"),t.exportFunction(l+"_toMontgomery"),t.exportFunction(l+"_inverse"),t.exportFunction(l+"_one"),t.exportFunction(l+"_load"),t.exportFunction(l+"_timesScalar"),buildExp$2(t,l+"_exp",s,l+"_mul",l+"_square",c+"_copy",l+"_one"),t.exportFunction(l+"_exp"),t.exportFunction(l+"_batchInverse"),o.isPrime()&&(!function(){const e=t.addFunction(l+"_sqrt");e.addParam("n","i32"),e.addParam("r","i32"),e.addLocal("m","i32"),e.addLocal("i","i32"),e.addLocal("j","i32");const i=e.getCodeBuilder(),a=i.i32_const(g),o=i.i32_const(t.alloc(s)),n=i.i32_const(t.alloc(s)),r=i.i32_const(t.alloc(s)),c=i.i32_const(t.alloc(s)),d=i.i32_const(t.alloc(s));e.addCode(i.if(i.call(l+"_isZero",i.getLocal("n")),i.ret(i.call(l+"_zero",i.getLocal("r")))),i.setLocal("m",i.i32_const(w)),i.call(l+"_copy",i.i32_const(C),o),i.call(l+"_exp",i.getLocal("n"),i.i32_const(A),i.i32_const(s),n),i.call(l+"_exp",i.getLocal("n"),i.i32_const(E),i.i32_const(s),r),i.block(i.loop(i.br_if(1,i.call(l+"_eq",n,a)),i.call(l+"_square",n,c),i.setLocal("i",i.i32_const(1)),i.block(i.loop(i.br_if(1,i.call(l+"_eq",c,a)),i.call(l+"_square",c,c),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))),i.call(l+"_copy",o,d),i.setLocal("j",i.i32_sub(i.i32_sub(i.getLocal("m"),i.getLocal("i")),i.i32_const(1))),i.block(i.loop(i.br_if(1,i.i32_eqz(i.getLocal("j"))),i.call(l+"_square",d,d),i.setLocal("j",i.i32_sub(i.getLocal("j"),i.i32_const(1))),i.br(0))),i.setLocal("m",i.getLocal("i")),i.call(l+"_square",d,o),i.call(l+"_mul",n,o,n),i.call(l+"_mul",r,d,r),i.br(0))),i.if(i.call(l+"_isNegative",r),i.call(l+"_neg",r,i.getLocal("r")),i.call(l+"_copy",r,i.getLocal("r"))))}(),function(){const e=t.addFunction(l+"_isSquare");e.addParam("n","i32"),e.setReturnType("i32");const i=e.getCodeBuilder(),a=i.i32_const(g),o=i.i32_const(t.alloc(s));e.addCode(i.if(i.call(l+"_isZero",i.getLocal("n")),i.ret(i.i32_const(1))),i.call(l+"_exp",i.getLocal("n"),i.i32_const(p),i.i32_const(s),o),i.call(l+"_eq",o,a))}(),t.exportFunction(l+"_sqrt"),t.exportFunction(l+"_isSquare")),t.exportFunction(l+"_batchToMontgomery"),t.exportFunction(l+"_batchFromMontgomery"),l};const bigInt$5=BigInteger.exports,buildF1m$2=build_f1m;var build_f1=function(t,e,i,a,o){const n=bigInt$5(e),r=Math.floor((n.minus(1).bitLength()-1)/64)+1,s=8*r,l=i||"f1";if(t.modules[l])return l;t.modules[l]={n64:r};const c=o||"int",d=buildF1m$2(t,n,a,c),u=t.modules[d].pR2,g=t.modules[d].pq,f=t.modules[d].pePlusOne;return function(){const e=t.alloc(s),i=t.addFunction(l+"_mul");i.addParam("x","i32"),i.addParam("y","i32"),i.addParam("r","i32");const a=i.getCodeBuilder();i.addCode(a.call(d+"_mul",a.getLocal("x"),a.getLocal("y"),a.i32_const(e))),i.addCode(a.call(d+"_mul",a.i32_const(e),a.i32_const(u),a.getLocal("r")))}(),function(){const e=t.addFunction(l+"_square");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(l+"_mul",i.getLocal("x"),i.getLocal("x"),i.getLocal("r")))}(),function(){const e=t.addFunction(l+"_inverse");e.addParam("x","i32"),e.addParam("r","i32");const i=e.getCodeBuilder();e.addCode(i.call(c+"_inverseMod",i.getLocal("x"),i.i32_const(g),i.getLocal("r")))}(),function(){const e=t.addFunction(l+"_isNegative");e.addParam("x","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(i.call(c+"_gte",i.getLocal("x"),i.i32_const(f)))}(),t.exportFunction(d+"_add",l+"_add"),t.exportFunction(d+"_sub",l+"_sub"),t.exportFunction(d+"_neg",l+"_neg"),t.exportFunction(l+"_mul"),t.exportFunction(l+"_square"),t.exportFunction(l+"_inverse"),t.exportFunction(l+"_isNegative"),t.exportFunction(d+"_copy",l+"_copy"),t.exportFunction(d+"_zero",l+"_zero"),t.exportFunction(d+"_one",l+"_one"),t.exportFunction(d+"_isZero",l+"_isZero"),t.exportFunction(d+"_eq",l+"_eq"),l};const buildExp$1=build_timesscalar,buildBatchInverse$1=build_batchinverse,bigInt$4=BigInteger.exports,utils$9=utils$c;var build_f2m=function(t,e,i,a){if(t.modules[i])return i;const o=8*t.modules[a].n64,n=t.modules[a].q;return t.modules[i]={n64:2*t.modules[a].n64},function(){const e=t.addFunction(i+"_isZero");e.addParam("x","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o));e.addCode(n.i32_and(n.call(a+"_isZero",r),n.call(a+"_isZero",s)))}(),function(){const e=t.addFunction(i+"_isOne");e.addParam("x","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o));e.addCode(n.ret(n.i32_and(n.call(a+"_isOne",r),n.call(a+"_isZero",s))))}(),function(){const e=t.addFunction(i+"_zero");e.addParam("x","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o));e.addCode(n.call(a+"_zero",r),n.call(a+"_zero",s))}(),function(){const e=t.addFunction(i+"_one");e.addParam("x","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o));e.addCode(n.call(a+"_one",r),n.call(a+"_zero",s))}(),function(){const e=t.addFunction(i+"_copy");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("r"),c=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_copy",r,l),n.call(a+"_copy",s,c))}(),function(){const n=t.addFunction(i+"_mul");n.addParam("x","i32"),n.addParam("y","i32"),n.addParam("r","i32");const r=n.getCodeBuilder(),s=r.getLocal("x"),l=r.i32_add(r.getLocal("x"),r.i32_const(o)),c=r.getLocal("y"),d=r.i32_add(r.getLocal("y"),r.i32_const(o)),u=r.getLocal("r"),g=r.i32_add(r.getLocal("r"),r.i32_const(o)),f=r.i32_const(t.alloc(o)),h=r.i32_const(t.alloc(o)),_=r.i32_const(t.alloc(o)),p=r.i32_const(t.alloc(o));n.addCode(r.call(a+"_mul",s,c,f),r.call(a+"_mul",l,d,h),r.call(a+"_add",s,l,_),r.call(a+"_add",c,d,p),r.call(a+"_mul",_,p,_),r.call(e,h,u),r.call(a+"_add",f,u,u),r.call(a+"_add",f,h,g),r.call(a+"_sub",_,g,g))}(),function(){const e=t.addFunction(i+"_mul1");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("y"),c=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_mul",r,l,c),n.call(a+"_mul",s,l,d))}(),function(){const n=t.addFunction(i+"_square");n.addParam("x","i32"),n.addParam("r","i32");const r=n.getCodeBuilder(),s=r.getLocal("x"),l=r.i32_add(r.getLocal("x"),r.i32_const(o)),c=r.getLocal("r"),d=r.i32_add(r.getLocal("r"),r.i32_const(o)),u=r.i32_const(t.alloc(o)),g=r.i32_const(t.alloc(o)),f=r.i32_const(t.alloc(o)),h=r.i32_const(t.alloc(o));n.addCode(r.call(a+"_mul",s,l,u),r.call(a+"_add",s,l,g),r.call(e,l,f),r.call(a+"_add",s,f,f),r.call(e,u,h),r.call(a+"_add",h,u,h),r.call(a+"_mul",g,f,c),r.call(a+"_sub",c,h,c),r.call(a+"_add",u,u,d))}(),function(){const e=t.addFunction(i+"_add");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("y"),c=n.i32_add(n.getLocal("y"),n.i32_const(o)),d=n.getLocal("r"),u=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_add",r,l,d),n.call(a+"_add",s,c,u))}(),function(){const e=t.addFunction(i+"_sub");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("y"),c=n.i32_add(n.getLocal("y"),n.i32_const(o)),d=n.getLocal("r"),u=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_sub",r,l,d),n.call(a+"_sub",s,c,u))}(),function(){const e=t.addFunction(i+"_neg");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("r"),c=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_neg",r,l),n.call(a+"_neg",s,c))}(),function(){const e=t.addFunction(i+"_conjugate");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("r"),c=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_copy",r,l),n.call(a+"_neg",s,c))}(),function(){const e=t.addFunction(i+"_toMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("r"),c=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_toMontgomery",r,l),n.call(a+"_toMontgomery",s,c))}(),function(){const e=t.addFunction(i+"_fromMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("r"),c=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_fromMontgomery",r,l),n.call(a+"_fromMontgomery",s,c))}(),function(){const e=t.addFunction(i+"_eq");e.addParam("x","i32"),e.addParam("y","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("y"),c=n.i32_add(n.getLocal("y"),n.i32_const(o));e.addCode(n.i32_and(n.call(a+"_eq",r,l),n.call(a+"_eq",s,c)))}(),function(){const n=t.addFunction(i+"_inverse");n.addParam("x","i32"),n.addParam("r","i32");const r=n.getCodeBuilder(),s=r.getLocal("x"),l=r.i32_add(r.getLocal("x"),r.i32_const(o)),c=r.getLocal("r"),d=r.i32_add(r.getLocal("r"),r.i32_const(o)),u=r.i32_const(t.alloc(o)),g=r.i32_const(t.alloc(o)),f=r.i32_const(t.alloc(o)),h=r.i32_const(t.alloc(o));n.addCode(r.call(a+"_square",s,u),r.call(a+"_square",l,g),r.call(e,g,f),r.call(a+"_sub",u,f,f),r.call(a+"_inverse",f,h),r.call(a+"_mul",s,h,c),r.call(a+"_mul",l,h,d),r.call(a+"_neg",d,d))}(),function(){const e=t.addFunction(i+"_timesScalar");e.addParam("x","i32"),e.addParam("scalar","i32"),e.addParam("scalarLen","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.getLocal("r"),c=n.i32_add(n.getLocal("r"),n.i32_const(o));e.addCode(n.call(a+"_timesScalar",r,n.getLocal("scalar"),n.getLocal("scalarLen"),l),n.call(a+"_timesScalar",s,n.getLocal("scalar"),n.getLocal("scalarLen"),c))}(),function(){const e=t.addFunction(i+"_sign");e.addParam("x","i32"),e.addLocal("s","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o));e.addCode(n.setLocal("s",n.call(a+"_sign",s)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.ret(n.call(a+"_sign",r)))}(),function(){const e=t.addFunction(i+"_isNegative");e.addParam("x","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o));e.addCode(n.if(n.call(a+"_isZero",s),n.ret(n.call(a+"_isNegative",r))),n.ret(n.call(a+"_isNegative",s)))}(),t.exportFunction(i+"_isZero"),t.exportFunction(i+"_isOne"),t.exportFunction(i+"_zero"),t.exportFunction(i+"_one"),t.exportFunction(i+"_copy"),t.exportFunction(i+"_mul"),t.exportFunction(i+"_mul1"),t.exportFunction(i+"_square"),t.exportFunction(i+"_add"),t.exportFunction(i+"_sub"),t.exportFunction(i+"_neg"),t.exportFunction(i+"_sign"),t.exportFunction(i+"_conjugate"),t.exportFunction(i+"_fromMontgomery"),t.exportFunction(i+"_toMontgomery"),t.exportFunction(i+"_eq"),t.exportFunction(i+"_inverse"),buildBatchInverse$1(t,i),buildExp$1(t,i+"_exp",2*o,i+"_mul",i+"_square",i+"_copy",i+"_one"),function(){const e=t.addFunction(i+"_sqrt");e.addParam("a","i32"),e.addParam("pr","i32");const r=e.getCodeBuilder(),s=r.i32_const(t.alloc(utils$9.bigInt2BytesLE(bigInt$4(n).minus(bigInt$4(3)).divide(4),o))),l=r.i32_const(t.alloc(utils$9.bigInt2BytesLE(bigInt$4(n).minus(bigInt$4(1)).divide(2),o))),c=r.getLocal("a"),d=r.i32_const(t.alloc(2*o)),u=r.i32_const(t.alloc(2*o)),g=r.i32_const(t.alloc(2*o)),f=t.alloc(2*o),h=r.i32_const(f),_=r.i32_const(f),p=r.i32_const(f+o),m=r.i32_const(t.alloc(2*o)),b=r.i32_const(t.alloc(2*o));e.addCode(r.call(i+"_one",h),r.call(i+"_neg",h,h),r.call(i+"_exp",c,s,r.i32_const(o),d),r.call(i+"_square",d,u),r.call(i+"_mul",c,u,u),r.call(i+"_conjugate",u,g),r.call(i+"_mul",g,u,g),r.if(r.call(i+"_eq",g,h),r.unreachable()),r.call(i+"_mul",d,c,m),r.if(r.call(i+"_eq",u,h),[...r.call(a+"_zero",_),...r.call(a+"_one",p),...r.call(i+"_mul",h,m,r.getLocal("pr"))],[...r.call(i+"_one",b),...r.call(i+"_add",b,u,b),...r.call(i+"_exp",b,l,r.i32_const(o),b),...r.call(i+"_mul",b,m,r.getLocal("pr"))]))}(),function(){const e=t.addFunction(i+"_isSquare");e.addParam("a","i32"),e.setReturnType("i32");const a=e.getCodeBuilder(),r=a.i32_const(t.alloc(utils$9.bigInt2BytesLE(bigInt$4(n).minus(bigInt$4(3)).divide(4),o))),s=a.getLocal("a"),l=a.i32_const(t.alloc(2*o)),c=a.i32_const(t.alloc(2*o)),d=a.i32_const(t.alloc(2*o)),u=t.alloc(2*o),g=a.i32_const(u);e.addCode(a.call(i+"_one",g),a.call(i+"_neg",g,g),a.call(i+"_exp",s,r,a.i32_const(o),l),a.call(i+"_square",l,c),a.call(i+"_mul",s,c,c),a.call(i+"_conjugate",c,d),a.call(i+"_mul",d,c,d),a.if(a.call(i+"_eq",d,g),a.ret(a.i32_const(0))),a.ret(a.i32_const(1)))}(),t.exportFunction(i+"_exp"),t.exportFunction(i+"_timesScalar"),t.exportFunction(i+"_batchInverse"),t.exportFunction(i+"_sqrt"),t.exportFunction(i+"_isSquare"),t.exportFunction(i+"_isNegative"),i};const buildExp=build_timesscalar,buildBatchInverse=build_batchinverse;var build_f3m=function(t,e,i,a){if(t.modules[i])return i;const o=8*t.modules[a].n64;return t.modules[i]={n64:3*t.modules[a].n64},function(){const e=t.addFunction(i+"_isZero");e.addParam("x","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o));e.addCode(n.i32_and(n.i32_and(n.call(a+"_isZero",r),n.call(a+"_isZero",s)),n.call(a+"_isZero",l)))}(),function(){const e=t.addFunction(i+"_isOne");e.addParam("x","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o));e.addCode(n.ret(n.i32_and(n.i32_and(n.call(a+"_isOne",r),n.call(a+"_isZero",s)),n.call(a+"_isZero",l))))}(),function(){const e=t.addFunction(i+"_zero");e.addParam("x","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o));e.addCode(n.call(a+"_zero",r),n.call(a+"_zero",s),n.call(a+"_zero",l))}(),function(){const e=t.addFunction(i+"_one");e.addParam("x","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o));e.addCode(n.call(a+"_one",r),n.call(a+"_zero",s),n.call(a+"_zero",l))}(),function(){const e=t.addFunction(i+"_copy");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(o)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_copy",r,c),n.call(a+"_copy",s,d),n.call(a+"_copy",l,u))}(),function(){const n=t.addFunction(i+"_mul");n.addParam("x","i32"),n.addParam("y","i32"),n.addParam("r","i32");const r=n.getCodeBuilder(),s=r.getLocal("x"),l=r.i32_add(r.getLocal("x"),r.i32_const(o)),c=r.i32_add(r.getLocal("x"),r.i32_const(2*o)),d=r.getLocal("y"),u=r.i32_add(r.getLocal("y"),r.i32_const(o)),g=r.i32_add(r.getLocal("y"),r.i32_const(2*o)),f=r.getLocal("r"),h=r.i32_add(r.getLocal("r"),r.i32_const(o)),_=r.i32_add(r.getLocal("r"),r.i32_const(2*o)),p=r.i32_const(t.alloc(o)),m=r.i32_const(t.alloc(o)),b=r.i32_const(t.alloc(o)),L=r.i32_const(t.alloc(o)),w=r.i32_const(t.alloc(o)),y=r.i32_const(t.alloc(o)),A=r.i32_const(t.alloc(o)),I=r.i32_const(t.alloc(o)),C=r.i32_const(t.alloc(o)),B=r.i32_const(t.alloc(o)),E=r.i32_const(t.alloc(o)),F=r.i32_const(t.alloc(o)),S=r.i32_const(t.alloc(o));n.addCode(r.call(a+"_mul",s,d,p),r.call(a+"_mul",l,u,m),r.call(a+"_mul",c,g,b),r.call(a+"_add",s,l,L),r.call(a+"_add",d,u,w),r.call(a+"_add",s,c,y),r.call(a+"_add",d,g,A),r.call(a+"_add",l,c,I),r.call(a+"_add",u,g,C),r.call(a+"_add",p,m,B),r.call(a+"_add",p,b,E),r.call(a+"_add",m,b,F),r.call(a+"_mul",I,C,f),r.call(a+"_sub",f,F,f),r.call(e,f,f),r.call(a+"_add",p,f,f),r.call(a+"_mul",L,w,h),r.call(a+"_sub",h,B,h),r.call(e,b,S),r.call(a+"_add",h,S,h),r.call(a+"_mul",y,A,_),r.call(a+"_sub",_,E,_),r.call(a+"_add",_,m,_))}(),function(){const n=t.addFunction(i+"_square");n.addParam("x","i32"),n.addParam("r","i32");const r=n.getCodeBuilder(),s=r.getLocal("x"),l=r.i32_add(r.getLocal("x"),r.i32_const(o)),c=r.i32_add(r.getLocal("x"),r.i32_const(2*o)),d=r.getLocal("r"),u=r.i32_add(r.getLocal("r"),r.i32_const(o)),g=r.i32_add(r.getLocal("r"),r.i32_const(2*o)),f=r.i32_const(t.alloc(o)),h=r.i32_const(t.alloc(o)),_=r.i32_const(t.alloc(o)),p=r.i32_const(t.alloc(o)),m=r.i32_const(t.alloc(o)),b=r.i32_const(t.alloc(o)),L=r.i32_const(t.alloc(o));n.addCode(r.call(a+"_square",s,f),r.call(a+"_mul",s,l,h),r.call(a+"_add",h,h,_),r.call(a+"_sub",s,l,p),r.call(a+"_add",p,c,p),r.call(a+"_square",p,p),r.call(a+"_mul",l,c,m),r.call(a+"_add",m,m,b),r.call(a+"_square",c,L),r.call(e,b,d),r.call(a+"_add",f,d,d),r.call(e,L,u),r.call(a+"_add",_,u,u),r.call(a+"_add",f,L,g),r.call(a+"_sub",b,g,g),r.call(a+"_add",p,g,g),r.call(a+"_add",_,g,g))}(),function(){const e=t.addFunction(i+"_add");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(o)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*o)),g=n.getLocal("r"),f=n.i32_add(n.getLocal("r"),n.i32_const(o)),h=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_add",r,c,g),n.call(a+"_add",s,d,f),n.call(a+"_add",l,u,h))}(),function(){const e=t.addFunction(i+"_sub");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(o)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*o)),g=n.getLocal("r"),f=n.i32_add(n.getLocal("r"),n.i32_const(o)),h=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_sub",r,c,g),n.call(a+"_sub",s,d,f),n.call(a+"_sub",l,u,h))}(),function(){const e=t.addFunction(i+"_neg");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(o)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_neg",r,c),n.call(a+"_neg",s,d),n.call(a+"_neg",l,u))}(),function(){const e=t.addFunction(i+"_sign");e.addParam("x","i32"),e.addLocal("s","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o));e.addCode(n.setLocal("s",n.call(a+"_sign",l)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.setLocal("s",n.call(a+"_sign",s)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.ret(n.call(a+"_sign",r)))}(),function(){const e=t.addFunction(i+"_toMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(o)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_toMontgomery",r,c),n.call(a+"_toMontgomery",s,d),n.call(a+"_toMontgomery",l,u))}(),function(){const e=t.addFunction(i+"_fromMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(o)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_fromMontgomery",r,c),n.call(a+"_fromMontgomery",s,d),n.call(a+"_fromMontgomery",l,u))}(),function(){const e=t.addFunction(i+"_eq");e.addParam("x","i32"),e.addParam("y","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(o)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*o));e.addCode(n.i32_and(n.i32_and(n.call(a+"_eq",r,c),n.call(a+"_eq",s,d)),n.call(a+"_eq",l,u)))}(),function(){const n=t.addFunction(i+"_inverse");n.addParam("x","i32"),n.addParam("r","i32");const r=n.getCodeBuilder(),s=r.getLocal("x"),l=r.i32_add(r.getLocal("x"),r.i32_const(o)),c=r.i32_add(r.getLocal("x"),r.i32_const(2*o)),d=r.getLocal("r"),u=r.i32_add(r.getLocal("r"),r.i32_const(o)),g=r.i32_add(r.getLocal("r"),r.i32_const(2*o)),f=r.i32_const(t.alloc(o)),h=r.i32_const(t.alloc(o)),_=r.i32_const(t.alloc(o)),p=r.i32_const(t.alloc(o)),m=r.i32_const(t.alloc(o)),b=r.i32_const(t.alloc(o)),L=r.i32_const(t.alloc(o)),w=r.i32_const(t.alloc(o)),y=r.i32_const(t.alloc(o)),A=r.i32_const(t.alloc(o)),I=r.i32_const(t.alloc(o));n.addCode(r.call(a+"_square",s,f),r.call(a+"_square",l,h),r.call(a+"_square",c,_),r.call(a+"_mul",s,l,p),r.call(a+"_mul",s,c,m),r.call(a+"_mul",l,c,b),r.call(e,b,L),r.call(a+"_sub",f,L,L),r.call(e,_,w),r.call(a+"_sub",w,p,w),r.call(a+"_sub",h,m,y),r.call(a+"_mul",c,w,A),r.call(a+"_mul",l,y,I),r.call(a+"_add",A,I,A),r.call(e,A,A),r.call(a+"_mul",s,L,I),r.call(a+"_add",I,A,A),r.call(a+"_inverse",A,A),r.call(a+"_mul",A,L,d),r.call(a+"_mul",A,w,u),r.call(a+"_mul",A,y,g))}(),function(){const e=t.addFunction(i+"_timesScalar");e.addParam("x","i32"),e.addParam("scalar","i32"),e.addParam("scalarLen","i32"),e.addParam("r","i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o)),c=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(o)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*o));e.addCode(n.call(a+"_timesScalar",r,n.getLocal("scalar"),n.getLocal("scalarLen"),c),n.call(a+"_timesScalar",s,n.getLocal("scalar"),n.getLocal("scalarLen"),d),n.call(a+"_timesScalar",l,n.getLocal("scalar"),n.getLocal("scalarLen"),u))}(),function(){const e=t.addFunction(i+"_isNegative");e.addParam("x","i32"),e.setReturnType("i32");const n=e.getCodeBuilder(),r=n.getLocal("x"),s=n.i32_add(n.getLocal("x"),n.i32_const(o)),l=n.i32_add(n.getLocal("x"),n.i32_const(2*o));e.addCode(n.if(n.call(a+"_isZero",l),n.if(n.call(a+"_isZero",s),n.ret(n.call(a+"_isNegative",r)),n.ret(n.call(a+"_isNegative",s)))),n.ret(n.call(a+"_isNegative",l)))}(),t.exportFunction(i+"_isZero"),t.exportFunction(i+"_isOne"),t.exportFunction(i+"_zero"),t.exportFunction(i+"_one"),t.exportFunction(i+"_copy"),t.exportFunction(i+"_mul"),t.exportFunction(i+"_square"),t.exportFunction(i+"_add"),t.exportFunction(i+"_sub"),t.exportFunction(i+"_neg"),t.exportFunction(i+"_sign"),t.exportFunction(i+"_fromMontgomery"),t.exportFunction(i+"_toMontgomery"),t.exportFunction(i+"_eq"),t.exportFunction(i+"_inverse"),buildBatchInverse(t,i),buildExp(t,i+"_exp",3*o,i+"_mul",i+"_square",i+"_copy",i+"_one"),t.exportFunction(i+"_exp"),t.exportFunction(i+"_timesScalar"),t.exportFunction(i+"_batchInverse"),t.exportFunction(i+"_isNegative"),i},build_timesscalarnaf=function(t,e,i,a,o,n,r,s){const l=t.addFunction(e);l.addParam("base","i32"),l.addParam("scalar","i32"),l.addParam("scalarLength","i32"),l.addParam("r","i32"),l.addLocal("old0","i32"),l.addLocal("nbits","i32"),l.addLocal("i","i32"),l.addLocal("last","i32"),l.addLocal("cur","i32"),l.addLocal("carry","i32"),l.addLocal("p","i32");const c=l.getCodeBuilder(),d=c.i32_const(t.alloc(i));function u(t){return c.i32_and(c.i32_shr_u(c.i32_load(c.i32_add(c.getLocal("scalar"),c.i32_and(c.i32_shr_u(t,c.i32_const(3)),c.i32_const(4294967292)))),c.i32_and(t,c.i32_const(31))),c.i32_const(1))}function g(t){return[...c.i32_store8(c.getLocal("p"),c.i32_const(t)),...c.setLocal("p",c.i32_add(c.getLocal("p"),c.i32_const(1)))]}l.addCode(c.if(c.i32_eqz(c.getLocal("scalarLength")),[...c.call(s,c.getLocal("r")),...c.ret([])]),c.setLocal("nbits",c.i32_shl(c.getLocal("scalarLength"),c.i32_const(3))),c.setLocal("old0",c.i32_load(c.i32_const(0))),c.setLocal("p",c.getLocal("old0")),c.i32_store(c.i32_const(0),c.i32_and(c.i32_add(c.i32_add(c.getLocal("old0"),c.i32_const(32)),c.getLocal("nbits")),c.i32_const(4294967288))),c.setLocal("i",c.i32_const(1)),c.setLocal("last",u(c.i32_const(0))),c.setLocal("carry",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("nbits"))),c.setLocal("cur",u(c.getLocal("i"))),c.if(c.getLocal("last"),c.if(c.getLocal("cur"),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...g(1)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...g(255)]),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...g(255)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(0)),...g(1)])),c.if(c.getLocal("cur"),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(1)),...g(0)],[...c.setLocal("last",c.i32_const(1)),...c.setLocal("carry",c.i32_const(0)),...g(0)]),c.if(c.getLocal("carry"),[...c.setLocal("last",c.i32_const(1)),...c.setLocal("carry",c.i32_const(0)),...g(0)],[...c.setLocal("last",c.i32_const(0)),...c.setLocal("carry",c.i32_const(0)),...g(0)]))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))),c.if(c.getLocal("last"),c.if(c.getLocal("carry"),[...g(255),...g(0),...g(1)],[...g(1)]),c.if(c.getLocal("carry"),[...g(0),...g(1)])),c.setLocal("p",c.i32_sub(c.getLocal("p"),c.i32_const(1))),c.call(r,c.getLocal("base"),d),c.call(s,c.getLocal("r")),c.block(c.loop(c.call(o,c.getLocal("r"),c.getLocal("r")),c.setLocal("cur",c.i32_load8_u(c.getLocal("p"))),c.if(c.getLocal("cur"),c.if(c.i32_eq(c.getLocal("cur"),c.i32_const(1)),c.call(a,c.getLocal("r"),d,c.getLocal("r")),c.call(n,c.getLocal("r"),d,c.getLocal("r")))),c.br_if(1,c.i32_eq(c.getLocal("old0"),c.getLocal("p"))),c.setLocal("p",c.i32_sub(c.getLocal("p"),c.i32_const(1))),c.br(0))),c.i32_store(c.i32_const(0),c.getLocal("old0")))},build_multiexp=function(t,e,i,a,o){const n=8*t.modules[e].n64;function r(){const a=t.addFunction(i);a.addParam("pBases","i32"),a.addParam("pScalars","i32"),a.addParam("scalarSize","i32"),a.addParam("n","i32"),a.addParam("pr","i32"),a.addLocal("chunkSize","i32"),a.addLocal("nChunks","i32"),a.addLocal("itScalar","i32"),a.addLocal("endScalar","i32"),a.addLocal("itBase","i32"),a.addLocal("itBit","i32"),a.addLocal("i","i32"),a.addLocal("j","i32"),a.addLocal("nTable","i32"),a.addLocal("pTable","i32"),a.addLocal("idx","i32"),a.addLocal("pIdxTable","i32");const o=a.getCodeBuilder(),r=o.i32_const(t.alloc(n)),s=t.alloc([17,17,17,17,17,17,17,17,17,17,16,16,15,14,13,13,12,11,10,9,8,7,7,6,5,4,3,2,1,1,1,1]);a.addCode(o.call(e+"_zero",o.getLocal("pr")),o.if(o.i32_eqz(o.getLocal("n")),o.ret([])),o.setLocal("chunkSize",o.i32_load8_u(o.i32_clz(o.getLocal("n")),s)),o.setLocal("nChunks",o.i32_add(o.i32_div_u(o.i32_sub(o.i32_shl(o.getLocal("scalarSize"),o.i32_const(3)),o.i32_const(1)),o.getLocal("chunkSize")),o.i32_const(1))),o.setLocal("itBit",o.i32_mul(o.i32_sub(o.getLocal("nChunks"),o.i32_const(1)),o.getLocal("chunkSize"))),o.block(o.loop(o.br_if(1,o.i32_lt_s(o.getLocal("itBit"),o.i32_const(0))),o.if(o.i32_eqz(o.call(e+"_isZero",o.getLocal("pr"))),[...o.setLocal("j",o.i32_const(0)),...o.block(o.loop(o.br_if(1,o.i32_eq(o.getLocal("j"),o.getLocal("chunkSize"))),o.call(e+"_double",o.getLocal("pr"),o.getLocal("pr")),o.setLocal("j",o.i32_add(o.getLocal("j"),o.i32_const(1))),o.br(0)))]),o.call(i+"_chunk",o.getLocal("pBases"),o.getLocal("pScalars"),o.getLocal("scalarSize"),o.getLocal("n"),o.getLocal("itBit"),o.getLocal("chunkSize"),r),o.call(e+"_add",o.getLocal("pr"),r,o.getLocal("pr")),o.setLocal("itBit",o.i32_sub(o.getLocal("itBit"),o.getLocal("chunkSize"))),o.br(0))))}!function(){const e=t.addFunction(i+"_getChunk");e.addParam("pScalar","i32"),e.addParam("scalarSize","i32"),e.addParam("startBit","i32"),e.addParam("chunkSize","i32"),e.addLocal("bitsToEnd","i32"),e.addLocal("mask","i32"),e.setReturnType("i32");const a=e.getCodeBuilder();e.addCode(a.setLocal("bitsToEnd",a.i32_sub(a.i32_mul(a.getLocal("scalarSize"),a.i32_const(8)),a.getLocal("startBit"))),a.if(a.i32_gt_s(a.getLocal("chunkSize"),a.getLocal("bitsToEnd")),a.setLocal("mask",a.i32_sub(a.i32_shl(a.i32_const(1),a.getLocal("bitsToEnd")),a.i32_const(1))),a.setLocal("mask",a.i32_sub(a.i32_shl(a.i32_const(1),a.getLocal("chunkSize")),a.i32_const(1)))),a.i32_and(a.i32_shr_u(a.i32_load(a.i32_add(a.getLocal("pScalar"),a.i32_shr_u(a.getLocal("startBit"),a.i32_const(3))),0,0),a.i32_and(a.getLocal("startBit"),a.i32_const(7))),a.getLocal("mask")))}(),function(){const a=t.addFunction(i+"_reduceTable");a.addParam("pTable","i32"),a.addParam("p","i32"),a.addLocal("half","i32"),a.addLocal("it1","i32"),a.addLocal("it2","i32"),a.addLocal("pAcc","i32");const o=a.getCodeBuilder();a.addCode(o.if(o.i32_eq(o.getLocal("p"),o.i32_const(1)),o.ret([])),o.setLocal("half",o.i32_shl(o.i32_const(1),o.i32_sub(o.getLocal("p"),o.i32_const(1)))),o.setLocal("it1",o.getLocal("pTable")),o.setLocal("it2",o.i32_add(o.getLocal("pTable"),o.i32_mul(o.getLocal("half"),o.i32_const(n)))),o.setLocal("pAcc",o.i32_sub(o.getLocal("it2"),o.i32_const(n))),o.block(o.loop(o.br_if(1,o.i32_eq(o.getLocal("it1"),o.getLocal("pAcc"))),o.call(e+"_add",o.getLocal("it1"),o.getLocal("it2"),o.getLocal("it1")),o.call(e+"_add",o.getLocal("pAcc"),o.getLocal("it2"),o.getLocal("pAcc")),o.setLocal("it1",o.i32_add(o.getLocal("it1"),o.i32_const(n))),o.setLocal("it2",o.i32_add(o.getLocal("it2"),o.i32_const(n))),o.br(0))),o.call(i+"_reduceTable",o.getLocal("pTable"),o.i32_sub(o.getLocal("p"),o.i32_const(1))),o.setLocal("p",o.i32_sub(o.getLocal("p"),o.i32_const(1))),o.block(o.loop(o.br_if(1,o.i32_eqz(o.getLocal("p"))),o.call(e+"_double",o.getLocal("pAcc"),o.getLocal("pAcc")),o.setLocal("p",o.i32_sub(o.getLocal("p"),o.i32_const(1))),o.br(0))),o.call(e+"_add",o.getLocal("pTable"),o.getLocal("pAcc"),o.getLocal("pTable")))}(),function(){const r=t.addFunction(i+"_chunk");r.addParam("pBases","i32"),r.addParam("pScalars","i32"),r.addParam("scalarSize","i32"),r.addParam("n","i32"),r.addParam("startBit","i32"),r.addParam("chunkSize","i32"),r.addParam("pr","i32"),r.addLocal("nChunks","i32"),r.addLocal("itScalar","i32"),r.addLocal("endScalar","i32"),r.addLocal("itBase","i32"),r.addLocal("i","i32"),r.addLocal("j","i32"),r.addLocal("nTable","i32"),r.addLocal("pTable","i32"),r.addLocal("idx","i32"),r.addLocal("pIdxTable","i32");const s=r.getCodeBuilder();r.addCode(s.if(s.i32_eqz(s.getLocal("n")),[...s.call(e+"_zero",s.getLocal("pr")),...s.ret([])]),s.setLocal("nTable",s.i32_shl(s.i32_const(1),s.getLocal("chunkSize"))),s.setLocal("pTable",s.i32_load(s.i32_const(0))),s.i32_store(s.i32_const(0),s.i32_add(s.getLocal("pTable"),s.i32_mul(s.getLocal("nTable"),s.i32_const(n)))),s.setLocal("j",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("j"),s.getLocal("nTable"))),s.call(e+"_zero",s.i32_add(s.getLocal("pTable"),s.i32_mul(s.getLocal("j"),s.i32_const(n)))),s.setLocal("j",s.i32_add(s.getLocal("j"),s.i32_const(1))),s.br(0))),s.setLocal("itBase",s.getLocal("pBases")),s.setLocal("itScalar",s.getLocal("pScalars")),s.setLocal("endScalar",s.i32_add(s.getLocal("pScalars"),s.i32_mul(s.getLocal("n"),s.getLocal("scalarSize")))),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("itScalar"),s.getLocal("endScalar"))),s.setLocal("idx",s.call(i+"_getChunk",s.getLocal("itScalar"),s.getLocal("scalarSize"),s.getLocal("startBit"),s.getLocal("chunkSize"))),s.if(s.getLocal("idx"),[...s.setLocal("pIdxTable",s.i32_add(s.getLocal("pTable"),s.i32_mul(s.i32_sub(s.getLocal("idx"),s.i32_const(1)),s.i32_const(n)))),...s.call(a,s.getLocal("pIdxTable"),s.getLocal("itBase"),s.getLocal("pIdxTable"))]),s.setLocal("itScalar",s.i32_add(s.getLocal("itScalar"),s.getLocal("scalarSize"))),s.setLocal("itBase",s.i32_add(s.getLocal("itBase"),s.i32_const(o))),s.br(0))),s.call(i+"_reduceTable",s.getLocal("pTable"),s.getLocal("chunkSize")),s.call(e+"_copy",s.getLocal("pTable"),s.getLocal("pr")),s.i32_store(s.i32_const(0),s.getLocal("pTable")))}(),r(),t.exportFunction(i),t.exportFunction(i+"_chunk")};const buildTimesScalarNAF=build_timesscalarnaf,buildBatchConvertion=build_batchconvertion,buildMultiexp$1=build_multiexp;var build_curve_jacobian_a0=function(t,e,i,a){const o=t.modules[i].n64,n=8*o;if(t.modules[e])return e;return t.modules[e]={n64:3*o},function(){const a=t.addFunction(e+"_isZeroAffine");a.addParam("p1","i32"),a.setReturnType("i32");const o=a.getCodeBuilder();a.addCode(o.i32_and(o.call(i+"_isZero",o.getLocal("p1")),o.call(i+"_isZero",o.i32_add(o.getLocal("p1"),o.i32_const(n)))))}(),function(){const a=t.addFunction(e+"_isZero");a.addParam("p1","i32"),a.setReturnType("i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_isZero",o.i32_add(o.getLocal("p1"),o.i32_const(2*n))))}(),function(){const a=t.addFunction(e+"_zeroAffine");a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_zero",o.getLocal("pr"))),a.addCode(o.call(i+"_zero",o.i32_add(o.getLocal("pr"),o.i32_const(n))))}(),function(){const a=t.addFunction(e+"_zero");a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_zero",o.getLocal("pr"))),a.addCode(o.call(i+"_one",o.i32_add(o.getLocal("pr"),o.i32_const(n)))),a.addCode(o.call(i+"_zero",o.i32_add(o.getLocal("pr"),o.i32_const(2*n))))}(),function(){const i=t.addFunction(e+"_copyAffine");i.addParam("ps","i32"),i.addParam("pd","i32");const a=i.getCodeBuilder();for(let t=0;t<2*o;t++)i.addCode(a.i64_store(a.getLocal("pd"),8*t,a.i64_load(a.getLocal("ps"),8*t)))}(),function(){const i=t.addFunction(e+"_copy");i.addParam("ps","i32"),i.addParam("pd","i32");const a=i.getCodeBuilder();for(let t=0;t<3*o;t++)i.addCode(a.i64_store(a.getLocal("pd"),8*t,a.i64_load(a.getLocal("ps"),8*t)))}(),function(){const a=t.addFunction(e+"_toJacobian");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.getLocal("pr"),c=o.i32_add(o.getLocal("pr"),o.i32_const(n)),d=o.i32_add(o.getLocal("pr"),o.i32_const(2*n));a.addCode(o.if(o.call(e+"_isZeroAffine",o.getLocal("p1")),o.call(e+"_zero",o.getLocal("pr")),[...o.call(i+"_one",d),...o.call(i+"_copy",s,c),...o.call(i+"_copy",r,l)]))}(),function(){const a=t.addFunction(e+"_eqAffine");a.addParam("p1","i32"),a.addParam("p2","i32"),a.setReturnType("i32"),a.addLocal("z1","i32");const o=a.getCodeBuilder();a.addCode(o.ret(o.i32_and(o.call(i+"_eq",o.getLocal("p1"),o.getLocal("p2")),o.call(i+"_eq",o.i32_add(o.getLocal("p1"),o.i32_const(n)),o.i32_add(o.getLocal("p2"),o.i32_const(n))))))}(),function(){const a=t.addFunction(e+"_eqMixed");a.addParam("p1","i32"),a.addParam("p2","i32"),a.setReturnType("i32"),a.addLocal("z1","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n));a.addCode(o.setLocal("z1",o.i32_add(o.getLocal("p1"),o.i32_const(2*n))));const l=o.getLocal("z1"),c=o.getLocal("p2"),d=o.i32_add(o.getLocal("p2"),o.i32_const(n)),u=o.i32_const(t.alloc(n)),g=o.i32_const(t.alloc(n)),f=o.i32_const(t.alloc(n)),h=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),o.ret(o.call(e+"_isZeroAffine",o.getLocal("p2")))),o.if(o.call(e+"_isZeroAffine",o.getLocal("p2")),o.ret(o.i32_const(0))),o.if(o.call(i+"_isOne",l),o.ret(o.call(e+"_eqAffine",o.getLocal("p1"),o.getLocal("p2")))),o.call(i+"_square",l,u),o.call(i+"_mul",c,u,g),o.call(i+"_mul",l,u,f),o.call(i+"_mul",d,f,h),o.if(o.call(i+"_eq",r,g),o.if(o.call(i+"_eq",s,h),o.ret(o.i32_const(1)))),o.ret(o.i32_const(0)))}(),function(){const a=t.addFunction(e+"_eq");a.addParam("p1","i32"),a.addParam("p2","i32"),a.setReturnType("i32"),a.addLocal("z1","i32"),a.addLocal("z2","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n));a.addCode(o.setLocal("z1",o.i32_add(o.getLocal("p1"),o.i32_const(2*n))));const l=o.getLocal("z1"),c=o.getLocal("p2"),d=o.i32_add(o.getLocal("p2"),o.i32_const(n));a.addCode(o.setLocal("z2",o.i32_add(o.getLocal("p2"),o.i32_const(2*n))));const u=o.getLocal("z2"),g=o.i32_const(t.alloc(n)),f=o.i32_const(t.alloc(n)),h=o.i32_const(t.alloc(n)),_=o.i32_const(t.alloc(n)),p=o.i32_const(t.alloc(n)),m=o.i32_const(t.alloc(n)),b=o.i32_const(t.alloc(n)),L=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),o.ret(o.call(e+"_isZero",o.getLocal("p2")))),o.if(o.call(e+"_isZero",o.getLocal("p2")),o.ret(o.i32_const(0))),o.if(o.call(i+"_isOne",l),o.ret(o.call(e+"_eqMixed",o.getLocal("p2"),o.getLocal("p1")))),o.if(o.call(i+"_isOne",u),o.ret(o.call(e+"_eqMixed",o.getLocal("p1"),o.getLocal("p2")))),o.call(i+"_square",l,g),o.call(i+"_square",u,f),o.call(i+"_mul",r,f,h),o.call(i+"_mul",c,g,_),o.call(i+"_mul",l,g,p),o.call(i+"_mul",u,f,m),o.call(i+"_mul",s,m,b),o.call(i+"_mul",d,p,L),o.if(o.call(i+"_eq",h,_),o.if(o.call(i+"_eq",b,L),o.ret(o.i32_const(1)))),o.ret(o.i32_const(0)))}(),function(){const a=t.addFunction(e+"_doubleAffine");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.getLocal("pr"),c=o.i32_add(o.getLocal("pr"),o.i32_const(n)),d=o.i32_add(o.getLocal("pr"),o.i32_const(2*n)),u=o.i32_const(t.alloc(n)),g=o.i32_const(t.alloc(n)),f=o.i32_const(t.alloc(n)),h=o.i32_const(t.alloc(n)),_=o.i32_const(t.alloc(n)),p=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZeroAffine",o.getLocal("p1")),[...o.call(e+"_toJacobian",o.getLocal("p1"),o.getLocal("pr")),...o.ret([])]),o.call(i+"_square",r,u),o.call(i+"_square",s,g),o.call(i+"_square",g,f),o.call(i+"_add",r,g,h),o.call(i+"_square",h,h),o.call(i+"_sub",h,u,h),o.call(i+"_sub",h,f,h),o.call(i+"_add",h,h,h),o.call(i+"_add",u,u,_),o.call(i+"_add",_,u,_),o.call(i+"_add",s,s,d),o.call(i+"_square",_,l),o.call(i+"_sub",l,h,l),o.call(i+"_sub",l,h,l),o.call(i+"_add",f,f,p),o.call(i+"_add",p,p,p),o.call(i+"_add",p,p,p),o.call(i+"_sub",h,l,c),o.call(i+"_mul",c,_,c),o.call(i+"_sub",c,p,c))}(),function(){const a=t.addFunction(e+"_double");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.i32_add(o.getLocal("p1"),o.i32_const(2*n)),c=o.getLocal("pr"),d=o.i32_add(o.getLocal("pr"),o.i32_const(n)),u=o.i32_add(o.getLocal("pr"),o.i32_const(2*n)),g=o.i32_const(t.alloc(n)),f=o.i32_const(t.alloc(n)),h=o.i32_const(t.alloc(n)),_=o.i32_const(t.alloc(n)),p=o.i32_const(t.alloc(n)),m=o.i32_const(t.alloc(n)),b=o.i32_const(t.alloc(n)),L=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),[...o.call(e+"_copy",o.getLocal("p1"),o.getLocal("pr")),...o.ret([])]),o.if(o.call(i+"_isOne",l),[...o.ret(o.call(e+"_doubleAffine",o.getLocal("p1"),o.getLocal("pr"))),...o.ret([])]),o.call(i+"_square",r,g),o.call(i+"_square",s,f),o.call(i+"_square",f,h),o.call(i+"_add",r,f,_),o.call(i+"_square",_,_),o.call(i+"_sub",_,g,_),o.call(i+"_sub",_,h,_),o.call(i+"_add",_,_,_),o.call(i+"_add",g,g,p),o.call(i+"_add",p,g,p),o.call(i+"_square",p,m),o.call(i+"_mul",s,l,b),o.call(i+"_add",_,_,c),o.call(i+"_sub",m,c,c),o.call(i+"_add",h,h,L),o.call(i+"_add",L,L,L),o.call(i+"_add",L,L,L),o.call(i+"_sub",_,c,d),o.call(i+"_mul",d,p,d),o.call(i+"_sub",d,L,d),o.call(i+"_add",b,b,u))}(),function(){const a=t.addFunction(e+"_addAffine");a.addParam("p1","i32"),a.addParam("p2","i32"),a.addParam("pr","i32"),a.addLocal("z1","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n));a.addCode(o.setLocal("z1",o.i32_add(o.getLocal("p1"),o.i32_const(2*n))));const l=o.getLocal("p2"),c=o.i32_add(o.getLocal("p2"),o.i32_const(n)),d=o.getLocal("pr"),u=o.i32_add(o.getLocal("pr"),o.i32_const(n)),g=o.i32_add(o.getLocal("pr"),o.i32_const(2*n)),f=o.i32_const(t.alloc(n)),h=o.i32_const(t.alloc(n)),_=o.i32_const(t.alloc(n)),p=o.i32_const(t.alloc(n)),m=o.i32_const(t.alloc(n)),b=o.i32_const(t.alloc(n)),L=o.i32_const(t.alloc(n)),w=o.i32_const(t.alloc(n)),y=o.i32_const(t.alloc(n)),A=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZeroAffine",o.getLocal("p1")),[...o.call(e+"_copyAffine",o.getLocal("p2"),o.getLocal("pr")),...o.call(i+"_one",o.i32_add(o.getLocal("pr"),o.i32_const(2*n))),...o.ret([])]),o.if(o.call(e+"_isZeroAffine",o.getLocal("p2")),[...o.call(e+"_copyAffine",o.getLocal("p1"),o.getLocal("pr")),...o.call(i+"_one",o.i32_add(o.getLocal("pr"),o.i32_const(2*n))),...o.ret([])]),o.if(o.call(i+"_eq",r,l),o.if(o.call(i+"_eq",s,c),[...o.call(e+"_doubleAffine",o.getLocal("p2"),o.getLocal("pr")),...o.ret([])])),o.call(i+"_sub",l,r,f),o.call(i+"_sub",c,s,_),o.call(i+"_square",f,h),o.call(i+"_add",h,h,p),o.call(i+"_add",p,p,p),o.call(i+"_mul",f,p,m),o.call(i+"_add",_,_,b),o.call(i+"_mul",r,p,w),o.call(i+"_square",b,L),o.call(i+"_add",w,w,y),o.call(i+"_sub",L,m,d),o.call(i+"_sub",d,y,d),o.call(i+"_mul",s,m,A),o.call(i+"_add",A,A,A),o.call(i+"_sub",w,d,u),o.call(i+"_mul",u,b,u),o.call(i+"_sub",u,A,u),o.call(i+"_add",f,f,g))}(),function(){const a=t.addFunction(e+"_addMixed");a.addParam("p1","i32"),a.addParam("p2","i32"),a.addParam("pr","i32"),a.addLocal("z1","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n));a.addCode(o.setLocal("z1",o.i32_add(o.getLocal("p1"),o.i32_const(2*n))));const l=o.getLocal("z1"),c=o.getLocal("p2"),d=o.i32_add(o.getLocal("p2"),o.i32_const(n)),u=o.getLocal("pr"),g=o.i32_add(o.getLocal("pr"),o.i32_const(n)),f=o.i32_add(o.getLocal("pr"),o.i32_const(2*n)),h=o.i32_const(t.alloc(n)),_=o.i32_const(t.alloc(n)),p=o.i32_const(t.alloc(n)),m=o.i32_const(t.alloc(n)),b=o.i32_const(t.alloc(n)),L=o.i32_const(t.alloc(n)),w=o.i32_const(t.alloc(n)),y=o.i32_const(t.alloc(n)),A=o.i32_const(t.alloc(n)),I=o.i32_const(t.alloc(n)),C=o.i32_const(t.alloc(n)),B=o.i32_const(t.alloc(n)),E=o.i32_const(t.alloc(n)),F=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),[...o.call(e+"_copyAffine",o.getLocal("p2"),o.getLocal("pr")),...o.call(i+"_one",o.i32_add(o.getLocal("pr"),o.i32_const(2*n))),...o.ret([])]),o.if(o.call(e+"_isZeroAffine",o.getLocal("p2")),[...o.call(e+"_copy",o.getLocal("p1"),o.getLocal("pr")),...o.ret([])]),o.if(o.call(i+"_isOne",l),[...o.call(e+"_addAffine",r,c,u),...o.ret([])]),o.call(i+"_square",l,h),o.call(i+"_mul",c,h,_),o.call(i+"_mul",l,h,p),o.call(i+"_mul",d,p,m),o.if(o.call(i+"_eq",r,_),o.if(o.call(i+"_eq",s,m),[...o.call(e+"_doubleAffine",o.getLocal("p2"),o.getLocal("pr")),...o.ret([])])),o.call(i+"_sub",_,r,b),o.call(i+"_sub",m,s,w),o.call(i+"_square",b,L),o.call(i+"_add",L,L,y),o.call(i+"_add",y,y,y),o.call(i+"_mul",b,y,A),o.call(i+"_add",w,w,I),o.call(i+"_mul",r,y,B),o.call(i+"_square",I,C),o.call(i+"_add",B,B,E),o.call(i+"_sub",C,A,u),o.call(i+"_sub",u,E,u),o.call(i+"_mul",s,A,F),o.call(i+"_add",F,F,F),o.call(i+"_sub",B,u,g),o.call(i+"_mul",g,I,g),o.call(i+"_sub",g,F,g),o.call(i+"_add",l,b,f),o.call(i+"_square",f,f),o.call(i+"_sub",f,h,f),o.call(i+"_sub",f,L,f))}(),function(){const a=t.addFunction(e+"_add");a.addParam("p1","i32"),a.addParam("p2","i32"),a.addParam("pr","i32"),a.addLocal("z1","i32"),a.addLocal("z2","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n));a.addCode(o.setLocal("z1",o.i32_add(o.getLocal("p1"),o.i32_const(2*n))));const l=o.getLocal("z1"),c=o.getLocal("p2"),d=o.i32_add(o.getLocal("p2"),o.i32_const(n));a.addCode(o.setLocal("z2",o.i32_add(o.getLocal("p2"),o.i32_const(2*n))));const u=o.getLocal("z2"),g=o.getLocal("pr"),f=o.i32_add(o.getLocal("pr"),o.i32_const(n)),h=o.i32_add(o.getLocal("pr"),o.i32_const(2*n)),_=o.i32_const(t.alloc(n)),p=o.i32_const(t.alloc(n)),m=o.i32_const(t.alloc(n)),b=o.i32_const(t.alloc(n)),L=o.i32_const(t.alloc(n)),w=o.i32_const(t.alloc(n)),y=o.i32_const(t.alloc(n)),A=o.i32_const(t.alloc(n)),I=o.i32_const(t.alloc(n)),C=o.i32_const(t.alloc(n)),B=o.i32_const(t.alloc(n)),E=o.i32_const(t.alloc(n)),F=o.i32_const(t.alloc(n)),S=o.i32_const(t.alloc(n)),v=o.i32_const(t.alloc(n)),x=o.i32_const(t.alloc(n)),$=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),[...o.call(e+"_copy",o.getLocal("p2"),o.getLocal("pr")),...o.ret([])]),o.if(o.call(e+"_isZero",o.getLocal("p2")),[...o.call(e+"_copy",o.getLocal("p1"),o.getLocal("pr")),...o.ret([])]),o.if(o.call(i+"_isOne",l),[...o.call(e+"_addMixed",c,r,g),...o.ret([])]),o.if(o.call(i+"_isOne",u),[...o.call(e+"_addMixed",r,c,g),...o.ret([])]),o.call(i+"_square",l,_),o.call(i+"_square",u,p),o.call(i+"_mul",r,p,m),o.call(i+"_mul",c,_,b),o.call(i+"_mul",l,_,L),o.call(i+"_mul",u,p,w),o.call(i+"_mul",s,w,y),o.call(i+"_mul",d,L,A),o.if(o.call(i+"_eq",m,b),o.if(o.call(i+"_eq",y,A),[...o.call(e+"_double",o.getLocal("p1"),o.getLocal("pr")),...o.ret([])])),o.call(i+"_sub",b,m,I),o.call(i+"_sub",A,y,C),o.call(i+"_add",I,I,B),o.call(i+"_square",B,B),o.call(i+"_mul",I,B,E),o.call(i+"_add",C,C,F),o.call(i+"_mul",m,B,v),o.call(i+"_square",F,S),o.call(i+"_add",v,v,x),o.call(i+"_sub",S,E,g),o.call(i+"_sub",g,x,g),o.call(i+"_mul",y,E,$),o.call(i+"_add",$,$,$),o.call(i+"_sub",v,g,f),o.call(i+"_mul",f,F,f),o.call(i+"_sub",f,$,f),o.call(i+"_add",l,u,h),o.call(i+"_square",h,h),o.call(i+"_sub",h,_,h),o.call(i+"_sub",h,p,h),o.call(i+"_mul",h,I,h))}(),function(){const a=t.addFunction(e+"_negAffine");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.getLocal("pr"),c=o.i32_add(o.getLocal("pr"),o.i32_const(n));a.addCode(o.call(i+"_copy",r,l),o.call(i+"_neg",s,c))}(),function(){const a=t.addFunction(e+"_neg");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.i32_add(o.getLocal("p1"),o.i32_const(2*n)),c=o.getLocal("pr"),d=o.i32_add(o.getLocal("pr"),o.i32_const(n)),u=o.i32_add(o.getLocal("pr"),o.i32_const(2*n));a.addCode(o.call(i+"_copy",r,c),o.call(i+"_neg",s,d),o.call(i+"_copy",l,u))}(),function(){const i=t.addFunction(e+"_subAffine");i.addParam("p1","i32"),i.addParam("p2","i32"),i.addParam("pr","i32");const a=i.getCodeBuilder(),o=a.i32_const(t.alloc(3*n));i.addCode(a.call(e+"_negAffine",a.getLocal("p2"),o),a.call(e+"_addAffine",a.getLocal("p1"),o,a.getLocal("pr")))}(),function(){const i=t.addFunction(e+"_subMixed");i.addParam("p1","i32"),i.addParam("p2","i32"),i.addParam("pr","i32");const a=i.getCodeBuilder(),o=a.i32_const(t.alloc(3*n));i.addCode(a.call(e+"_negAffine",a.getLocal("p2"),o),a.call(e+"_addMixed",a.getLocal("p1"),o,a.getLocal("pr")))}(),function(){const i=t.addFunction(e+"_sub");i.addParam("p1","i32"),i.addParam("p2","i32"),i.addParam("pr","i32");const a=i.getCodeBuilder(),o=a.i32_const(t.alloc(3*n));i.addCode(a.call(e+"_neg",a.getLocal("p2"),o),a.call(e+"_add",a.getLocal("p1"),o,a.getLocal("pr")))}(),function(){const a=t.addFunction(e+"_fromMontgomeryAffine");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_fromMontgomery",o.getLocal("p1"),o.getLocal("pr")));for(let t=1;t<2;t++)a.addCode(o.call(i+"_fromMontgomery",o.i32_add(o.getLocal("p1"),o.i32_const(t*n)),o.i32_add(o.getLocal("pr"),o.i32_const(t*n))))}(),function(){const a=t.addFunction(e+"_fromMontgomery");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_fromMontgomery",o.getLocal("p1"),o.getLocal("pr")));for(let t=1;t<3;t++)a.addCode(o.call(i+"_fromMontgomery",o.i32_add(o.getLocal("p1"),o.i32_const(t*n)),o.i32_add(o.getLocal("pr"),o.i32_const(t*n))))}(),function(){const a=t.addFunction(e+"_toMontgomeryAffine");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_toMontgomery",o.getLocal("p1"),o.getLocal("pr")));for(let t=1;t<2;t++)a.addCode(o.call(i+"_toMontgomery",o.i32_add(o.getLocal("p1"),o.i32_const(t*n)),o.i32_add(o.getLocal("pr"),o.i32_const(t*n))))}(),function(){const a=t.addFunction(e+"_toMontgomery");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(i+"_toMontgomery",o.getLocal("p1"),o.getLocal("pr")));for(let t=1;t<3;t++)a.addCode(o.call(i+"_toMontgomery",o.i32_add(o.getLocal("p1"),o.i32_const(t*n)),o.i32_add(o.getLocal("pr"),o.i32_const(t*n))))}(),function(){const a=t.addFunction(e+"_toAffine");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.i32_add(o.getLocal("p1"),o.i32_const(2*n)),c=o.getLocal("pr"),d=o.i32_add(o.getLocal("pr"),o.i32_const(n)),u=o.i32_const(t.alloc(n)),g=o.i32_const(t.alloc(n)),f=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),[...o.call(i+"_zero",c),...o.call(i+"_zero",d)],[...o.call(i+"_inverse",l,u),...o.call(i+"_square",u,g),...o.call(i+"_mul",u,g,f),...o.call(i+"_mul",r,g,c),...o.call(i+"_mul",s,f,d)]))}(),function(){const o=t.addFunction(e+"_inCurveAffine");o.addParam("pIn","i32"),o.setReturnType("i32");const r=o.getCodeBuilder(),s=r.getLocal("pIn"),l=r.i32_add(r.getLocal("pIn"),r.i32_const(n)),c=r.i32_const(t.alloc(n)),d=r.i32_const(t.alloc(n));o.addCode(r.call(i+"_square",l,c),r.call(i+"_square",s,d),r.call(i+"_mul",s,d,d),r.call(i+"_add",d,r.i32_const(a),d),r.ret(r.call(i+"_eq",c,d)))}(),function(){const i=t.addFunction(e+"_inCurve");i.addParam("pIn","i32"),i.setReturnType("i32");const a=i.getCodeBuilder(),o=a.i32_const(t.alloc(2*n));i.addCode(a.call(e+"_toAffine",a.getLocal("pIn"),o),a.ret(a.call(e+"_inCurveAffine",o)))}(),function(){const a=t.addFunction(e+"_batchToAffine");a.addParam("pIn","i32"),a.addParam("n","i32"),a.addParam("pOut","i32"),a.addLocal("pAux","i32"),a.addLocal("itIn","i32"),a.addLocal("itAux","i32"),a.addLocal("itOut","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),r=o.i32_const(t.alloc(n));a.addCode(o.setLocal("pAux",o.i32_load(o.i32_const(0))),o.i32_store(o.i32_const(0),o.i32_add(o.getLocal("pAux"),o.i32_mul(o.getLocal("n"),o.i32_const(n)))),o.call(i+"_batchInverse",o.i32_add(o.getLocal("pIn"),o.i32_const(2*n)),o.i32_const(3*n),o.getLocal("n"),o.getLocal("pAux"),o.i32_const(n)),o.setLocal("itIn",o.getLocal("pIn")),o.setLocal("itAux",o.getLocal("pAux")),o.setLocal("itOut",o.getLocal("pOut")),o.setLocal("i",o.i32_const(0)),o.block(o.loop(o.br_if(1,o.i32_eq(o.getLocal("i"),o.getLocal("n"))),o.if(o.call(i+"_isZero",o.getLocal("itAux")),[...o.call(i+"_zero",o.getLocal("itOut")),...o.call(i+"_zero",o.i32_add(o.getLocal("itOut"),o.i32_const(n)))],[...o.call(i+"_mul",o.getLocal("itAux"),o.i32_add(o.getLocal("itIn"),o.i32_const(n)),r),...o.call(i+"_square",o.getLocal("itAux"),o.getLocal("itAux")),...o.call(i+"_mul",o.getLocal("itAux"),o.getLocal("itIn"),o.getLocal("itOut")),...o.call(i+"_mul",o.getLocal("itAux"),r,o.i32_add(o.getLocal("itOut"),o.i32_const(n)))]),o.setLocal("itIn",o.i32_add(o.getLocal("itIn"),o.i32_const(3*n))),o.setLocal("itOut",o.i32_add(o.getLocal("itOut"),o.i32_const(2*n))),o.setLocal("itAux",o.i32_add(o.getLocal("itAux"),o.i32_const(n))),o.setLocal("i",o.i32_add(o.getLocal("i"),o.i32_const(1))),o.br(0))),o.i32_store(o.i32_const(0),o.getLocal("pAux")))}(),function(){const a=t.addFunction(e+"_normalize");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),r=o.getLocal("p1"),s=o.i32_add(o.getLocal("p1"),o.i32_const(n)),l=o.i32_add(o.getLocal("p1"),o.i32_const(2*n)),c=o.getLocal("pr"),d=o.i32_add(o.getLocal("pr"),o.i32_const(n)),u=o.i32_add(o.getLocal("pr"),o.i32_const(2*n)),g=o.i32_const(t.alloc(n)),f=o.i32_const(t.alloc(n)),h=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("p1")),o.call(e+"_zero",o.getLocal("pr")),[...o.call(i+"_inverse",l,g),...o.call(i+"_square",g,f),...o.call(i+"_mul",g,f,h),...o.call(i+"_mul",r,f,c),...o.call(i+"_mul",s,h,d),...o.call(i+"_one",u)]))}(),function(){const i=t.addFunction(e+"__reverseBytes");i.addParam("pIn","i32"),i.addParam("n","i32"),i.addParam("pOut","i32"),i.addLocal("itOut","i32"),i.addLocal("itIn","i32");const a=i.getCodeBuilder();i.addCode(a.setLocal("itOut",a.i32_sub(a.i32_add(a.getLocal("pOut"),a.getLocal("n")),a.i32_const(1))),a.setLocal("itIn",a.getLocal("pIn")),a.block(a.loop(a.br_if(1,a.i32_lt_s(a.getLocal("itOut"),a.getLocal("pOut"))),a.i32_store8(a.getLocal("itOut"),a.i32_load8_u(a.getLocal("itIn"))),a.setLocal("itOut",a.i32_sub(a.getLocal("itOut"),a.i32_const(1))),a.setLocal("itIn",a.i32_add(a.getLocal("itIn"),a.i32_const(1))),a.br(0))))}(),function(){const i=t.addFunction(e+"_LEMtoU");i.addParam("pIn","i32"),i.addParam("pOut","i32");const a=i.getCodeBuilder(),o=t.alloc(2*n),r=a.i32_const(o),s=a.i32_const(o),l=a.i32_const(o+n);i.addCode(a.if(a.call(e+"_isZeroAffine",a.getLocal("pIn")),[...a.call(e+"_zeroAffine",a.getLocal("pOut")),...a.i32_store8(a.getLocal("pOut"),a.i32_const(64)),...a.ret([])]),a.call(e+"_fromMontgomeryAffine",a.getLocal("pIn"),r),a.call(e+"__reverseBytes",s,a.i32_const(n),a.getLocal("pOut")),a.call(e+"__reverseBytes",l,a.i32_const(n),a.i32_add(a.getLocal("pOut"),a.i32_const(n))))}(),function(){const a=t.addFunction(e+"_LEMtoC");a.addParam("pIn","i32"),a.addParam("pOut","i32");const o=a.getCodeBuilder(),r=o.i32_const(t.alloc(n));a.addCode(o.if(o.call(e+"_isZero",o.getLocal("pIn")),[...o.call(i+"_zero",o.getLocal("pOut")),...o.i32_store8(o.getLocal("pOut"),o.i32_const(64)),...o.ret([])]),o.call(i+"_fromMontgomery",o.getLocal("pIn"),r),o.call(e+"__reverseBytes",r,o.i32_const(n),o.getLocal("pOut")),o.if(o.i32_eq(o.call(i+"_sign",o.i32_add(o.getLocal("pIn"),o.i32_const(n))),o.i32_const(-1)),o.i32_store8(o.getLocal("pOut"),o.i32_or(o.i32_load8_u(o.getLocal("pOut")),o.i32_const(128)))))}(),function(){const i=t.addFunction(e+"_UtoLEM");i.addParam("pIn","i32"),i.addParam("pOut","i32");const a=i.getCodeBuilder(),o=t.alloc(2*n),r=a.i32_const(o),s=a.i32_const(o),l=a.i32_const(o+n);i.addCode(a.if(a.i32_and(a.i32_load8_u(a.getLocal("pIn")),a.i32_const(64)),[...a.call(e+"_zeroAffine",a.getLocal("pOut")),...a.ret([])]),a.call(e+"__reverseBytes",a.getLocal("pIn"),a.i32_const(n),s),a.call(e+"__reverseBytes",a.i32_add(a.getLocal("pIn"),a.i32_const(n)),a.i32_const(n),l),a.call(e+"_toMontgomeryAffine",r,a.getLocal("pOut")))}(),function(){const o=t.addFunction(e+"_CtoLEM");o.addParam("pIn","i32"),o.addParam("pOut","i32"),o.addLocal("firstByte","i32"),o.addLocal("greatest","i32");const r=o.getCodeBuilder(),s=t.alloc(2*n),l=r.i32_const(s),c=r.i32_const(s+n);o.addCode(r.setLocal("firstByte",r.i32_load8_u(r.getLocal("pIn"))),r.if(r.i32_and(r.getLocal("firstByte"),r.i32_const(64)),[...r.call(e+"_zeroAffine",r.getLocal("pOut")),...r.ret([])]),r.setLocal("greatest",r.i32_and(r.getLocal("firstByte"),r.i32_const(128))),r.call(i+"_copy",r.getLocal("pIn"),c),r.i32_store8(c,r.i32_and(r.getLocal("firstByte"),r.i32_const(63))),r.call(e+"__reverseBytes",c,r.i32_const(n),l),r.call(i+"_toMontgomery",l,r.getLocal("pOut")),r.call(i+"_square",r.getLocal("pOut"),c),r.call(i+"_mul",r.getLocal("pOut"),c,c),r.call(i+"_add",c,r.i32_const(a),c),r.call(i+"_sqrt",c,c),r.call(i+"_neg",c,l),r.if(r.i32_eq(r.call(i+"_sign",c),r.i32_const(-1)),r.if(r.getLocal("greatest"),r.call(i+"_copy",c,r.i32_add(r.getLocal("pOut"),r.i32_const(n))),r.call(i+"_neg",c,r.i32_add(r.getLocal("pOut"),r.i32_const(n)))),r.if(r.getLocal("greatest"),r.call(i+"_neg",c,r.i32_add(r.getLocal("pOut"),r.i32_const(n))),r.call(i+"_copy",c,r.i32_add(r.getLocal("pOut"),r.i32_const(n))))))}(),buildBatchConvertion(t,e+"_batchLEMtoU",e+"_LEMtoU",2*n,2*n),buildBatchConvertion(t,e+"_batchLEMtoC",e+"_LEMtoC",2*n,n),buildBatchConvertion(t,e+"_batchUtoLEM",e+"_UtoLEM",2*n,2*n),buildBatchConvertion(t,e+"_batchCtoLEM",e+"_CtoLEM",n,2*n,!0),buildBatchConvertion(t,e+"_batchToJacobian",e+"_toJacobian",2*n,3*n,!0),buildMultiexp$1(t,e,e+"_multiexp",e+"_add",3*n),buildMultiexp$1(t,e,e+"_multiexpAffine",e+"_addMixed",2*n),buildTimesScalarNAF(t,e+"_timesScalar",3*n,e+"_add",e+"_double",e+"_sub",e+"_copy",e+"_zero"),buildTimesScalarNAF(t,e+"_timesScalarAffine",2*n,e+"_addMixed",e+"_double",e+"_subMixed",e+"_copyAffine",e+"_zero"),t.exportFunction(e+"_isZero"),t.exportFunction(e+"_isZeroAffine"),t.exportFunction(e+"_eq"),t.exportFunction(e+"_eqMixed"),t.exportFunction(e+"_eqAffine"),t.exportFunction(e+"_copy"),t.exportFunction(e+"_copyAffine"),t.exportFunction(e+"_zero"),t.exportFunction(e+"_zeroAffine"),t.exportFunction(e+"_double"),t.exportFunction(e+"_doubleAffine"),t.exportFunction(e+"_add"),t.exportFunction(e+"_addMixed"),t.exportFunction(e+"_addAffine"),t.exportFunction(e+"_neg"),t.exportFunction(e+"_negAffine"),t.exportFunction(e+"_sub"),t.exportFunction(e+"_subMixed"),t.exportFunction(e+"_subAffine"),t.exportFunction(e+"_fromMontgomery"),t.exportFunction(e+"_fromMontgomeryAffine"),t.exportFunction(e+"_toMontgomery"),t.exportFunction(e+"_toMontgomeryAffine"),t.exportFunction(e+"_timesScalar"),t.exportFunction(e+"_timesScalarAffine"),t.exportFunction(e+"_normalize"),t.exportFunction(e+"_LEMtoU"),t.exportFunction(e+"_LEMtoC"),t.exportFunction(e+"_UtoLEM"),t.exportFunction(e+"_CtoLEM"),t.exportFunction(e+"_batchLEMtoU"),t.exportFunction(e+"_batchLEMtoC"),t.exportFunction(e+"_batchUtoLEM"),t.exportFunction(e+"_batchCtoLEM"),t.exportFunction(e+"_toAffine"),t.exportFunction(e+"_toJacobian"),t.exportFunction(e+"_batchToAffine"),t.exportFunction(e+"_batchToJacobian"),t.exportFunction(e+"_inCurve"),t.exportFunction(e+"_inCurveAffine"),e};const bigInt$3=BigInteger.exports,utils$8=utils$c;var build_fft=function(t,e,i,a,o){const n=8*t.modules[a].n64,r=8*t.modules[i].n64,s=t.modules[a].q;let l=s.minus(bigInt$3(1)),c=0;for(;!l.isOdd();)c++,l=l.shiftRight(1);let d=bigInt$3(2);for(;d.modPow(s.shiftRight(1),s).equals(1);)d=d.add(1);const u=new Array(c+1);u[c]=d.modPow(l,s);let g=c-1;for(;g>=0;)u[g]=u[g+1].modPow(2,s),g--;const f=[],h=bigInt$3(1).shiftLeft(8*n).mod(s);for(let t=0;t<u.length;t++){const e=u[t].times(h).mod(s);f.push(...utils$8.bigInt2BytesLE(e,n))}const _=t.alloc(f),p=new Array(c+1);p[0]=bigInt$3(1);for(let t=1;t<=c;t++)p[t]=p[t-1].times(2);const m=[];for(let t=0;t<=c;t++){const e=p[t].modInv(s).times(h).mod(s);m.push(...utils$8.bigInt2BytesLE(e,n))}const b=t.alloc(m),L=d.modPow(2,s),w=[],y=[];for(let t=0;t<=c;t++){const e=L.modPow(bigInt$3(2).pow(t),s),i=s.add(bigInt$3.one).minus(e).modInv(s);w.push(...utils$8.bigInt2BytesLE(e.times(h).mod(s),n)),y.push(...utils$8.bigInt2BytesLE(i.times(h).mod(s),n))}const A=t.alloc(w),I=t.alloc(y);function C(t){let e=0;for(let i=0;i<8;i++)t&1<<i&&(e|=128>>i);return e}const B=Array(256);for(let t=0;t<256;t++)B[t]=C(t);const E=t.alloc(B);function F(){const i=t.addFunction(e+"_fft");i.addParam("px","i32"),i.addParam("n","i32"),i.addLocal("bits","i32");const o=i.getCodeBuilder(),r=o.i32_const(t.alloc(n));i.addCode(o.setLocal("bits",o.call(e+"__log2",o.getLocal("n"))),o.call(a+"_one",r),o.call(e+"_rawfft",o.getLocal("px"),o.getLocal("bits"),o.i32_const(0),r))}!function(){const i=t.addFunction(e+"__rev");i.addParam("x","i32"),i.addParam("bits","i32"),i.setReturnType("i32");const a=i.getCodeBuilder();i.addCode(a.i32_rotl(a.i32_add(a.i32_add(a.i32_shl(a.i32_load8_u(a.i32_and(a.getLocal("x"),a.i32_const(255)),E,0),a.i32_const(24)),a.i32_shl(a.i32_load8_u(a.i32_and(a.i32_shr_u(a.getLocal("x"),a.i32_const(8)),a.i32_const(255)),E,0),a.i32_const(16))),a.i32_add(a.i32_shl(a.i32_load8_u(a.i32_and(a.i32_shr_u(a.getLocal("x"),a.i32_const(16)),a.i32_const(255)),E,0),a.i32_const(8)),a.i32_load8_u(a.i32_and(a.i32_shr_u(a.getLocal("x"),a.i32_const(24)),a.i32_const(255)),E,0))),a.getLocal("bits")))}(),function(){const a=t.addFunction(e+"__reversePermutation");a.addParam("px","i32"),a.addParam("bits","i32"),a.addLocal("n","i32"),a.addLocal("i","i32"),a.addLocal("ri","i32"),a.addLocal("idx1","i32"),a.addLocal("idx2","i32");const o=a.getCodeBuilder(),n=o.i32_const(t.alloc(r));a.addCode(o.setLocal("n",o.i32_shl(o.i32_const(1),o.getLocal("bits"))),o.setLocal("i",o.i32_const(0)),o.block(o.loop(o.br_if(1,o.i32_eq(o.getLocal("i"),o.getLocal("n"))),o.setLocal("idx1",o.i32_add(o.getLocal("px"),o.i32_mul(o.getLocal("i"),o.i32_const(r)))),o.setLocal("ri",o.call(e+"__rev",o.getLocal("i"),o.getLocal("bits"))),o.setLocal("idx2",o.i32_add(o.getLocal("px"),o.i32_mul(o.getLocal("ri"),o.i32_const(r)))),o.if(o.i32_lt_u(o.getLocal("i"),o.getLocal("ri")),[...o.call(i+"_copy",o.getLocal("idx1"),n),...o.call(i+"_copy",o.getLocal("idx2"),o.getLocal("idx1")),...o.call(i+"_copy",n,o.getLocal("idx2"))]),o.setLocal("i",o.i32_add(o.getLocal("i"),o.i32_const(1))),o.br(0))))}(),function(){const n=t.addFunction(e+"__fftFinal");n.addParam("px","i32"),n.addParam("bits","i32"),n.addParam("reverse","i32"),n.addParam("mulFactor","i32"),n.addLocal("n","i32"),n.addLocal("ndiv2","i32"),n.addLocal("pInv2","i32"),n.addLocal("i","i32"),n.addLocal("mask","i32"),n.addLocal("idx1","i32"),n.addLocal("idx2","i32");const s=n.getCodeBuilder(),l=s.i32_const(t.alloc(r));n.addCode(s.if(s.i32_and(s.i32_eqz(s.getLocal("reverse")),s.call(a+"_isOne",s.getLocal("mulFactor"))),s.ret([])),s.setLocal("n",s.i32_shl(s.i32_const(1),s.getLocal("bits"))),s.setLocal("mask",s.i32_sub(s.getLocal("n"),s.i32_const(1))),s.setLocal("i",s.i32_const(1)),s.setLocal("ndiv2",s.i32_shr_u(s.getLocal("n"),s.i32_const(1))),s.block(s.loop(s.br_if(1,s.i32_ge_u(s.getLocal("i"),s.getLocal("ndiv2"))),s.setLocal("idx1",s.i32_add(s.getLocal("px"),s.i32_mul(s.getLocal("i"),s.i32_const(r)))),s.setLocal("idx2",s.i32_add(s.getLocal("px"),s.i32_mul(s.i32_sub(s.getLocal("n"),s.getLocal("i")),s.i32_const(r)))),s.if(s.getLocal("reverse"),s.if(s.call(a+"_isOne",s.getLocal("mulFactor")),[...s.call(i+"_copy",s.getLocal("idx1"),l),...s.call(i+"_copy",s.getLocal("idx2"),s.getLocal("idx1")),...s.call(i+"_copy",l,s.getLocal("idx2"))],[...s.call(i+"_copy",s.getLocal("idx1"),l),...s.call(o,s.getLocal("idx2"),s.getLocal("mulFactor"),s.getLocal("idx1")),...s.call(o,l,s.getLocal("mulFactor"),s.getLocal("idx2"))]),s.if(s.call(a+"_isOne",s.getLocal("mulFactor")),[],[...s.call(o,s.getLocal("idx1"),s.getLocal("mulFactor"),s.getLocal("idx1")),...s.call(o,s.getLocal("idx2"),s.getLocal("mulFactor"),s.getLocal("idx2"))])),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))),s.if(s.call(a+"_isOne",s.getLocal("mulFactor")),[],[...s.call(o,s.getLocal("px"),s.getLocal("mulFactor"),s.getLocal("px")),...s.setLocal("idx2",s.i32_add(s.getLocal("px"),s.i32_mul(s.getLocal("ndiv2"),s.i32_const(r)))),...s.call(o,s.getLocal("idx2"),s.getLocal("mulFactor"),s.getLocal("idx2"))]))}(),function(){const s=t.addFunction(e+"_rawfft");s.addParam("px","i32"),s.addParam("bits","i32"),s.addParam("reverse","i32"),s.addParam("mulFactor","i32"),s.addLocal("s","i32"),s.addLocal("k","i32"),s.addLocal("j","i32"),s.addLocal("m","i32"),s.addLocal("mdiv2","i32"),s.addLocal("n","i32"),s.addLocal("pwm","i32"),s.addLocal("idx1","i32"),s.addLocal("idx2","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(r)),u=l.i32_const(t.alloc(r));s.addCode(l.call(e+"__reversePermutation",l.getLocal("px"),l.getLocal("bits")),l.setLocal("n",l.i32_shl(l.i32_const(1),l.getLocal("bits"))),l.setLocal("s",l.i32_const(1)),l.block(l.loop(l.br_if(1,l.i32_gt_u(l.getLocal("s"),l.getLocal("bits"))),l.setLocal("m",l.i32_shl(l.i32_const(1),l.getLocal("s"))),l.setLocal("pwm",l.i32_add(l.i32_const(_),l.i32_mul(l.getLocal("s"),l.i32_const(n)))),l.setLocal("k",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_ge_u(l.getLocal("k"),l.getLocal("n"))),l.call(a+"_one",c),l.setLocal("mdiv2",l.i32_shr_u(l.getLocal("m"),l.i32_const(1))),l.setLocal("j",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_ge_u(l.getLocal("j"),l.getLocal("mdiv2"))),l.setLocal("idx1",l.i32_add(l.getLocal("px"),l.i32_mul(l.i32_add(l.getLocal("k"),l.getLocal("j")),l.i32_const(r)))),l.setLocal("idx2",l.i32_add(l.getLocal("idx1"),l.i32_mul(l.getLocal("mdiv2"),l.i32_const(r)))),l.call(o,l.getLocal("idx2"),c,d),l.call(i+"_copy",l.getLocal("idx1"),u),l.call(i+"_add",u,d,l.getLocal("idx1")),l.call(i+"_sub",u,d,l.getLocal("idx2")),l.call(a+"_mul",c,l.getLocal("pwm"),c),l.setLocal("j",l.i32_add(l.getLocal("j"),l.i32_const(1))),l.br(0))),l.setLocal("k",l.i32_add(l.getLocal("k"),l.getLocal("m"))),l.br(0))),l.setLocal("s",l.i32_add(l.getLocal("s"),l.i32_const(1))),l.br(0))),l.call(e+"__fftFinal",l.getLocal("px"),l.getLocal("bits"),l.getLocal("reverse"),l.getLocal("mulFactor")))}(),function(){const i=t.addFunction(e+"__log2");i.addParam("n","i32"),i.setReturnType("i32"),i.addLocal("bits","i32"),i.addLocal("aux","i32");const a=i.getCodeBuilder();i.addCode(a.setLocal("aux",a.i32_shr_u(a.getLocal("n"),a.i32_const(1)))),i.addCode(a.setLocal("bits",a.i32_const(0))),i.addCode(a.block(a.loop(a.br_if(1,a.i32_eqz(a.getLocal("aux"))),a.setLocal("aux",a.i32_shr_u(a.getLocal("aux"),a.i32_const(1))),a.setLocal("bits",a.i32_add(a.getLocal("bits"),a.i32_const(1))),a.br(0)))),i.addCode(a.if(a.i32_ne(a.getLocal("n"),a.i32_shl(a.i32_const(1),a.getLocal("bits"))),a.unreachable())),i.addCode(a.if(a.i32_gt_u(a.getLocal("bits"),a.i32_const(c)),a.unreachable())),i.addCode(a.getLocal("bits"))}(),F(),function(){const i=t.addFunction(e+"_ifft");i.addParam("px","i32"),i.addParam("n","i32"),i.addLocal("bits","i32"),i.addLocal("pInv2","i32");const a=i.getCodeBuilder();i.addCode(a.setLocal("bits",a.call(e+"__log2",a.getLocal("n"))),a.setLocal("pInv2",a.i32_add(a.i32_const(b),a.i32_mul(a.getLocal("bits"),a.i32_const(n)))),a.call(e+"_rawfft",a.getLocal("px"),a.getLocal("bits"),a.i32_const(1),a.getLocal("pInv2")))}(),function(){const s=t.addFunction(e+"_fftJoin");s.addParam("pBuff1","i32"),s.addParam("pBuff2","i32"),s.addParam("n","i32"),s.addParam("first","i32"),s.addParam("inc","i32"),s.addLocal("idx1","i32"),s.addLocal("idx2","i32"),s.addLocal("i","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(r)),u=l.i32_const(t.alloc(r));s.addCode(l.call(a+"_copy",l.getLocal("first"),c),l.setLocal("i",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("n"))),l.setLocal("idx1",l.i32_add(l.getLocal("pBuff1"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.setLocal("idx2",l.i32_add(l.getLocal("pBuff2"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.call(o,l.getLocal("idx2"),c,d),l.call(i+"_copy",l.getLocal("idx1"),u),l.call(i+"_add",u,d,l.getLocal("idx1")),l.call(i+"_sub",u,d,l.getLocal("idx2")),l.call(a+"_mul",c,l.getLocal("inc"),c),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}(),function(){const s=t.addFunction(e+"_fftJoinExt");s.addParam("pBuff1","i32"),s.addParam("pBuff2","i32"),s.addParam("n","i32"),s.addParam("first","i32"),s.addParam("inc","i32"),s.addParam("totalBits","i32"),s.addLocal("idx1","i32"),s.addLocal("idx2","i32"),s.addLocal("i","i32"),s.addLocal("pShiftToM","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(r));s.addCode(l.setLocal("pShiftToM",l.i32_add(l.i32_const(A),l.i32_mul(l.getLocal("totalBits"),l.i32_const(n)))),l.call(a+"_copy",l.getLocal("first"),c),l.setLocal("i",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("n"))),l.setLocal("idx1",l.i32_add(l.getLocal("pBuff1"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.setLocal("idx2",l.i32_add(l.getLocal("pBuff2"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.call(i+"_add",l.getLocal("idx1"),l.getLocal("idx2"),d),l.call(o,l.getLocal("idx2"),l.getLocal("pShiftToM"),l.getLocal("idx2")),l.call(i+"_add",l.getLocal("idx1"),l.getLocal("idx2"),l.getLocal("idx2")),l.call(o,l.getLocal("idx2"),c,l.getLocal("idx2")),l.call(i+"_copy",d,l.getLocal("idx1")),l.call(a+"_mul",c,l.getLocal("inc"),c),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}(),function(){const s=t.addFunction(e+"_fftJoinExtInv");s.addParam("pBuff1","i32"),s.addParam("pBuff2","i32"),s.addParam("n","i32"),s.addParam("first","i32"),s.addParam("inc","i32"),s.addParam("totalBits","i32"),s.addLocal("idx1","i32"),s.addLocal("idx2","i32"),s.addLocal("i","i32"),s.addLocal("pShiftToM","i32"),s.addLocal("pSConst","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(r));s.addCode(l.setLocal("pShiftToM",l.i32_add(l.i32_const(A),l.i32_mul(l.getLocal("totalBits"),l.i32_const(n)))),l.setLocal("pSConst",l.i32_add(l.i32_const(I),l.i32_mul(l.getLocal("totalBits"),l.i32_const(n)))),l.call(a+"_copy",l.getLocal("first"),c),l.setLocal("i",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("n"))),l.setLocal("idx1",l.i32_add(l.getLocal("pBuff1"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.setLocal("idx2",l.i32_add(l.getLocal("pBuff2"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.call(o,l.getLocal("idx2"),c,d),l.call(i+"_sub",l.getLocal("idx1"),d,l.getLocal("idx2")),l.call(o,l.getLocal("idx2"),l.getLocal("pSConst"),l.getLocal("idx2")),l.call(o,l.getLocal("idx1"),l.getLocal("pShiftToM"),l.getLocal("idx1")),l.call(i+"_sub",d,l.getLocal("idx1"),l.getLocal("idx1")),l.call(o,l.getLocal("idx1"),l.getLocal("pSConst"),l.getLocal("idx1")),l.call(a+"_mul",c,l.getLocal("inc"),c),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}(),function(){const s=t.addFunction(e+"_fftMix");s.addParam("pBuff","i32"),s.addParam("n","i32"),s.addParam("exp","i32"),s.addLocal("nGroups","i32"),s.addLocal("nPerGroup","i32"),s.addLocal("nPerGroupDiv2","i32"),s.addLocal("pairOffset","i32"),s.addLocal("idx1","i32"),s.addLocal("idx2","i32"),s.addLocal("i","i32"),s.addLocal("j","i32"),s.addLocal("pwm","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(r)),u=l.i32_const(t.alloc(r));s.addCode(l.setLocal("nPerGroup",l.i32_shl(l.i32_const(1),l.getLocal("exp"))),l.setLocal("nPerGroupDiv2",l.i32_shr_u(l.getLocal("nPerGroup"),l.i32_const(1))),l.setLocal("nGroups",l.i32_shr_u(l.getLocal("n"),l.getLocal("exp"))),l.setLocal("pairOffset",l.i32_mul(l.getLocal("nPerGroupDiv2"),l.i32_const(r))),l.setLocal("pwm",l.i32_add(l.i32_const(_),l.i32_mul(l.getLocal("exp"),l.i32_const(n)))),l.setLocal("i",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("nGroups"))),l.call(a+"_one",c),l.setLocal("j",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("j"),l.getLocal("nPerGroupDiv2"))),l.setLocal("idx1",l.i32_add(l.getLocal("pBuff"),l.i32_mul(l.i32_add(l.i32_mul(l.getLocal("i"),l.getLocal("nPerGroup")),l.getLocal("j")),l.i32_const(r)))),l.setLocal("idx2",l.i32_add(l.getLocal("idx1"),l.getLocal("pairOffset"))),l.call(o,l.getLocal("idx2"),c,d),l.call(i+"_copy",l.getLocal("idx1"),u),l.call(i+"_add",u,d,l.getLocal("idx1")),l.call(i+"_sub",u,d,l.getLocal("idx2")),l.call(a+"_mul",c,l.getLocal("pwm"),c),l.setLocal("j",l.i32_add(l.getLocal("j"),l.i32_const(1))),l.br(0))),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}(),function(){const a=t.addFunction(e+"_fftFinal");a.addParam("pBuff","i32"),a.addParam("n","i32"),a.addParam("factor","i32"),a.addLocal("idx1","i32"),a.addLocal("idx2","i32"),a.addLocal("i","i32"),a.addLocal("ndiv2","i32");const n=a.getCodeBuilder(),s=n.i32_const(t.alloc(r));a.addCode(n.setLocal("ndiv2",n.i32_shr_u(n.getLocal("n"),n.i32_const(1))),n.if(n.i32_and(n.getLocal("n"),n.i32_const(1)),n.call(o,n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("ndiv2"),n.i32_const(r))),n.getLocal("factor"),n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("ndiv2"),n.i32_const(r))))),n.setLocal("i",n.i32_const(0)),n.block(n.loop(n.br_if(1,n.i32_ge_u(n.getLocal("i"),n.getLocal("ndiv2"))),n.setLocal("idx1",n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("i"),n.i32_const(r)))),n.setLocal("idx2",n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.i32_sub(n.i32_sub(n.getLocal("n"),n.i32_const(1)),n.getLocal("i")),n.i32_const(r)))),n.call(o,n.getLocal("idx2"),n.getLocal("factor"),s),n.call(o,n.getLocal("idx1"),n.getLocal("factor"),n.getLocal("idx2")),n.call(i+"_copy",s,n.getLocal("idx1")),n.setLocal("i",n.i32_add(n.getLocal("i"),n.i32_const(1))),n.br(0))))}(),function(){const s=t.addFunction(e+"_prepareLagrangeEvaluation");s.addParam("pBuff1","i32"),s.addParam("pBuff2","i32"),s.addParam("n","i32"),s.addParam("first","i32"),s.addParam("inc","i32"),s.addParam("totalBits","i32"),s.addLocal("idx1","i32"),s.addLocal("idx2","i32"),s.addLocal("i","i32"),s.addLocal("pShiftToM","i32"),s.addLocal("pSConst","i32");const l=s.getCodeBuilder(),c=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(r));s.addCode(l.setLocal("pShiftToM",l.i32_add(l.i32_const(A),l.i32_mul(l.getLocal("totalBits"),l.i32_const(n)))),l.setLocal("pSConst",l.i32_add(l.i32_const(I),l.i32_mul(l.getLocal("totalBits"),l.i32_const(n)))),l.call(a+"_copy",l.getLocal("first"),c),l.setLocal("i",l.i32_const(0)),l.block(l.loop(l.br_if(1,l.i32_eq(l.getLocal("i"),l.getLocal("n"))),l.setLocal("idx1",l.i32_add(l.getLocal("pBuff1"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.setLocal("idx2",l.i32_add(l.getLocal("pBuff2"),l.i32_mul(l.getLocal("i"),l.i32_const(r)))),l.call(o,l.getLocal("idx1"),l.getLocal("pShiftToM"),d),l.call(i+"_sub",l.getLocal("idx2"),d,d),l.call(i+"_sub",l.getLocal("idx1"),l.getLocal("idx2"),l.getLocal("idx2")),l.call(o,d,l.getLocal("pSConst"),l.getLocal("idx1")),l.call(o,l.getLocal("idx2"),c,l.getLocal("idx2")),l.call(a+"_mul",c,l.getLocal("inc"),c),l.setLocal("i",l.i32_add(l.getLocal("i"),l.i32_const(1))),l.br(0))))}(),t.exportFunction(e+"_fft"),t.exportFunction(e+"_ifft"),t.exportFunction(e+"_rawfft"),t.exportFunction(e+"_fftJoin"),t.exportFunction(e+"_fftJoinExt"),t.exportFunction(e+"_fftJoinExtInv"),t.exportFunction(e+"_fftMix"),t.exportFunction(e+"_fftFinal"),t.exportFunction(e+"_prepareLagrangeEvaluation")},build_pol=function(t,e,i){const a=8*t.modules[i].n64;return function(){const o=t.addFunction(e+"_zero");o.addParam("px","i32"),o.addParam("n","i32"),o.addLocal("lastp","i32"),o.addLocal("p","i32");const n=o.getCodeBuilder();o.addCode(n.setLocal("p",n.getLocal("px")),n.setLocal("lastp",n.i32_add(n.getLocal("px"),n.i32_mul(n.getLocal("n"),n.i32_const(a)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("p"),n.getLocal("lastp"))),n.call(i+"_zero",n.getLocal("p")),n.setLocal("p",n.i32_add(n.getLocal("p"),n.i32_const(a))),n.br(0))))}(),function(){const o=t.addFunction(e+"_constructLC");o.addParam("ppolynomials","i32"),o.addParam("psignals","i32"),o.addParam("nSignals","i32"),o.addParam("pres","i32"),o.addLocal("i","i32"),o.addLocal("j","i32"),o.addLocal("pp","i32"),o.addLocal("ps","i32"),o.addLocal("pd","i32"),o.addLocal("ncoefs","i32");const n=o.getCodeBuilder(),r=n.i32_const(t.alloc(a));o.addCode(n.setLocal("i",n.i32_const(0)),n.setLocal("pp",n.getLocal("ppolynomials")),n.setLocal("ps",n.getLocal("psignals")),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("i"),n.getLocal("nSignals"))),n.setLocal("ncoefs",n.i32_load(n.getLocal("pp"))),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(4))),n.setLocal("j",n.i32_const(0)),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("j"),n.getLocal("ncoefs"))),n.setLocal("pd",n.i32_add(n.getLocal("pres"),n.i32_mul(n.i32_load(n.getLocal("pp")),n.i32_const(a)))),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(4))),n.call(i+"_mul",n.getLocal("ps"),n.getLocal("pp"),r),n.call(i+"_add",r,n.getLocal("pd"),n.getLocal("pd")),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(a))),n.setLocal("j",n.i32_add(n.getLocal("j"),n.i32_const(1))),n.br(0))),n.setLocal("ps",n.i32_add(n.getLocal("ps"),n.i32_const(a))),n.setLocal("i",n.i32_add(n.getLocal("i"),n.i32_const(1))),n.br(0))))}(),t.exportFunction(e+"_zero"),t.exportFunction(e+"_constructLC"),e},build_qap=function(t,e,i){const a=8*t.modules[i].n64;return function(){const o=t.addFunction(e+"_buildABC");o.addParam("pCoefs","i32"),o.addParam("nCoefs","i32"),o.addParam("pWitness","i32"),o.addParam("pA","i32"),o.addParam("pB","i32"),o.addParam("pC","i32"),o.addParam("offsetOut","i32"),o.addParam("nOut","i32"),o.addParam("offsetWitness","i32"),o.addParam("nWitness","i32"),o.addLocal("it","i32"),o.addLocal("ita","i32"),o.addLocal("itb","i32"),o.addLocal("last","i32"),o.addLocal("m","i32"),o.addLocal("c","i32"),o.addLocal("s","i32"),o.addLocal("pOut","i32");const n=o.getCodeBuilder(),r=n.i32_const(t.alloc(a));o.addCode(n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("nOut"),n.i32_const(a)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(i+"_zero",n.getLocal("ita")),n.call(i+"_zero",n.getLocal("itb")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(a))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(a))),n.br(0))),n.setLocal("it",n.getLocal("pCoefs")),n.setLocal("last",n.i32_add(n.getLocal("pCoefs"),n.i32_mul(n.getLocal("nCoefs"),n.i32_const(a+12)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("it"),n.getLocal("last"))),n.setLocal("s",n.i32_load(n.getLocal("it"),8)),n.if(n.i32_or(n.i32_lt_u(n.getLocal("s"),n.getLocal("offsetWitness")),n.i32_ge_u(n.getLocal("s"),n.i32_add(n.getLocal("offsetWitness"),n.getLocal("nWitness")))),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(a+12))),...n.br(1)]),n.setLocal("m",n.i32_load(n.getLocal("it"))),n.if(n.i32_eq(n.getLocal("m"),n.i32_const(0)),n.setLocal("pOut",n.getLocal("pA")),n.if(n.i32_eq(n.getLocal("m"),n.i32_const(1)),n.setLocal("pOut",n.getLocal("pB")),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(a+12))),...n.br(1)])),n.setLocal("c",n.i32_load(n.getLocal("it"),4)),n.if(n.i32_or(n.i32_lt_u(n.getLocal("c"),n.getLocal("offsetOut")),n.i32_ge_u(n.getLocal("c"),n.i32_add(n.getLocal("offsetOut"),n.getLocal("nOut")))),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(a+12))),...n.br(1)]),n.setLocal("pOut",n.i32_add(n.getLocal("pOut"),n.i32_mul(n.i32_sub(n.getLocal("c"),n.getLocal("offsetOut")),n.i32_const(a)))),n.call(i+"_mul",n.i32_add(n.getLocal("pWitness"),n.i32_mul(n.i32_sub(n.getLocal("s"),n.getLocal("offsetWitness")),n.i32_const(a))),n.i32_add(n.getLocal("it"),n.i32_const(12)),r),n.call(i+"_add",n.getLocal("pOut"),r,n.getLocal("pOut")),n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(a+12))),n.br(0))),n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("it",n.getLocal("pC")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("nOut"),n.i32_const(a)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(i+"_mul",n.getLocal("ita"),n.getLocal("itb"),n.getLocal("it")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(a))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(a))),n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(a))),n.br(0))))}(),function(){const o=t.addFunction(e+"_joinABC");o.addParam("pA","i32"),o.addParam("pB","i32"),o.addParam("pC","i32"),o.addParam("n","i32"),o.addParam("pP","i32"),o.addLocal("ita","i32"),o.addLocal("itb","i32"),o.addLocal("itc","i32"),o.addLocal("itp","i32"),o.addLocal("last","i32");const n=o.getCodeBuilder(),r=n.i32_const(t.alloc(a));o.addCode(n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("itc",n.getLocal("pC")),n.setLocal("itp",n.getLocal("pP")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("n"),n.i32_const(a)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(i+"_mul",n.getLocal("ita"),n.getLocal("itb"),r),n.call(i+"_sub",r,n.getLocal("itc"),n.getLocal("itp")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(a))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(a))),n.setLocal("itc",n.i32_add(n.getLocal("itc"),n.i32_const(a))),n.setLocal("itp",n.i32_add(n.getLocal("itp"),n.i32_const(a))),n.br(0))))}(),function(){const o=t.addFunction(e+"_batchAdd");o.addParam("pa","i32"),o.addParam("pb","i32"),o.addParam("n","i32"),o.addParam("pr","i32"),o.addLocal("ita","i32"),o.addLocal("itb","i32"),o.addLocal("itr","i32"),o.addLocal("last","i32");const n=o.getCodeBuilder();o.addCode(n.setLocal("ita",n.getLocal("pa")),n.setLocal("itb",n.getLocal("pb")),n.setLocal("itr",n.getLocal("pr")),n.setLocal("last",n.i32_add(n.getLocal("pa"),n.i32_mul(n.getLocal("n"),n.i32_const(a)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(i+"_add",n.getLocal("ita"),n.getLocal("itb"),n.getLocal("itr")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(a))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(a))),n.setLocal("itr",n.i32_add(n.getLocal("itr"),n.i32_const(a))),n.br(0))))}(),t.exportFunction(e+"_buildABC"),t.exportFunction(e+"_joinABC"),t.exportFunction(e+"_batchAdd"),e},build_applykey=function(t,e,i,a,o,n,r,s){const l=t.addFunction(e);l.addParam("pIn","i32"),l.addParam("n","i32"),l.addParam("pFirst","i32"),l.addParam("pInc","i32"),l.addParam("pOut","i32"),l.addLocal("pOldFree","i32"),l.addLocal("i","i32"),l.addLocal("pFrom","i32"),l.addLocal("pTo","i32");const c=l.getCodeBuilder(),d=c.i32_const(t.alloc(r));l.addCode(c.setLocal("pFrom",c.getLocal("pIn")),c.setLocal("pTo",c.getLocal("pOut"))),l.addCode(c.call(a+"_copy",c.getLocal("pFirst"),d)),l.addCode(c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(s,c.getLocal("pFrom"),d,c.getLocal("pTo")),c.setLocal("pFrom",c.i32_add(c.getLocal("pFrom"),c.i32_const(o))),c.setLocal("pTo",c.i32_add(c.getLocal("pTo"),c.i32_const(n))),c.call(a+"_mul",d,c.getLocal("pInc"),d),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))),t.exportFunction(e)};const bigInt$2=BigInteger.exports,utils$7=utils$c,buildF1m$1=build_f1m,buildF1$1=build_f1,buildF2m$1=build_f2m,buildF3m$1=build_f3m,buildCurve$1=build_curve_jacobian_a0,buildFFT$2=build_fft,buildPol$1=build_pol,buildQAP$1=build_qap,buildApplyKey$1=build_applykey;var build_bn128=function(t,e){const i=e||"bn128";if(t.modules[i])return i;const a=bigInt$2("21888242871839275222246405745257275088696311157297823662689037894645226208583"),o=bigInt$2("21888242871839275222246405745257275088548364400416034343698204186575808495617"),n=Math.floor((a.minus(1).bitLength()-1)/64)+1,r=8*n,s=r,l=r,c=2*l,d=12*l,u=t.alloc(utils$7.bigInt2BytesLE(o,s)),g=buildF1m$1(t,a,"f1m");buildF1$1(t,o,"fr","frm");const f=t.alloc(utils$7.bigInt2BytesLE(L(bigInt$2(3)),l)),h=buildCurve$1(t,"g1m","f1m",f);buildFFT$2(t,"frm","frm","frm","frm_mul"),buildPol$1(t,"pol","frm"),buildQAP$1(t,"qap","frm");const _=buildF2m$1(t,"f1m_neg","f2m","f1m"),p=t.alloc([...utils$7.bigInt2BytesLE(L(bigInt$2("19485874751759354771024239261021720505790618469301721065564631296452457478373")),l),...utils$7.bigInt2BytesLE(L(bigInt$2("266929791119991161246907387137283842545076965332900288569378510910307636690")),l)]),m=buildCurve$1(t,"g2m","f2m",p);function b(e,i){const a=t.addFunction(e);a.addParam("pG","i32"),a.addParam("pFr","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),n=o.i32_const(t.alloc(r));a.addCode(o.call("frm_fromMontgomery",o.getLocal("pFr"),n),o.call(i,o.getLocal("pG"),n,o.i32_const(r),o.getLocal("pr"))),t.exportFunction(e)}function L(t){return bigInt$2(t).times(bigInt$2.one.shiftLeft(8*l)).mod(a)}b("g1m_timesFr","g1m_timesScalar"),buildFFT$2(t,"g1m","g1m","frm","g1m_timesFr"),b("g2m_timesFr","g2m_timesScalar"),buildFFT$2(t,"g2m","g2m","frm","g2m_timesFr"),b("g1m_timesFrAffine","g1m_timesScalarAffine"),b("g2m_timesFrAffine","g2m_timesScalarAffine"),buildApplyKey$1(t,"frm_batchApplyKey","fmr","frm",r,r,r,"frm_mul"),buildApplyKey$1(t,"g1m_batchApplyKey","g1m","frm",3*r,3*r,r,"g1m_timesFr"),buildApplyKey$1(t,"g1m_batchApplyKeyMixed","g1m","frm",2*r,3*r,r,"g1m_timesFrAffine"),buildApplyKey$1(t,"g2m_batchApplyKey","g2m","frm",2*r*3,3*r*2,r,"g2m_timesFr"),buildApplyKey$1(t,"g2m_batchApplyKeyMixed","g2m","frm",2*r*2,3*r*2,r,"g2m_timesFrAffine");const w=[bigInt$2("1"),bigInt$2("2"),bigInt$2.one],y=t.alloc([...utils$7.bigInt2BytesLE(L(w[0]),l),...utils$7.bigInt2BytesLE(L(w[1]),l),...utils$7.bigInt2BytesLE(L(w[2]),l)]),A=[bigInt$2.zero,bigInt$2.one,bigInt$2.zero],I=t.alloc([...utils$7.bigInt2BytesLE(L(A[0]),l),...utils$7.bigInt2BytesLE(L(A[1]),l),...utils$7.bigInt2BytesLE(L(A[2]),l)]),C=[[bigInt$2("10857046999023057135944570762232829481370756359578518086990519993285655852781"),bigInt$2("11559732032986387107991004021392285783925812861821192530917403151452391805634")],[bigInt$2("8495653923123431417604973247489272438418190587263600148770280649306958101930"),bigInt$2("4082367875863433681332203403145435568316851327593401208105741076214120093531")],[bigInt$2.one,bigInt$2.zero]],B=t.alloc([...utils$7.bigInt2BytesLE(L(C[0][0]),l),...utils$7.bigInt2BytesLE(L(C[0][1]),l),...utils$7.bigInt2BytesLE(L(C[1][0]),l),...utils$7.bigInt2BytesLE(L(C[1][1]),l),...utils$7.bigInt2BytesLE(L(C[2][0]),l),...utils$7.bigInt2BytesLE(L(C[2][1]),l)]),E=[[bigInt$2.zero,bigInt$2.zero],[bigInt$2.one,bigInt$2.zero],[bigInt$2.zero,bigInt$2.zero]],F=t.alloc([...utils$7.bigInt2BytesLE(L(E[0][0]),l),...utils$7.bigInt2BytesLE(L(E[0][1]),l),...utils$7.bigInt2BytesLE(L(E[1][0]),l),...utils$7.bigInt2BytesLE(L(E[1][1]),l),...utils$7.bigInt2BytesLE(L(E[2][0]),l),...utils$7.bigInt2BytesLE(L(E[2][1]),l)]),S=t.alloc([...utils$7.bigInt2BytesLE(L(1),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l),...utils$7.bigInt2BytesLE(L(0),l)]),v=t.alloc([...utils$7.bigInt2BytesLE(L(9),l),...utils$7.bigInt2BytesLE(L(1),l)]),x=t.alloc([...utils$7.bigInt2BytesLE(L(bigInt$2(2).modInv(a)),l),...utils$7.bigInt2BytesLE(bigInt$2(0),l)]),$=v,P=t.alloc([...utils$7.bigInt2BytesLE(L("19485874751759354771024239261021720505790618469301721065564631296452457478373"),l),...utils$7.bigInt2BytesLE(L("266929791119991161246907387137283842545076965332900288569378510910307636690"),l)]);!function(){const e=t.addFunction(i+"_mulNR6");e.addParam("x","i32"),e.addParam("pr","i32");const a=e.getCodeBuilder();e.addCode(a.call(_+"_mul",a.i32_const(v),a.getLocal("x"),a.getLocal("pr")))}();const G=buildF3m$1(t,i+"_mulNR6","f6m","f2m");!function(){const e=t.addFunction(i+"_mulNR12");e.addParam("x","i32"),e.addParam("pr","i32");const a=e.getCodeBuilder();e.addCode(a.call(_+"_mul",a.i32_const(v),a.i32_add(a.getLocal("x"),a.i32_const(4*r)),a.getLocal("pr")),a.call(_+"_copy",a.getLocal("x"),a.i32_add(a.getLocal("pr"),a.i32_const(2*r))),a.call(_+"_copy",a.i32_add(a.getLocal("x"),a.i32_const(2*r)),a.i32_add(a.getLocal("pr"),a.i32_const(4*r))))}();const R=buildF2m$1(t,i+"_mulNR12","ftm",G),O=function(t){let e=t;const i=[];for(;e.gt(bigInt$2.zero);)e.isOdd()?i.push(1):i.push(0),e=e.shiftRight(1);return i}(bigInt$2("29793968203157093288")),U=t.alloc(O),q=3*c,z=O.length-1,M=O.reduce(((t,e)=>t+(0!=e?1:0)),0),T=6*r,Q=3*r*2+(M+z+1)*q;t.modules[i]={n64:n,pG1gen:y,pG1zero:I,pG1b:f,pG2gen:B,pG2zero:F,pG2b:p,pq:t.modules.f1m.pq,pr:u,pOneT:S,prePSize:T,preQSize:Q,r:o.toString(),q:a.toString()};const k=bigInt$2("4965661367192848881");function H(e){const o=[[[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")]],[[bigInt$2("1"),bigInt$2("0")],[bigInt$2("8376118865763821496583973867626364092589906065868298776909617916018768340080"),bigInt$2("16469823323077808223889137241176536799009286646108169935659301613961712198316")],[bigInt$2("21888242871839275220042445260109153167277707414472061641714758635765020556617"),bigInt$2("0")],[bigInt$2("11697423496358154304825782922584725312912383441159505038794027105778954184319"),bigInt$2("303847389135065887422783454877609941456349188919719272345083954437860409601")],[bigInt$2("21888242871839275220042445260109153167277707414472061641714758635765020556616"),bigInt$2("0")],[bigInt$2("3321304630594332808241809054958361220322477375291206261884409189760185844239"),bigInt$2("5722266937896532885780051958958348231143373700109372999374820235121374419868")],[bigInt$2("21888242871839275222246405745257275088696311157297823662689037894645226208582"),bigInt$2("0")],[bigInt$2("13512124006075453725662431877630910996106405091429524885779419978626457868503"),bigInt$2("5418419548761466998357268504080738289687024511189653727029736280683514010267")],[bigInt$2("2203960485148121921418603742825762020974279258880205651966"),bigInt$2("0")],[bigInt$2("10190819375481120917420622822672549775783927716138318623895010788866272024264"),bigInt$2("21584395482704209334823622290379665147239961968378104390343953940207365798982")],[bigInt$2("2203960485148121921418603742825762020974279258880205651967"),bigInt$2("0")],[bigInt$2("18566938241244942414004596690298913868373833782006617400804628704885040364344"),bigInt$2("16165975933942742336466353786298926857552937457188450663314217659523851788715")]]],n=[[[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")],[bigInt$2("1"),bigInt$2("0")]],[[bigInt$2("1"),bigInt$2("0")],[bigInt$2("21575463638280843010398324269430826099269044274347216827212613867836435027261"),bigInt$2("10307601595873709700152284273816112264069230130616436755625194854815875713954")],[bigInt$2("21888242871839275220042445260109153167277707414472061641714758635765020556616"),bigInt$2("0")],[bigInt$2("3772000881919853776433695186713858239009073593817195771773381919316419345261"),bigInt$2("2236595495967245188281701248203181795121068902605861227855261137820944008926")],[bigInt$2("2203960485148121921418603742825762020974279258880205651966"),bigInt$2("0")],[bigInt$2("18429021223477853657660792034369865839114504446431234726392080002137598044644"),bigInt$2("9344045779998320333812420223237981029506012124075525679208581902008406485703")]],[[bigInt$2("1"),bigInt$2("0")],[bigInt$2("2581911344467009335267311115468803099551665605076196740867805258568234346338"),bigInt$2("19937756971775647987995932169929341994314640652964949448313374472400716661030")],[bigInt$2("2203960485148121921418603742825762020974279258880205651966"),bigInt$2("0")],[bigInt$2("5324479202449903542726783395506214481928257762400643279780343368557297135718"),bigInt$2("16208900380737693084919495127334387981393726419856888799917914180988844123039")],[bigInt$2("21888242871839275220042445260109153167277707414472061641714758635765020556616"),bigInt$2("0")],[bigInt$2("13981852324922362344252311234282257507216387789820983642040889267519694726527"),bigInt$2("7629828391165209371577384193250820201684255241773809077146787135900891633097")]]],r=t.addFunction(i+"__frobeniusMap"+e);r.addParam("x","i32"),r.addParam("r","i32");const s=r.getCodeBuilder();for(let i=0;i<6;i++){const a=0==i?s.getLocal("x"):s.i32_add(s.getLocal("x"),s.i32_const(i*c)),u=a,f=s.i32_add(s.getLocal("x"),s.i32_const(i*c+l)),h=0==i?s.getLocal("r"):s.i32_add(s.getLocal("r"),s.i32_const(i*c)),p=h,m=s.i32_add(s.getLocal("r"),s.i32_const(i*c+l)),b=d(o[Math.floor(i/3)][e%12],n[i%3][e%6]),w=t.alloc([...utils$7.bigInt2BytesLE(L(b[0]),32),...utils$7.bigInt2BytesLE(L(b[1]),32)]);e%2==1?r.addCode(s.call(g+"_copy",u,p),s.call(g+"_neg",f,m),s.call(_+"_mul",h,s.i32_const(w),h)):r.addCode(s.call(_+"_mul",a,s.i32_const(w),h))}function d(t,e){const i=bigInt$2(t[0]),o=bigInt$2(t[1]),n=bigInt$2(e[0]),r=bigInt$2(e[1]),s=[i.times(n).minus(o.times(r)).mod(a),i.times(r).add(o.times(n)).mod(a)];return s[0].isNegative()&&(s[0]=s[0].add(a)),s}}function N(e,a){const o=function(t){let e=t;const i=[];for(;e.gt(bigInt$2.zero);){if(e.isOdd()){const t=2-e.mod(4).toJSNumber();i.push(t),e=e.minus(t)}else i.push(0);e=e.shiftRight(1)}return i}(e).map((t=>-1==t?255:t)),n=t.alloc(o);t.alloc(utils$7.bigInt2BytesLE(e,32));const r=t.addFunction(i+"__cyclotomicExp_"+a);r.addParam("x","i32"),r.addParam("r","i32"),r.addLocal("bit","i32"),r.addLocal("i","i32");const s=r.getCodeBuilder(),l=s.getLocal("x"),c=s.getLocal("r"),u=s.i32_const(t.alloc(d));r.addCode(s.call(R+"_conjugate",l,u),s.call(R+"_one",c),s.if(s.teeLocal("bit",s.i32_load8_s(s.i32_const(o.length-1),n)),s.if(s.i32_eq(s.getLocal("bit"),s.i32_const(1)),s.call(R+"_mul",c,l,c),s.call(R+"_mul",c,u,c))),s.setLocal("i",s.i32_const(o.length-2)),s.block(s.loop(s.call(i+"__cyclotomicSquare",c,c),s.if(s.teeLocal("bit",s.i32_load8_s(s.getLocal("i"),n)),s.if(s.i32_eq(s.getLocal("bit"),s.i32_const(1)),s.call(R+"_mul",c,l,c),s.call(R+"_mul",c,u,c))),s.br_if(1,s.i32_eqz(s.getLocal("i"))),s.setLocal("i",s.i32_sub(s.getLocal("i"),s.i32_const(1))),s.br(0))))}function D(){!function(){const e=t.addFunction(i+"__cyclotomicSquare");e.addParam("x","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("x"),n=a.i32_add(a.getLocal("x"),a.i32_const(c)),r=a.i32_add(a.getLocal("x"),a.i32_const(2*c)),s=a.i32_add(a.getLocal("x"),a.i32_const(3*c)),l=a.i32_add(a.getLocal("x"),a.i32_const(4*c)),d=a.i32_add(a.getLocal("x"),a.i32_const(5*c)),u=a.getLocal("r"),g=a.i32_add(a.getLocal("r"),a.i32_const(c)),f=a.i32_add(a.getLocal("r"),a.i32_const(2*c)),h=a.i32_add(a.getLocal("r"),a.i32_const(3*c)),p=a.i32_add(a.getLocal("r"),a.i32_const(4*c)),m=a.i32_add(a.getLocal("r"),a.i32_const(5*c)),b=a.i32_const(t.alloc(c)),L=a.i32_const(t.alloc(c)),w=a.i32_const(t.alloc(c)),y=a.i32_const(t.alloc(c)),A=a.i32_const(t.alloc(c)),I=a.i32_const(t.alloc(c)),C=a.i32_const(t.alloc(c)),B=a.i32_const(t.alloc(c));e.addCode(a.call(_+"_mul",o,l,C),a.call(_+"_mul",l,a.i32_const(v),b),a.call(_+"_add",o,b,b),a.call(_+"_add",o,l,B),a.call(_+"_mul",B,b,b),a.call(_+"_mul",a.i32_const(v),C,B),a.call(_+"_add",C,B,B),a.call(_+"_sub",b,B,b),a.call(_+"_add",C,C,L),a.call(_+"_mul",s,r,C),a.call(_+"_mul",r,a.i32_const(v),w),a.call(_+"_add",s,w,w),a.call(_+"_add",s,r,B),a.call(_+"_mul",B,w,w),a.call(_+"_mul",a.i32_const(v),C,B),a.call(_+"_add",C,B,B),a.call(_+"_sub",w,B,w),a.call(_+"_add",C,C,y),a.call(_+"_mul",n,d,C),a.call(_+"_mul",d,a.i32_const(v),A),a.call(_+"_add",n,A,A),a.call(_+"_add",n,d,B),a.call(_+"_mul",B,A,A),a.call(_+"_mul",a.i32_const(v),C,B),a.call(_+"_add",C,B,B),a.call(_+"_sub",A,B,A),a.call(_+"_add",C,C,I),a.call(_+"_sub",b,o,u),a.call(_+"_add",u,u,u),a.call(_+"_add",b,u,u),a.call(_+"_add",L,l,p),a.call(_+"_add",p,p,p),a.call(_+"_add",L,p,p),a.call(_+"_mul",I,a.i32_const($),B),a.call(_+"_add",B,s,h),a.call(_+"_add",h,h,h),a.call(_+"_add",B,h,h),a.call(_+"_sub",A,r,f),a.call(_+"_add",f,f,f),a.call(_+"_add",A,f,f),a.call(_+"_sub",w,n,g),a.call(_+"_add",g,g,g),a.call(_+"_add",w,g,g),a.call(_+"_add",y,d,m),a.call(_+"_add",m,m,m),a.call(_+"_add",y,m,m))}(),N(k,"w0");const e=t.addFunction(i+"__finalExponentiationLastChunk");e.addParam("x","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("x"),n=a.getLocal("r"),r=a.i32_const(t.alloc(d)),s=a.i32_const(t.alloc(d)),l=a.i32_const(t.alloc(d)),u=a.i32_const(t.alloc(d)),g=a.i32_const(t.alloc(d)),f=a.i32_const(t.alloc(d)),h=a.i32_const(t.alloc(d)),p=a.i32_const(t.alloc(d)),m=a.i32_const(t.alloc(d)),b=a.i32_const(t.alloc(d)),L=a.i32_const(t.alloc(d)),w=a.i32_const(t.alloc(d)),y=a.i32_const(t.alloc(d)),A=a.i32_const(t.alloc(d)),I=a.i32_const(t.alloc(d)),C=a.i32_const(t.alloc(d)),B=a.i32_const(t.alloc(d)),E=a.i32_const(t.alloc(d)),F=a.i32_const(t.alloc(d)),S=a.i32_const(t.alloc(d)),x=a.i32_const(t.alloc(d));e.addCode(a.call(i+"__cyclotomicExp_w0",o,r),a.call(R+"_conjugate",r,r),a.call(i+"__cyclotomicSquare",r,s),a.call(i+"__cyclotomicSquare",s,l),a.call(R+"_mul",l,s,u),a.call(i+"__cyclotomicExp_w0",u,g),a.call(R+"_conjugate",g,g),a.call(i+"__cyclotomicSquare",g,f),a.call(i+"__cyclotomicExp_w0",f,h),a.call(R+"_conjugate",h,h),a.call(R+"_conjugate",u,p),a.call(R+"_conjugate",h,m),a.call(R+"_mul",m,g,b),a.call(R+"_mul",b,p,L),a.call(R+"_mul",L,s,w),a.call(R+"_mul",L,g,y),a.call(R+"_mul",y,o,A),a.call(i+"__frobeniusMap1",w,I),a.call(R+"_mul",I,A,C),a.call(i+"__frobeniusMap2",L,B),a.call(R+"_mul",B,C,E),a.call(R+"_conjugate",o,F),a.call(R+"_mul",F,w,S),a.call(i+"__frobeniusMap3",S,x),a.call(R+"_mul",x,E,n))}const K=t.alloc(T),V=t.alloc(Q);function j(e){const a=t.addFunction(i+"_pairingEq"+e);for(let t=0;t<e;t++)a.addParam("p_"+t,"i32"),a.addParam("q_"+t,"i32");a.addParam("c","i32"),a.setReturnType("i32");const o=a.getCodeBuilder(),n=o.i32_const(t.alloc(d)),r=o.i32_const(t.alloc(d));a.addCode(o.call(R+"_one",n));for(let t=0;t<e;t++)a.addCode(o.call(i+"_prepareG1",o.getLocal("p_"+t),o.i32_const(K))),a.addCode(o.call(i+"_prepareG2",o.getLocal("q_"+t),o.i32_const(V))),a.addCode(o.call(i+"_millerLoop",o.i32_const(K),o.i32_const(V),r)),a.addCode(o.call(R+"_mul",n,r,n));a.addCode(o.call(i+"_finalExponentiation",n,n)),a.addCode(o.call(R+"_eq",n,o.getLocal("c")))}!function(){const e=t.addFunction(i+"_prepAddStep");e.addParam("pQ","i32"),e.addParam("pR","i32"),e.addParam("pCoef","i32");const a=e.getCodeBuilder(),o=a.getLocal("pQ"),n=a.i32_add(a.getLocal("pQ"),a.i32_const(c)),r=a.getLocal("pR"),s=a.i32_add(a.getLocal("pR"),a.i32_const(c)),l=a.i32_add(a.getLocal("pR"),a.i32_const(2*c)),d=a.getLocal("pCoef"),u=a.i32_add(a.getLocal("pCoef"),a.i32_const(c)),g=a.i32_add(a.getLocal("pCoef"),a.i32_const(2*c)),f=u,h=a.i32_const(t.alloc(c)),p=a.i32_const(t.alloc(c)),m=a.i32_const(t.alloc(c)),b=a.i32_const(t.alloc(c)),L=a.i32_const(t.alloc(c)),w=a.i32_const(t.alloc(c)),y=a.i32_const(t.alloc(c));e.addCode(a.call(_+"_mul",o,l,f),a.call(_+"_sub",r,f,f),a.call(_+"_mul",n,l,h),a.call(_+"_sub",s,h,h),a.call(_+"_square",f,p),a.call(_+"_square",h,m),a.call(_+"_mul",f,p,b),a.call(_+"_mul",r,p,L),a.call(_+"_add",L,L,y),a.call(_+"_mul",l,m,w),a.call(_+"_add",b,w,w),a.call(_+"_sub",w,y,w),a.call(_+"_mul",f,w,r),a.call(_+"_mul",b,s,s),a.call(_+"_sub",L,w,y),a.call(_+"_mul",h,y,y),a.call(_+"_sub",y,s,s),a.call(_+"_mul",l,b,l),a.call(_+"_mul",f,n,y),a.call(_+"_mul",h,o,d),a.call(_+"_sub",d,y,d),a.call(_+"_mul",d,a.i32_const($),d),a.call(_+"_neg",h,g))}(),function(){const e=t.addFunction(i+"_prepDblStep");e.addParam("pR","i32"),e.addParam("pCoef","i32");const a=e.getCodeBuilder(),o=a.getLocal("pR"),n=a.i32_add(a.getLocal("pR"),a.i32_const(c)),r=a.i32_add(a.getLocal("pR"),a.i32_const(2*c)),s=a.getLocal("pCoef"),l=a.i32_add(a.getLocal("pCoef"),a.i32_const(c)),d=a.i32_add(a.getLocal("pCoef"),a.i32_const(2*c)),u=a.i32_const(t.alloc(c)),g=a.i32_const(t.alloc(c)),f=a.i32_const(t.alloc(c)),h=a.i32_const(t.alloc(c)),p=a.i32_const(t.alloc(c)),m=a.i32_const(t.alloc(c)),b=a.i32_const(t.alloc(c)),L=a.i32_const(t.alloc(c)),w=a.i32_const(t.alloc(c)),y=a.i32_const(t.alloc(c)),A=a.i32_const(t.alloc(c)),I=a.i32_const(t.alloc(c));e.addCode(a.call(_+"_mul",n,a.i32_const(x),u),a.call(_+"_mul",o,u,u),a.call(_+"_square",n,g),a.call(_+"_square",r,f),a.call(_+"_add",f,f,h),a.call(_+"_add",h,f,h),a.call(_+"_mul",a.i32_const(P),h,p),a.call(_+"_add",p,p,m),a.call(_+"_add",p,m,m),a.call(_+"_add",g,m,b),a.call(_+"_mul",b,a.i32_const(x),b),a.call(_+"_add",g,f,I),a.call(_+"_add",n,r,L),a.call(_+"_square",L,L),a.call(_+"_sub",L,I,L),a.call(_+"_sub",p,g,w),a.call(_+"_square",o,y),a.call(_+"_square",p,A),a.call(_+"_sub",g,m,I),a.call(_+"_mul",u,I,o),a.call(_+"_add",A,A,I),a.call(_+"_add",A,I,I),a.call(_+"_square",b,n),a.call(_+"_sub",n,I,n),a.call(_+"_mul",g,L,r),a.call(_+"_mul",a.i32_const($),w,s),a.call(_+"_neg",L,l),a.call(_+"_add",y,y,d),a.call(_+"_add",y,d,d))}(),function(){const e=t.addFunction(i+"_prepareG1");e.addParam("pP","i32"),e.addParam("ppreP","i32");const a=e.getCodeBuilder();e.addCode(a.call(h+"_normalize",a.getLocal("pP"),a.getLocal("ppreP")))}(),function(){!function(){const e=t.addFunction(i+"_mulByQ");e.addParam("p1","i32"),e.addParam("pr","i32");const a=e.getCodeBuilder(),o=a.getLocal("p1"),n=a.i32_add(a.getLocal("p1"),a.i32_const(c)),r=a.i32_add(a.getLocal("p1"),a.i32_const(2*c)),s=a.getLocal("pr"),d=a.i32_add(a.getLocal("pr"),a.i32_const(c)),u=a.i32_add(a.getLocal("pr"),a.i32_const(2*c)),g=a.i32_const(t.alloc([...utils$7.bigInt2BytesLE(L("21575463638280843010398324269430826099269044274347216827212613867836435027261"),l),...utils$7.bigInt2BytesLE(L("10307601595873709700152284273816112264069230130616436755625194854815875713954"),l)])),f=a.i32_const(t.alloc([...utils$7.bigInt2BytesLE(L("2821565182194536844548159561693502659359617185244120367078079554186484126554"),l),...utils$7.bigInt2BytesLE(L("3505843767911556378687030309984248845540243509899259641013678093033130930403"),l)]));e.addCode(a.call(_+"_conjugate",o,s),a.call(_+"_mul",g,s,s),a.call(_+"_conjugate",n,d),a.call(_+"_mul",f,d,d),a.call(_+"_conjugate",r,u))}();const e=t.addFunction(i+"_prepareG2");e.addParam("pQ","i32"),e.addParam("ppreQ","i32"),e.addLocal("pCoef","i32"),e.addLocal("i","i32");const a=e.getCodeBuilder(),o=a.getLocal("pQ");a.i32_add(a.getLocal("pQ"),a.i32_const(c)),a.i32_add(a.getLocal("pQ"),a.i32_const(2*c));const n=t.alloc(3*c),r=a.i32_const(n),s=a.i32_const(n),d=a.i32_const(n+c),u=a.i32_const(n+2*c),g=a.i32_add(a.getLocal("ppreQ"),a.i32_const(0)),f=a.i32_add(a.getLocal("ppreQ"),a.i32_const(c));a.i32_add(a.getLocal("ppreQ"),a.i32_const(2*c));const h=t.alloc(3*c),p=a.i32_const(h),b=t.alloc(3*c),w=a.i32_const(b);a.i32_const(b);const y=a.i32_const(b+c);a.i32_const(b+2*c),e.addCode(a.call(m+"_normalize",o,g),a.call(_+"_copy",g,s),a.call(_+"_copy",f,d),a.call(_+"_one",u)),e.addCode(a.setLocal("pCoef",a.i32_add(a.getLocal("ppreQ"),a.i32_const(3*c))),a.setLocal("i",a.i32_const(O.length-2)),a.block(a.loop(a.call(i+"_prepDblStep",r,a.getLocal("pCoef")),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q))),a.if(a.i32_load8_s(a.getLocal("i"),U),[...a.call(i+"_prepAddStep",g,r,a.getLocal("pCoef")),...a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q)))]),a.br_if(1,a.i32_eqz(a.getLocal("i"))),a.setLocal("i",a.i32_sub(a.getLocal("i"),a.i32_const(1))),a.br(0)))),e.addCode(a.call(i+"_mulByQ",g,p),a.call(i+"_mulByQ",p,w)),e.addCode(a.call(_+"_neg",y,y),a.call(i+"_prepAddStep",p,r,a.getLocal("pCoef")),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q))),a.call(i+"_prepAddStep",w,r,a.getLocal("pCoef")),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q))))}(),function(){const e=t.addFunction(i+"__mulBy024");e.addParam("pEll0","i32"),e.addParam("pEllVW","i32"),e.addParam("pEllVV","i32"),e.addParam("pR","i32");const a=e.getCodeBuilder(),o=a.getLocal("pEll0"),n=a.getLocal("pEllVV"),s=a.getLocal("pEllVW"),l=a.getLocal("pR"),d=a.i32_add(a.getLocal("pR"),a.i32_const(2*r)),u=a.i32_add(a.getLocal("pR"),a.i32_const(4*r)),g=a.i32_add(a.getLocal("pR"),a.i32_const(6*r)),f=a.i32_add(a.getLocal("pR"),a.i32_const(8*r)),h=a.i32_add(a.getLocal("pR"),a.i32_const(10*r)),p=a.i32_const(t.alloc(c)),m=a.i32_const(t.alloc(c)),b=a.i32_const(t.alloc(c)),L=a.i32_const(t.alloc(c)),w=a.i32_const(t.alloc(c)),y=a.i32_const(t.alloc(c)),A=a.i32_const(t.alloc(c)),I=a.i32_const(t.alloc(c)),C=a.i32_const(t.alloc(c)),B=a.i32_const(t.alloc(c)),E=a.i32_const(t.alloc(c));e.addCode(a.call(_+"_mul",l,o,A),a.call(_+"_mul",u,n,I),a.call(_+"_mul",f,s,C),a.call(_+"_add",l,f,b),a.call(_+"_add",l,u,m),a.call(_+"_add",d,g,L),a.call(_+"_add",L,h,L),a.call(_+"_mul",d,n,B),a.call(_+"_add",B,C,w),a.call(_+"_mul",a.i32_const(v),w,y),a.call(_+"_add",y,A,l),a.call(_+"_mul",h,s,w),a.call(_+"_add",B,w,B),a.call(_+"_add",w,I,w),a.call(_+"_mul",a.i32_const(v),w,y),a.call(_+"_mul",d,o,w),a.call(_+"_add",B,w,B),a.call(_+"_add",y,w,d),a.call(_+"_add",o,n,p),a.call(_+"_mul",m,p,w),a.call(_+"_add",A,I,E),a.call(_+"_sub",w,E,w),a.call(_+"_mul",g,s,y),a.call(_+"_add",B,y,B),a.call(_+"_add",u,f,p),a.call(_+"_add",w,y,u),a.call(_+"_add",n,s,m),a.call(_+"_mul",m,p,w),a.call(_+"_add",I,C,E),a.call(_+"_sub",w,E,w),a.call(_+"_mul",a.i32_const(v),w,y),a.call(_+"_mul",g,o,w),a.call(_+"_add",B,w,B),a.call(_+"_add",y,w,g),a.call(_+"_mul",h,n,w),a.call(_+"_add",B,w,B),a.call(_+"_mul",a.i32_const(v),w,y),a.call(_+"_add",o,s,p),a.call(_+"_mul",b,p,w),a.call(_+"_add",A,C,E),a.call(_+"_sub",w,E,w),a.call(_+"_add",y,w,f),a.call(_+"_add",o,n,p),a.call(_+"_add",p,s,p),a.call(_+"_mul",L,p,w),a.call(_+"_sub",w,B,h))}(),function(){const e=t.addFunction(i+"__mulBy024Old");e.addParam("pEll0","i32"),e.addParam("pEllVW","i32"),e.addParam("pEllVV","i32"),e.addParam("pR","i32");const a=e.getCodeBuilder(),o=a.getLocal("pEll0"),n=a.getLocal("pEllVV"),r=a.getLocal("pEllVW"),s=a.getLocal("pR"),l=t.alloc(d),u=a.i32_const(l),g=a.i32_const(l),f=a.i32_const(l+c),h=a.i32_const(l+2*c),p=a.i32_const(l+3*c),m=a.i32_const(l+4*c),b=a.i32_const(l+5*c);e.addCode(a.call(_+"_copy",o,g),a.call(_+"_zero",f),a.call(_+"_copy",n,h),a.call(_+"_zero",p),a.call(_+"_copy",r,m),a.call(_+"_zero",b),a.call(R+"_mul",u,s,s))}(),function(){const e=t.addFunction(i+"_millerLoop");e.addParam("ppreP","i32"),e.addParam("ppreQ","i32"),e.addParam("r","i32"),e.addLocal("pCoef","i32"),e.addLocal("i","i32");const a=e.getCodeBuilder(),o=a.getLocal("ppreP"),n=a.i32_add(a.getLocal("ppreP"),a.i32_const(l)),r=a.getLocal("pCoef"),s=a.i32_add(a.getLocal("pCoef"),a.i32_const(c)),d=a.i32_add(a.getLocal("pCoef"),a.i32_const(2*c)),u=t.alloc(c),g=a.i32_const(u),f=t.alloc(c),h=a.i32_const(f),p=a.getLocal("r");e.addCode(a.call(R+"_one",p),a.setLocal("pCoef",a.i32_add(a.getLocal("ppreQ"),a.i32_const(3*c))),a.setLocal("i",a.i32_const(O.length-2)),a.block(a.loop(a.call(R+"_square",p,p),a.call(_+"_mul1",s,n,g),a.call(_+"_mul1",d,o,h),a.call(i+"__mulBy024",r,g,h,p),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q))),a.if(a.i32_load8_s(a.getLocal("i"),U),[...a.call(_+"_mul1",s,n,g),...a.call(_+"_mul1",d,o,h),...a.call(i+"__mulBy024",r,g,h,p),...a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q)))]),a.br_if(1,a.i32_eqz(a.getLocal("i"))),a.setLocal("i",a.i32_sub(a.getLocal("i"),a.i32_const(1))),a.br(0)))),e.addCode(a.call(_+"_mul1",s,n,g),a.call(_+"_mul1",d,o,h),a.call(i+"__mulBy024",r,g,h,p),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q))),a.call(_+"_mul1",s,n,g),a.call(_+"_mul1",d,o,h),a.call(i+"__mulBy024",r,g,h,p),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(q))))}();for(let e=0;e<10;e++)H(e),t.exportFunction(i+"__frobeniusMap"+e);!function(){const e=t.addFunction(i+"_finalExponentiationOld");e.addParam("x","i32"),e.addParam("r","i32");const a=bigInt$2("552484233613224096312617126783173147097382103762957654188882734314196910839907541213974502761540629817009608548654680343627701153829446747810907373256841551006201639677726139946029199968412598804882391702273019083653272047566316584365559776493027495458238373902875937659943504873220554161550525926302303331747463515644711876653177129578303191095900909191624817826566688241804408081892785725967931714097716709526092261278071952560171111444072049229123565057483750161460024353346284167282452756217662335528813519139808291170539072125381230815729071544861602750936964829313608137325426383735122175229541155376346436093930287402089517426973178917569713384748081827255472576937471496195752727188261435633271238710131736096299798168852925540549342330775279877006784354801422249722573783561685179618816480037695005515426162362431072245638324744480"),o=t.alloc(utils$7.bigInt2BytesLE(a,352)),n=e.getCodeBuilder();e.addCode(n.call(R+"_exp",n.getLocal("x"),n.i32_const(o),n.i32_const(352),n.getLocal("r")))}(),function(){!function(){const e=t.addFunction(i+"__finalExponentiationFirstChunk");e.addParam("x","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("x"),n=o,s=a.i32_add(o,a.i32_const(6*r)),l=a.getLocal("r"),c=t.alloc(d),u=a.i32_const(c),g=u,f=a.i32_const(c+6*r),h=a.i32_const(t.alloc(d)),_=a.i32_const(t.alloc(d)),p=a.i32_const(t.alloc(d));e.addCode(a.call(G+"_copy",n,g),a.call(G+"_neg",s,f),a.call(R+"_inverse",o,h),a.call(R+"_mul",u,h,_),a.call(i+"__frobeniusMap2",_,p),a.call(R+"_mul",_,p,l))}(),D();const e=t.addFunction(i+"_finalExponentiation");e.addParam("x","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("x"),n=a.getLocal("r"),s=a.i32_const(t.alloc(d));e.addCode(a.call(i+"__finalExponentiationFirstChunk",o,s),a.call(i+"__finalExponentiationLastChunk",s,n))}();for(let e=1;e<=5;e++)j(e),t.exportFunction(i+"_pairingEq"+e);!function(){const e=t.addFunction(i+"_pairing");e.addParam("p","i32"),e.addParam("q","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.i32_const(t.alloc(d));e.addCode(a.call(i+"_prepareG1",a.getLocal("p"),a.i32_const(K))),e.addCode(a.call(i+"_prepareG2",a.getLocal("q"),a.i32_const(V))),e.addCode(a.call(i+"_millerLoop",a.i32_const(K),a.i32_const(V),o)),e.addCode(a.call(i+"_finalExponentiation",o,a.getLocal("r")))}(),t.exportFunction(i+"_pairing"),t.exportFunction(i+"_prepareG1"),t.exportFunction(i+"_prepareG2"),t.exportFunction(i+"_millerLoop"),t.exportFunction(i+"_finalExponentiation"),t.exportFunction(i+"_finalExponentiationOld"),t.exportFunction(i+"__mulBy024"),t.exportFunction(i+"__mulBy024Old"),t.exportFunction(i+"__cyclotomicSquare"),t.exportFunction(i+"__cyclotomicExp_w0")};const bigInt$1=BigInteger.exports,utils$6=utils$c,buildF1m=build_f1m,buildF1=build_f1,buildF2m=build_f2m,buildF3m=build_f3m,buildCurve=build_curve_jacobian_a0,buildFFT$1=build_fft,buildPol=build_pol,buildQAP=build_qap,buildApplyKey=build_applykey;var build_bls12381=function(t,e){const i=e||"bls12381";if(t.modules[i])return i;const a=bigInt$1("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),o=bigInt$1("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),n=Math.floor((a.minus(1).bitLength()-1)/64)+1,r=8*n,s=r,l=2*s,c=12*s,d=Math.floor((o.minus(1).bitLength()-1)/64)+1,u=8*d,g=u,f=t.alloc(utils$6.bigInt2BytesLE(o,g)),h=buildF1m(t,a,"f1m","intq");buildF1(t,o,"fr","frm","intr");const _=t.alloc(utils$6.bigInt2BytesLE(y(bigInt$1(4)),s)),p=buildCurve(t,"g1m","f1m",_);buildFFT$1(t,"frm","frm","frm","frm_mul"),buildPol(t,"pol","frm"),buildQAP(t,"qap","frm");const m=buildF2m(t,"f1m_neg","f2m","f1m"),b=t.alloc([...utils$6.bigInt2BytesLE(y(bigInt$1("4")),s),...utils$6.bigInt2BytesLE(y(bigInt$1("4")),s)]),L=buildCurve(t,"g2m","f2m",b);function w(e,i){const a=t.addFunction(e);a.addParam("pG","i32"),a.addParam("pFr","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),n=o.i32_const(t.alloc(u));a.addCode(o.call("frm_fromMontgomery",o.getLocal("pFr"),n),o.call(i,o.getLocal("pG"),n,o.i32_const(u),o.getLocal("pr"))),t.exportFunction(e)}function y(t){return bigInt$1(t).times(bigInt$1.one.shiftLeft(8*s)).mod(a)}w("g1m_timesFr","g1m_timesScalar"),buildFFT$1(t,"g1m","g1m","frm","g1m_timesFr"),w("g2m_timesFr","g2m_timesScalar"),buildFFT$1(t,"g2m","g2m","frm","g2m_timesFr"),w("g1m_timesFrAffine","g1m_timesScalarAffine"),w("g2m_timesFrAffine","g2m_timesScalarAffine"),buildApplyKey(t,"frm_batchApplyKey","fmr","frm",u,u,u,"frm_mul"),buildApplyKey(t,"g1m_batchApplyKey","g1m","frm",3*r,3*r,u,"g1m_timesFr"),buildApplyKey(t,"g1m_batchApplyKeyMixed","g1m","frm",2*r,3*r,u,"g1m_timesFrAffine"),buildApplyKey(t,"g2m_batchApplyKey","g2m","frm",2*r*3,3*r*2,u,"g2m_timesFr"),buildApplyKey(t,"g2m_batchApplyKeyMixed","g2m","frm",2*r*2,3*r*2,u,"g2m_timesFrAffine");const A=[bigInt$1("3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507"),bigInt$1("1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569"),bigInt$1.one],I=t.alloc([...utils$6.bigInt2BytesLE(y(A[0]),s),...utils$6.bigInt2BytesLE(y(A[1]),s),...utils$6.bigInt2BytesLE(y(A[2]),s)]),C=[bigInt$1.zero,bigInt$1.one,bigInt$1.zero],B=t.alloc([...utils$6.bigInt2BytesLE(y(C[0]),s),...utils$6.bigInt2BytesLE(y(C[1]),s),...utils$6.bigInt2BytesLE(y(C[2]),s)]),E=[[bigInt$1("352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160"),bigInt$1("3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758")],[bigInt$1("1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905"),bigInt$1("927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582")],[bigInt$1.one,bigInt$1.zero]],F=t.alloc([...utils$6.bigInt2BytesLE(y(E[0][0]),s),...utils$6.bigInt2BytesLE(y(E[0][1]),s),...utils$6.bigInt2BytesLE(y(E[1][0]),s),...utils$6.bigInt2BytesLE(y(E[1][1]),s),...utils$6.bigInt2BytesLE(y(E[2][0]),s),...utils$6.bigInt2BytesLE(y(E[2][1]),s)]),S=[[bigInt$1.zero,bigInt$1.zero],[bigInt$1.one,bigInt$1.zero],[bigInt$1.zero,bigInt$1.zero]],v=t.alloc([...utils$6.bigInt2BytesLE(y(S[0][0]),s),...utils$6.bigInt2BytesLE(y(S[0][1]),s),...utils$6.bigInt2BytesLE(y(S[1][0]),s),...utils$6.bigInt2BytesLE(y(S[1][1]),s),...utils$6.bigInt2BytesLE(y(S[2][0]),s),...utils$6.bigInt2BytesLE(y(S[2][1]),s)]),x=t.alloc([...utils$6.bigInt2BytesLE(y(1),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s),...utils$6.bigInt2BytesLE(y(0),s)]);t.alloc([...utils$6.bigInt2BytesLE(y(bigInt$1(2).modInv(a)),s),...utils$6.bigInt2BytesLE(bigInt$1(0),s)]);const $=t.alloc([...utils$6.bigInt2BytesLE(y(1),s),...utils$6.bigInt2BytesLE(y(1),s)]);t.alloc([...utils$6.bigInt2BytesLE(y("4"),s),...utils$6.bigInt2BytesLE(y("4"),s)]),function(){const e=t.addFunction(m+"_mulNR");e.addParam("x","i32"),e.addParam("pr","i32");const i=e.getCodeBuilder(),a=i.i32_const(t.alloc(s)),o=i.getLocal("x"),n=i.i32_add(i.getLocal("x"),i.i32_const(s)),r=i.getLocal("pr"),l=i.i32_add(i.getLocal("pr"),i.i32_const(s));e.addCode(i.call(h+"_copy",o,a),i.call(h+"_sub",o,n,r),i.call(h+"_add",a,n,l))}();const P=buildF3m(t,m+"_mulNR","f6m","f2m");!function(){const e=t.addFunction(P+"_mulNR");e.addParam("x","i32"),e.addParam("pr","i32");const i=e.getCodeBuilder(),a=i.i32_const(t.alloc(2*s));e.addCode(i.call(m+"_copy",i.getLocal("x"),a),i.call(m+"_mulNR",i.i32_add(i.getLocal("x"),i.i32_const(4*r)),i.getLocal("pr")),i.call(m+"_copy",i.i32_add(i.getLocal("x"),i.i32_const(2*r)),i.i32_add(i.getLocal("pr"),i.i32_const(4*r))),i.call(m+"_copy",a,i.i32_add(i.getLocal("pr"),i.i32_const(2*r))))}();const G=buildF2m(t,P+"_mulNR","ftm",P),R=function(t){let e=t;const i=[];for(;e.gt(bigInt$1.zero);)e.isOdd()?i.push(1):i.push(0),e=e.shiftRight(1);return i}(bigInt$1("d201000000010000",16)),O=t.alloc(R),U=3*l,q=R.length-1,z=R.reduce(((t,e)=>t+(0!=e?1:0)),0),M=6*r,T=3*r*2+(z+q+1)*U,Q=bigInt$1("15132376222941642752");function k(e){const i=[[[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")]],[[bigInt$1("1"),bigInt$1("0")],[bigInt$1("3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760"),bigInt$1("151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027")],[bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351"),bigInt$1("0")],[bigInt$1("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530"),bigInt$1("1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257")],[bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),bigInt$1("0")],[bigInt$1("3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557"),bigInt$1("877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230")],[bigInt$1("4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786"),bigInt$1("0")],[bigInt$1("151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027"),bigInt$1("3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760")],[bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),bigInt$1("0")],[bigInt$1("1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257"),bigInt$1("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530")],[bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437"),bigInt$1("0")],[bigInt$1("877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230"),bigInt$1("3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557")]]],o=[[[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")],[bigInt$1("1"),bigInt$1("0")]],[[bigInt$1("1"),bigInt$1("0")],[bigInt$1("0"),bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436")],[bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),bigInt$1("0")],[bigInt$1("0"),bigInt$1("1")],[bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),bigInt$1("0")],[bigInt$1("0"),bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350")]],[[bigInt$1("1"),bigInt$1("0")],[bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437"),bigInt$1("0")],[bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),bigInt$1("0")],[bigInt$1("4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786"),bigInt$1("0")],[bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),bigInt$1("0")],[bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351"),bigInt$1("0")]]],n=t.addFunction(G+"_frobeniusMap"+e);n.addParam("x","i32"),n.addParam("r","i32");const c=n.getCodeBuilder();for(let a=0;a<6;a++){const u=0==a?c.getLocal("x"):c.i32_add(c.getLocal("x"),c.i32_const(a*l)),g=u,f=c.i32_add(c.getLocal("x"),c.i32_const(a*l+s)),_=0==a?c.getLocal("r"):c.i32_add(c.getLocal("r"),c.i32_const(a*l)),p=_,b=c.i32_add(c.getLocal("r"),c.i32_const(a*l+s)),L=d(i[Math.floor(a/3)][e%12],o[a%3][e%6]),w=t.alloc([...utils$6.bigInt2BytesLE(y(L[0]),r),...utils$6.bigInt2BytesLE(y(L[1]),r)]);e%2==1?n.addCode(c.call(h+"_copy",g,p),c.call(h+"_neg",f,b),c.call(m+"_mul",_,c.i32_const(w),_)):n.addCode(c.call(m+"_mul",u,c.i32_const(w),_))}function d(t,e){const i=bigInt$1(t[0]),o=bigInt$1(t[1]),n=bigInt$1(e[0]),r=bigInt$1(e[1]),s=[i.times(n).minus(o.times(r)).mod(a),i.times(r).add(o.times(n)).mod(a)];return s[0].isNegative()&&(s[0]=s[0].add(a)),s}}function H(e,a,o){const n=function(t){let e=t;const i=[];for(;e.gt(bigInt$1.zero);){if(e.isOdd()){const t=2-e.mod(4).toJSNumber();i.push(t),e=e.minus(t)}else i.push(0);e=e.shiftRight(1)}return i}(e).map((t=>-1==t?255:t)),r=t.alloc(n),s=t.addFunction(i+"__cyclotomicExp_"+o);s.addParam("x","i32"),s.addParam("r","i32"),s.addLocal("bit","i32"),s.addLocal("i","i32");const l=s.getCodeBuilder(),d=l.getLocal("x"),u=l.getLocal("r"),g=l.i32_const(t.alloc(c));s.addCode(l.call(G+"_conjugate",d,g),l.call(G+"_one",u),l.if(l.teeLocal("bit",l.i32_load8_s(l.i32_const(n.length-1),r)),l.if(l.i32_eq(l.getLocal("bit"),l.i32_const(1)),l.call(G+"_mul",u,d,u),l.call(G+"_mul",u,g,u))),l.setLocal("i",l.i32_const(n.length-2)),l.block(l.loop(l.call(i+"__cyclotomicSquare",u,u),l.if(l.teeLocal("bit",l.i32_load8_s(l.getLocal("i"),r)),l.if(l.i32_eq(l.getLocal("bit"),l.i32_const(1)),l.call(G+"_mul",u,d,u),l.call(G+"_mul",u,g,u))),l.br_if(1,l.i32_eqz(l.getLocal("i"))),l.setLocal("i",l.i32_sub(l.getLocal("i"),l.i32_const(1))),l.br(0)))),a&&s.addCode(l.call(G+"_conjugate",u,u))}t.modules[i]={n64q:n,n64r:d,n8q:r,n8r:u,pG1gen:I,pG1zero:B,pG1b:_,pG2gen:F,pG2zero:v,pG2b:b,pq:t.modules.f1m.pq,pr:f,pOneT:x,r:o,q:a,prePSize:M,preQSize:T},function(){const e=t.addFunction(P+"_mul1");e.addParam("pA","i32"),e.addParam("pC1","i32"),e.addParam("pR","i32");const i=e.getCodeBuilder(),a=i.getLocal("pA"),o=i.i32_add(i.getLocal("pA"),i.i32_const(2*s)),n=i.i32_add(i.getLocal("pA"),i.i32_const(4*s)),r=i.getLocal("pC1"),l=i.getLocal("pR"),c=i.i32_add(i.getLocal("pR"),i.i32_const(2*s)),d=i.i32_add(i.getLocal("pR"),i.i32_const(4*s)),u=i.i32_const(t.alloc(2*s)),g=i.i32_const(t.alloc(2*s));e.addCode(i.call(m+"_add",a,o,u),i.call(m+"_add",o,n,g),i.call(m+"_mul",o,r,d),i.call(m+"_mul",g,r,l),i.call(m+"_sub",l,d,l),i.call(m+"_mulNR",l,l),i.call(m+"_mul",u,r,c),i.call(m+"_sub",c,d,c))}(),function(){const e=t.addFunction(P+"_mul01");e.addParam("pA","i32"),e.addParam("pC0","i32"),e.addParam("pC1","i32"),e.addParam("pR","i32");const i=e.getCodeBuilder(),a=i.getLocal("pA"),o=i.i32_add(i.getLocal("pA"),i.i32_const(2*s)),n=i.i32_add(i.getLocal("pA"),i.i32_const(4*s)),r=i.getLocal("pC0"),l=i.getLocal("pC1"),c=i.getLocal("pR"),d=i.i32_add(i.getLocal("pR"),i.i32_const(2*s)),u=i.i32_add(i.getLocal("pR"),i.i32_const(4*s)),g=i.i32_const(t.alloc(2*s)),f=i.i32_const(t.alloc(2*s)),h=i.i32_const(t.alloc(2*s)),_=i.i32_const(t.alloc(2*s));e.addCode(i.call(m+"_mul",a,r,g),i.call(m+"_mul",o,l,f),i.call(m+"_add",a,o,h),i.call(m+"_add",a,n,_),i.call(m+"_add",o,n,c),i.call(m+"_mul",c,l,c),i.call(m+"_sub",c,f,c),i.call(m+"_mulNR",c,c),i.call(m+"_add",c,g,c),i.call(m+"_add",r,l,d),i.call(m+"_mul",d,h,d),i.call(m+"_sub",d,g,d),i.call(m+"_sub",d,f,d),i.call(m+"_mul",_,r,u),i.call(m+"_sub",u,g,u),i.call(m+"_add",u,f,u))}(),function(){const e=t.addFunction(G+"_mul014");e.addParam("pA","i32"),e.addParam("pC0","i32"),e.addParam("pC1","i32"),e.addParam("pC4","i32"),e.addParam("pR","i32");const i=e.getCodeBuilder(),a=i.getLocal("pA"),o=i.i32_add(i.getLocal("pA"),i.i32_const(6*s)),n=i.getLocal("pC0"),r=i.getLocal("pC1"),l=i.getLocal("pC4"),c=i.i32_const(t.alloc(6*s)),d=i.i32_const(t.alloc(6*s)),u=i.i32_const(t.alloc(2*s)),g=i.getLocal("pR"),f=i.i32_add(i.getLocal("pR"),i.i32_const(6*s));e.addCode(i.call(P+"_mul01",a,n,r,c),i.call(P+"_mul1",o,l,d),i.call(m+"_add",r,l,u),i.call(P+"_add",o,a,f),i.call(P+"_mul01",f,n,u,f),i.call(P+"_sub",f,c,f),i.call(P+"_sub",f,d,f),i.call(P+"_copy",d,g),i.call(P+"_mulNR",g,g),i.call(P+"_add",g,c,g))}(),function(){const e=t.addFunction(i+"_ell");e.addParam("pP","i32"),e.addParam("pCoefs","i32"),e.addParam("pF","i32");const a=e.getCodeBuilder(),o=a.getLocal("pP"),n=a.i32_add(a.getLocal("pP"),a.i32_const(r)),l=a.getLocal("pF"),c=a.getLocal("pCoefs"),d=a.i32_add(a.getLocal("pCoefs"),a.i32_const(s)),u=a.i32_add(a.getLocal("pCoefs"),a.i32_const(2*s)),g=a.i32_add(a.getLocal("pCoefs"),a.i32_const(3*s)),f=a.i32_add(a.getLocal("pCoefs"),a.i32_const(4*s)),_=t.alloc(2*s),p=a.i32_const(_),m=a.i32_const(_),b=a.i32_const(_+s),L=t.alloc(2*s),w=a.i32_const(L),y=a.i32_const(L),A=a.i32_const(L+s);e.addCode(a.call(h+"_mul",c,n,m),a.call(h+"_mul",d,n,b),a.call(h+"_mul",u,o,y),a.call(h+"_mul",g,o,A),a.call(G+"_mul014",l,f,w,p,l))}();const N=t.alloc(M),D=t.alloc(T);function K(e){const a=t.addFunction(i+"_pairingEq"+e);for(let t=0;t<e;t++)a.addParam("p_"+t,"i32"),a.addParam("q_"+t,"i32");a.addParam("c","i32"),a.setReturnType("i32");const o=a.getCodeBuilder(),n=o.i32_const(t.alloc(c)),r=o.i32_const(t.alloc(c));a.addCode(o.call(G+"_one",n));for(let t=0;t<e;t++)a.addCode(o.call(i+"_prepareG1",o.getLocal("p_"+t),o.i32_const(N))),a.addCode(o.call(i+"_prepareG2",o.getLocal("q_"+t),o.i32_const(D))),a.addCode(o.if(o.i32_eqz(o.call(p+"_inGroupAffine",o.i32_const(N))),o.ret(o.i32_const(0))),o.if(o.i32_eqz(o.call(L+"_inGroupAffine",o.i32_const(D))),o.ret(o.i32_const(0)))),a.addCode(o.call(i+"_millerLoop",o.i32_const(N),o.i32_const(D),r)),a.addCode(o.call(G+"_mul",n,r,n));a.addCode(o.call(i+"_finalExponentiation",n,n)),a.addCode(o.call(G+"_eq",n,o.getLocal("c")))}for(let e=0;e<10;e++)k(e),t.exportFunction(G+"_frobeniusMap"+e);!function(){const e=t.addFunction(p+"_inGroupAffine");e.addParam("p","i32"),e.setReturnType("i32");const i=e.getCodeBuilder(),a=bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),o=bigInt$1("793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350"),n=Q.times(Q).minus(bigInt$1.one).divide(bigInt$1(3)),l=i.i32_const(t.alloc(utils$6.bigInt2BytesLE(y(a),r))),c=i.i32_const(t.alloc(utils$6.bigInt2BytesLE(y(o),r))),d=i.i32_const(t.alloc(utils$6.bigInt2BytesLE(n,16))),u=i.getLocal("p"),g=i.i32_add(i.getLocal("p"),i.i32_const(s)),f=t.alloc(3*s),_=i.i32_const(f),m=i.i32_const(f),b=i.i32_const(f+s);i.i32_const(f+2*s);const L=t.alloc(2*s),w=i.i32_const(L),A=i.i32_const(L),I=i.i32_const(L+s);e.addCode(i.if(i.call(p+"_isZeroAffine",i.getLocal("p")),i.ret(i.i32_const(1))),i.if(i.i32_eqz(i.call(p+"_inCurveAffine",i.getLocal("p"))),i.ret(i.i32_const(0))),i.call(h+"_mul",u,l,m),i.call(h+"_copy",g,b),i.call(h+"_mul",u,c,A),i.call(h+"_copy",g,I),i.call(p+"_doubleAffine",_,_),i.call(p+"_subMixed",_,i.getLocal("p"),_),i.call(p+"_subMixed",_,w,_),i.call(p+"_timesScalar",_,d,i.i32_const(16),_),i.ret(i.call(p+"_eqMixed",_,w)));const C=t.addFunction(p+"_inGroup");C.addParam("pIn","i32"),C.setReturnType("i32");const B=C.getCodeBuilder(),E=B.i32_const(t.alloc(2*s));C.addCode(B.call(p+"_toAffine",B.getLocal("pIn"),E),B.ret(B.call(p+"_inGroupAffine",E)))}(),function(){const e=t.addFunction(L+"_inGroupAffine");e.addParam("p","i32"),e.setReturnType("i32");const i=e.getCodeBuilder(),a=[bigInt$1("2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279894"),bigInt$1("2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279893")],o=bigInt$1("4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436"),n=[bigInt$1("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530"),bigInt$1("2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530")],c=i.i32_const(t.alloc([...utils$6.bigInt2BytesLE(y(a[0]),r),...utils$6.bigInt2BytesLE(y(a[1]),r)])),d=i.i32_const(t.alloc(utils$6.bigInt2BytesLE(y(o),r))),u=i.i32_const(t.alloc([...utils$6.bigInt2BytesLE(y(n[0]),r),...utils$6.bigInt2BytesLE(y(n[1]),r)])),g=i.i32_const(t.alloc(utils$6.bigInt2BytesLE(Q,8))),f=i.getLocal("p"),_=i.i32_add(i.getLocal("p"),i.i32_const(l)),p=i.i32_const(t.alloc(s)),b=i.i32_const(t.alloc(l)),w=i.i32_const(t.alloc(l)),A=t.alloc(2*l),I=i.i32_const(A),C=i.i32_const(A),B=i.i32_const(A),E=i.i32_const(A+s),F=i.i32_const(A+l),S=i.i32_const(A+l),v=i.i32_const(A+l+s),x=t.alloc(3*l),$=i.i32_const(x),P=i.i32_const(x),G=i.i32_const(x),R=i.i32_const(x+s),O=i.i32_const(x+l),U=i.i32_const(x+l),q=i.i32_const(x+l+s),z=i.i32_const(x+2*l);e.addCode(i.if(i.call(L+"_isZeroAffine",i.getLocal("p")),i.ret(i.i32_const(1))),i.if(i.i32_eqz(i.call(L+"_inCurveAffine",i.getLocal("p"))),i.ret(i.i32_const(0))),i.call(m+"_mul",f,c,b),i.call(m+"_mul",_,c,w),i.call(m+"_mul1",b,d,C),i.call(m+"_neg",w,F),i.call(m+"_neg",b,P),i.call(m+"_mul",w,u,O),i.call(h+"_sub",B,E,p),i.call(h+"_add",B,E,E),i.call(h+"_copy",p,B),i.call(h+"_sub",S,v,p),i.call(h+"_add",S,v,v),i.call(h+"_copy",p,S),i.call(h+"_add",G,R,p),i.call(h+"_sub",G,R,R),i.call(h+"_copy",p,G),i.call(h+"_sub",q,U,p),i.call(h+"_add",U,q,q),i.call(h+"_copy",p,U),i.call(m+"_one",z),i.call(L+"_timesScalar",$,g,i.i32_const(8),$),i.call(L+"_addMixed",$,I,$),i.ret(i.call(L+"_eqMixed",$,i.getLocal("p"))));const M=t.addFunction(L+"_inGroup");M.addParam("pIn","i32"),M.setReturnType("i32");const T=M.getCodeBuilder(),k=T.i32_const(t.alloc(2*l));M.addCode(T.call(L+"_toAffine",T.getLocal("pIn"),k),T.ret(T.call(L+"_inGroupAffine",k)))}(),function(){const e=t.addFunction(i+"_prepAddStep");e.addParam("R","i32"),e.addParam("Q","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("R"),n=a.i32_add(a.getLocal("R"),a.i32_const(2*r)),s=a.i32_add(a.getLocal("R"),a.i32_const(4*r)),c=a.getLocal("Q"),d=a.i32_add(a.getLocal("Q"),a.i32_const(2*r)),u=a.getLocal("r"),g=a.i32_add(a.getLocal("r"),a.i32_const(2*r)),f=a.i32_add(a.getLocal("r"),a.i32_const(4*r)),h=a.i32_const(t.alloc(l)),_=a.i32_const(t.alloc(l)),p=a.i32_const(t.alloc(l)),b=a.i32_const(t.alloc(l)),L=a.i32_const(t.alloc(l)),w=a.i32_const(t.alloc(l)),y=a.i32_const(t.alloc(l)),A=a.i32_const(t.alloc(l)),I=a.i32_const(t.alloc(l)),C=a.i32_const(t.alloc(l)),B=a.i32_const(t.alloc(l));e.addCode(a.call(m+"_square",s,h),a.call(m+"_square",d,_),a.call(m+"_mul",h,c,b),a.call(m+"_add",d,s,g),a.call(m+"_square",g,g),a.call(m+"_sub",g,_,g),a.call(m+"_sub",g,h,g),a.call(m+"_mul",g,h,g),a.call(m+"_sub",b,o,L),a.call(m+"_square",L,w),a.call(m+"_add",w,w,y),a.call(m+"_add",y,y,y),a.call(m+"_mul",y,L,A),a.call(m+"_sub",g,n,I),a.call(m+"_sub",I,n,I),a.call(m+"_mul",I,c,f),a.call(m+"_mul",y,o,C),a.call(m+"_square",I,o),a.call(m+"_sub",o,A,o),a.call(m+"_sub",o,C,o),a.call(m+"_sub",o,C,o),a.call(m+"_add",s,L,s),a.call(m+"_square",s,s),a.call(m+"_sub",s,h,s),a.call(m+"_sub",s,w,s),a.call(m+"_add",d,s,u),a.call(m+"_sub",C,o,B),a.call(m+"_mul",B,I,B),a.call(m+"_mul",n,A,b),a.call(m+"_add",b,b,b),a.call(m+"_sub",B,b,n),a.call(m+"_square",u,u),a.call(m+"_sub",u,_,u),a.call(m+"_square",s,p),a.call(m+"_sub",u,p,u),a.call(m+"_add",f,f,f),a.call(m+"_sub",f,u,f),a.call(m+"_add",s,s,u),a.call(m+"_neg",I,I),a.call(m+"_add",I,I,g))}(),function(){const e=t.addFunction(i+"_prepDblStep");e.addParam("R","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("R"),n=a.i32_add(a.getLocal("R"),a.i32_const(2*r)),s=a.i32_add(a.getLocal("R"),a.i32_const(4*r)),c=a.getLocal("r"),d=a.i32_add(a.getLocal("r"),a.i32_const(2*r)),u=a.i32_add(a.getLocal("r"),a.i32_const(4*r)),g=a.i32_const(t.alloc(l)),f=a.i32_const(t.alloc(l)),h=a.i32_const(t.alloc(l)),_=a.i32_const(t.alloc(l)),p=a.i32_const(t.alloc(l));e.addCode(a.call(m+"_square",o,c),a.call(m+"_square",n,f),a.call(m+"_square",f,h),a.call(m+"_add",f,o,d),a.call(m+"_square",d,d),a.call(m+"_sub",d,c,d),a.call(m+"_sub",d,h,d),a.call(m+"_add",d,d,d),a.call(m+"_add",c,c,_),a.call(m+"_add",_,c,_),a.call(m+"_add",o,_,u),a.call(m+"_square",_,p),a.call(m+"_square",s,g),a.call(m+"_sub",p,d,o),a.call(m+"_sub",o,d,o),a.call(m+"_add",s,n,s),a.call(m+"_square",s,s),a.call(m+"_sub",s,f,s),a.call(m+"_sub",s,g,s),a.call(m+"_sub",d,o,n),a.call(m+"_mul",n,_,n),a.call(m+"_add",h,h,h),a.call(m+"_add",h,h,h),a.call(m+"_add",h,h,h),a.call(m+"_sub",n,h,n),a.call(m+"_mul",_,g,d),a.call(m+"_add",d,d,d),a.call(m+"_neg",d,d),a.call(m+"_square",u,u),a.call(m+"_sub",u,c,u),a.call(m+"_sub",u,p,u),a.call(m+"_add",f,f,f),a.call(m+"_add",f,f,f),a.call(m+"_sub",u,f,u),a.call(m+"_mul",s,g,c),a.call(m+"_add",c,c,c))}(),function(){const e=t.addFunction(i+"_prepareG1");e.addParam("pP","i32"),e.addParam("ppreP","i32");const a=e.getCodeBuilder();e.addCode(a.call(p+"_normalize",a.getLocal("pP"),a.getLocal("ppreP")))}(),function(){const e=t.addFunction(i+"_prepareG2");e.addParam("pQ","i32"),e.addParam("ppreQ","i32"),e.addLocal("pCoef","i32"),e.addLocal("i","i32");const a=e.getCodeBuilder(),o=a.getLocal("pQ"),n=t.alloc(3*l),r=a.i32_const(n),s=a.getLocal("ppreQ");e.addCode(a.call(L+"_normalize",o,s),a.if(a.call(L+"_isZero",s),a.ret([])),a.call(L+"_copy",s,r),a.setLocal("pCoef",a.i32_add(a.getLocal("ppreQ"),a.i32_const(3*l)))),e.addCode(a.setLocal("i",a.i32_const(R.length-2)),a.block(a.loop(a.call(i+"_prepDblStep",r,a.getLocal("pCoef")),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(U))),a.if(a.i32_load8_s(a.getLocal("i"),O),[...a.call(i+"_prepAddStep",r,s,a.getLocal("pCoef")),...a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(U)))]),a.br_if(1,a.i32_eqz(a.getLocal("i"))),a.setLocal("i",a.i32_sub(a.getLocal("i"),a.i32_const(1))),a.br(0))))}(),function(){const e=t.addFunction(i+"_millerLoop");e.addParam("ppreP","i32"),e.addParam("ppreQ","i32"),e.addParam("r","i32"),e.addLocal("pCoef","i32"),e.addLocal("i","i32");const a=e.getCodeBuilder(),o=a.getLocal("ppreP");a.getLocal("ppreQ");const n=a.getLocal("pCoef"),r=a.getLocal("r");e.addCode(a.call(G+"_one",r),a.if(a.call(p+"_isZero",o),a.ret([])),a.if(a.call(p+"_isZero",a.getLocal("ppreQ")),a.ret([])),a.setLocal("pCoef",a.i32_add(a.getLocal("ppreQ"),a.i32_const(3*l))),a.setLocal("i",a.i32_const(R.length-2)),a.block(a.loop(a.call(i+"_ell",o,n,r),a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(U))),a.if(a.i32_load8_s(a.getLocal("i"),O),[...a.call(i+"_ell",o,n,r),...a.setLocal("pCoef",a.i32_add(a.getLocal("pCoef"),a.i32_const(U)))]),a.call(G+"_square",r,r),a.br_if(1,a.i32_eq(a.getLocal("i"),a.i32_const(1))),a.setLocal("i",a.i32_sub(a.getLocal("i"),a.i32_const(1))),a.br(0))),a.call(i+"_ell",o,n,r)),e.addCode(a.call(G+"_conjugate",r,r))}(),function(){const e=t.addFunction(i+"_finalExponentiationOld");e.addParam("x","i32"),e.addParam("r","i32");const a=bigInt$1("322277361516934140462891564586510139908379969514828494218366688025288661041104682794998680497580008899973249814104447692778988208376779573819485263026159588510513834876303014016798809919343532899164848730280942609956670917565618115867287399623286813270357901731510188149934363360381614501334086825442271920079363289954510565375378443704372994881406797882676971082200626541916413184642520269678897559532260949334760604962086348898118982248842634379637598665468817769075878555493752214492790122785850202957575200176084204422751485957336465472324810982833638490904279282696134323072515220044451592646885410572234451732790590013479358343841220074174848221722017083597872017638514103174122784843925578370430843522959600095676285723737049438346544753168912974976791528535276317256904336520179281145394686565050419250614107803233314658825463117900250701199181529205942363159325765991819433914303908860460720581408201373164047773794825411011922305820065611121544561808414055302212057471395719432072209245600258134364584636810093520285711072578721435517884103526483832733289802426157301542744476740008494780363354305116978805620671467071400711358839553375340724899735460480144599782014906586543813292157922220645089192130209334926661588737007768565838519456601560804957985667880395221049249803753582637708560"),o=t.alloc(utils$6.bigInt2BytesLE(a,544)),n=e.getCodeBuilder();e.addCode(n.call(G+"_exp",n.getLocal("x"),n.i32_const(o),n.i32_const(544),n.getLocal("r")))}(),function(){!function(){const e=t.addFunction(i+"__cyclotomicSquare");e.addParam("x","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("x"),n=a.i32_add(a.getLocal("x"),a.i32_const(l)),r=a.i32_add(a.getLocal("x"),a.i32_const(2*l)),s=a.i32_add(a.getLocal("x"),a.i32_const(3*l)),c=a.i32_add(a.getLocal("x"),a.i32_const(4*l)),d=a.i32_add(a.getLocal("x"),a.i32_const(5*l)),u=a.getLocal("r"),g=a.i32_add(a.getLocal("r"),a.i32_const(l)),f=a.i32_add(a.getLocal("r"),a.i32_const(2*l)),h=a.i32_add(a.getLocal("r"),a.i32_const(3*l)),_=a.i32_add(a.getLocal("r"),a.i32_const(4*l)),p=a.i32_add(a.getLocal("r"),a.i32_const(5*l)),b=a.i32_const(t.alloc(l)),L=a.i32_const(t.alloc(l)),w=a.i32_const(t.alloc(l)),y=a.i32_const(t.alloc(l)),A=a.i32_const(t.alloc(l)),I=a.i32_const(t.alloc(l)),C=a.i32_const(t.alloc(l)),B=a.i32_const(t.alloc(l));e.addCode(a.call(m+"_mul",o,c,C),a.call(m+"_mulNR",c,b),a.call(m+"_add",o,b,b),a.call(m+"_add",o,c,B),a.call(m+"_mul",B,b,b),a.call(m+"_mulNR",C,B),a.call(m+"_add",C,B,B),a.call(m+"_sub",b,B,b),a.call(m+"_add",C,C,L),a.call(m+"_mul",s,r,C),a.call(m+"_mulNR",r,w),a.call(m+"_add",s,w,w),a.call(m+"_add",s,r,B),a.call(m+"_mul",B,w,w),a.call(m+"_mulNR",C,B),a.call(m+"_add",C,B,B),a.call(m+"_sub",w,B,w),a.call(m+"_add",C,C,y),a.call(m+"_mul",n,d,C),a.call(m+"_mulNR",d,A),a.call(m+"_add",n,A,A),a.call(m+"_add",n,d,B),a.call(m+"_mul",B,A,A),a.call(m+"_mulNR",C,B),a.call(m+"_add",C,B,B),a.call(m+"_sub",A,B,A),a.call(m+"_add",C,C,I),a.call(m+"_sub",b,o,u),a.call(m+"_add",u,u,u),a.call(m+"_add",b,u,u),a.call(m+"_add",L,c,_),a.call(m+"_add",_,_,_),a.call(m+"_add",L,_,_),a.call(m+"_mul",I,a.i32_const($),B),a.call(m+"_add",B,s,h),a.call(m+"_add",h,h,h),a.call(m+"_add",B,h,h),a.call(m+"_sub",A,r,f),a.call(m+"_add",f,f,f),a.call(m+"_add",A,f,f),a.call(m+"_sub",w,n,g),a.call(m+"_add",g,g,g),a.call(m+"_add",w,g,g),a.call(m+"_add",y,d,p),a.call(m+"_add",p,p,p),a.call(m+"_add",y,p,p))}(),H(Q,true,"w0");const e=t.addFunction(i+"_finalExponentiation");e.addParam("x","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.getLocal("x"),n=a.getLocal("r"),r=a.i32_const(t.alloc(c)),s=a.i32_const(t.alloc(c)),d=a.i32_const(t.alloc(c)),u=a.i32_const(t.alloc(c)),g=a.i32_const(t.alloc(c)),f=a.i32_const(t.alloc(c)),h=a.i32_const(t.alloc(c));e.addCode(a.call(G+"_frobeniusMap6",o,r),a.call(G+"_inverse",o,s),a.call(G+"_mul",r,s,d),a.call(G+"_copy",d,s),a.call(G+"_frobeniusMap2",d,d),a.call(G+"_mul",d,s,d),a.call(i+"__cyclotomicSquare",d,s),a.call(G+"_conjugate",s,s),a.call(i+"__cyclotomicExp_w0",d,u),a.call(i+"__cyclotomicSquare",u,g),a.call(G+"_mul",s,u,f),a.call(i+"__cyclotomicExp_w0",f,s),a.call(i+"__cyclotomicExp_w0",s,r),a.call(i+"__cyclotomicExp_w0",r,h),a.call(G+"_mul",h,g,h),a.call(i+"__cyclotomicExp_w0",h,g),a.call(G+"_conjugate",f,f),a.call(G+"_mul",g,f,g),a.call(G+"_mul",g,d,g),a.call(G+"_conjugate",d,f),a.call(G+"_mul",s,d,s),a.call(G+"_frobeniusMap3",s,s),a.call(G+"_mul",h,f,h),a.call(G+"_frobeniusMap1",h,h),a.call(G+"_mul",u,r,u),a.call(G+"_frobeniusMap2",u,u),a.call(G+"_mul",u,s,u),a.call(G+"_mul",u,h,u),a.call(G+"_mul",u,g,n))}();for(let e=1;e<=5;e++)K(e),t.exportFunction(i+"_pairingEq"+e);!function(){const e=t.addFunction(i+"_pairing");e.addParam("p","i32"),e.addParam("q","i32"),e.addParam("r","i32");const a=e.getCodeBuilder(),o=a.i32_const(t.alloc(c));e.addCode(a.call(i+"_prepareG1",a.getLocal("p"),a.i32_const(N))),e.addCode(a.call(i+"_prepareG2",a.getLocal("q"),a.i32_const(D))),e.addCode(a.call(i+"_millerLoop",a.i32_const(N),a.i32_const(D),o)),e.addCode(a.call(i+"_finalExponentiation",o,a.getLocal("r")))}(),t.exportFunction(i+"_pairing"),t.exportFunction(i+"_prepareG1"),t.exportFunction(i+"_prepareG2"),t.exportFunction(i+"_millerLoop"),t.exportFunction(i+"_finalExponentiation"),t.exportFunction(i+"_finalExponentiationOld"),t.exportFunction(i+"__cyclotomicSquare"),t.exportFunction(i+"__cyclotomicExp_w0"),t.exportFunction(P+"_mul1"),t.exportFunction(P+"_mul01"),t.exportFunction(G+"_mul014"),t.exportFunction(p+"_inGroupAffine"),t.exportFunction(p+"_inGroup"),t.exportFunction(L+"_inGroupAffine"),t.exportFunction(L+"_inGroup")},buildBn128$1=build_bn128,buildBls12381$1=build_bls12381;function stringifyBigInts$5(t){if("bigint"==typeof t||void 0!==t.eq)return t.toString(10);if(t instanceof Uint8Array)return fromRprLE(t,0);if(Array.isArray(t))return t.map(stringifyBigInts$5);if("object"==typeof t){const e={};return Object.keys(t).forEach((i=>{e[i]=stringifyBigInts$5(t[i])})),e}return t}function unstringifyBigInts$a(t){if("string"==typeof t&&/^[0-9]+$/.test(t))return BigInt(t);if("string"==typeof t&&/^0x[0-9a-fA-F]+$/.test(t))return BigInt(t);if(Array.isArray(t))return t.map(unstringifyBigInts$a);if("object"==typeof t){if(null===t)return null;const e={};return Object.keys(t).forEach((i=>{e[i]=unstringifyBigInts$a(t[i])})),e}return t}function beBuff2int$2(t){let e=BigInt(0),i=t.length,a=0;const o=new DataView(t.buffer,t.byteOffset,t.byteLength);for(;i>0;)i>=4?(i-=4,e+=BigInt(o.getUint32(i))<<BigInt(8*a),a+=4):i>=2?(i-=2,e+=BigInt(o.getUint16(i))<<BigInt(8*a),a+=2):(i-=1,e+=BigInt(o.getUint8(i))<<BigInt(8*a),a+=1);return e}function beInt2Buff$2(t,e){let i=t;const a=new Uint8Array(e),o=new DataView(a.buffer);let n=e;for(;n>0;)n-4>=0?(n-=4,o.setUint32(n,Number(i&BigInt(4294967295))),i>>=BigInt(32)):n-2>=0?(n-=2,o.setUint16(n,Number(i&BigInt(65535))),i>>=BigInt(16)):(n-=1,o.setUint8(n,Number(i&BigInt(255))),i>>=BigInt(8));if(i)throw new Error("Number does not fit in this length");return a}function leBuff2int$2(t){let e=BigInt(0),i=0;const a=new DataView(t.buffer,t.byteOffset,t.byteLength);for(;i<t.length;)i+4<=t.length?(e+=BigInt(a.getUint32(i,!0))<<BigInt(8*i),i+=4):i+4<=t.length?(e+=BigInt(a.getUint16(i,!0))<<BigInt(8*i),i+=2):(e+=BigInt(a.getUint8(i,!0))<<BigInt(8*i),i+=1);return e}function leInt2Buff$2(t,e){let i=t;void 0===e&&0==(e=Math.floor((bitLength(t)-1)/8)+1)&&(e=1);const a=new Uint8Array(e),o=new DataView(a.buffer);let n=0;for(;n<e;)n+4<=e?(o.setUint32(n,Number(i&BigInt(4294967295)),!0),n+=4,i>>=BigInt(32)):n+2<=e?(o.setUint16(Number(n,i&BigInt(65535)),!0),n+=2,i>>=BigInt(16)):(o.setUint8(Number(n,i&BigInt(255)),!0),n+=1,i>>=BigInt(8));if(i)throw new Error("Number does not fit in this length");return a}function stringifyFElements$1(t,e){if("bigint"==typeof e||void 0!==e.eq)return e.toString(10);if(e instanceof Uint8Array)return t.toString(t.e(e));if(Array.isArray(e))return e.map(stringifyFElements$1.bind(this,t));if("object"==typeof e){const i={};return Object.keys(e).forEach((a=>{i[a]=stringifyFElements$1(t,e[a])})),i}return e}function unstringifyFElements$1(t,e){if("string"==typeof e&&/^[0-9]+$/.test(e))return t.e(e);if("string"==typeof e&&/^0x[0-9a-fA-F]+$/.test(e))return t.e(e);if(Array.isArray(e))return e.map(unstringifyFElements$1.bind(this,t));if("object"==typeof e){if(null===e)return null;const i={};return Object.keys(e).forEach((a=>{i[a]=unstringifyFElements$1(t,e[a])})),i}return e}var utils_native=Object.freeze({__proto__:null,stringifyBigInts:stringifyBigInts$5,unstringifyBigInts:unstringifyBigInts$a,beBuff2int:beBuff2int$2,beInt2Buff:beInt2Buff$2,leBuff2int:leBuff2int$2,leInt2Buff:leInt2Buff$2,stringifyFElements:stringifyFElements$1,unstringifyFElements:unstringifyFElements$1});function stringifyBigInts$4(t){if("bigint"==typeof t||void 0!==t.eq)return t.toString(10);if(Array.isArray(t))return t.map(stringifyBigInts$4);if("object"==typeof t){const e={};return Object.keys(t).forEach((i=>{e[i]=stringifyBigInts$4(t[i])})),e}return t}function unstringifyBigInts$9(t){if("string"==typeof t&&/^[0-9]+$/.test(t))return bigInt$8(t);if("string"==typeof t&&/^0x[0-9a-fA-F]+$/.test(t))return bigInt$8(t);if(Array.isArray(t))return t.map(unstringifyBigInts$9);if("object"==typeof t){const e={};return Object.keys(t).forEach((i=>{e[i]=unstringifyBigInts$9(t[i])})),e}return t}function beBuff2int$1(t){let e=bigInt$8.zero;for(let i=0;i<t.length;i++){const a=bigInt$8(t[t.length-i-1]);e=e.add(a.shiftLeft(8*i))}return e}function beInt2Buff$1(t,e){let i=t,a=e-1;const o=new Uint8Array(e);for(;i.gt(bigInt$8.zero)&&a>=0;){let t=Number(i.and(bigInt$8("255")));o[a]=t,a--,i=i.shiftRight(8)}if(!i.eq(bigInt$8.zero))throw new Error("Number does not fit in this length");return o}function leBuff2int$1(t){let e=bigInt$8.zero;for(let i=0;i<t.length;i++){const a=bigInt$8(t[i]);e=e.add(a.shiftLeft(8*i))}return e}function leInt2Buff$1(t,e){let i=t,a=0;const o=new Uint8Array(e);for(;i.gt(bigInt$8.zero)&&a<o.length;){let t=Number(i.and(bigInt$8(255)));o[a]=t,a++,i=i.shiftRight(8)}if(!i.eq(bigInt$8.zero))throw new Error("Number does not fit in this length");return o}var utils_bigint=Object.freeze({__proto__:null,stringifyBigInts:stringifyBigInts$4,unstringifyBigInts:unstringifyBigInts$9,beBuff2int:beBuff2int$1,beInt2Buff:beInt2Buff$1,leBuff2int:leBuff2int$1,leInt2Buff:leInt2Buff$1});let utils$5={};const supportsNativeBigInt="function"==typeof BigInt;supportsNativeBigInt?Object.assign(utils$5,utils_native):Object.assign(utils$5,utils_bigint);const _revTable=[];for(let t=0;t<256;t++)_revTable[t]=_revSlow(t,8);function _revSlow(t,e){let i=0,a=t;for(let t=0;t<e;t++)i<<=1,i|=1&a,a>>=1;return i}utils$5.bitReverse=function(t,e){return(_revTable[t>>>24]|_revTable[t>>>16&255]<<8|_revTable[t>>>8&255]<<16|_revTable[255&t]<<24)>>>32-e},utils$5.log2=function(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)},utils$5.buffReverseBits=function(t,e){const i=t.byteLength/e,a=utils$5.log2(i);if(i!=1<<a)throw new Error("Invalid number of pointers");for(let o=0;o<i;o++){const i=utils$5.bitReverse(o,a);if(o>i){const a=t.slice(o*e,(o+1)*e);t.set(t.slice(i*e,(i+1)*e),o*e),t.set(a,i*e)}}},utils$5.array2buffer=function(t,e){const i=new Uint8Array(e*t.length);for(let a=0;a<t.length;a++)i.set(t[a],a*e);return i},utils$5.buffer2array=function(t,e){const i=t.byteLength/e,a=new Array(i);for(let o=0;o<i;o++)a[o]=t.slice(o*e,o*e+e);return a};let{bitReverse:bitReverse,log2:log2$1,buffReverseBits:buffReverseBits,stringifyBigInts:stringifyBigInts$3,unstringifyBigInts:unstringifyBigInts$8,beBuff2int:beBuff2int,beInt2Buff:beInt2Buff,leBuff2int:leBuff2int,leInt2Buff:leInt2Buff,array2buffer:array2buffer,buffer2array:buffer2array,stringifyFElements:stringifyFElements,unstringifyFElements:unstringifyFElements}=utils$5;var _utils=Object.freeze({__proto__:null,bitReverse:bitReverse,log2:log2$1,buffReverseBits:buffReverseBits,stringifyBigInts:stringifyBigInts$3,unstringifyBigInts:unstringifyBigInts$8,beBuff2int:beBuff2int,beInt2Buff:beInt2Buff,leBuff2int:leBuff2int,leInt2Buff:leInt2Buff,array2buffer:array2buffer,buffer2array:buffer2array,stringifyFElements:stringifyFElements,unstringifyFElements:unstringifyFElements});const PAGE_SIZE$1=1<<30;class BigBuffer{constructor(t){this.buffers=[],this.byteLength=t;for(let e=0;e<t;e+=PAGE_SIZE$1){const i=Math.min(t-e,PAGE_SIZE$1);this.buffers.push(new Uint8Array(i))}}slice(t,e){void 0===e&&(e=this.byteLength),void 0===t&&(t=0);const i=e-t,a=Math.floor(t/PAGE_SIZE$1);if(a==Math.floor((t+i-1)/PAGE_SIZE$1)||0==i)return this.buffers[a].slice(t%PAGE_SIZE$1,t%PAGE_SIZE$1+i);let o,n=a,r=t%PAGE_SIZE$1,s=i;for(;s>0;){const t=r+s>PAGE_SIZE$1?PAGE_SIZE$1-r:s,e=new Uint8Array(this.buffers[n].buffer,this.buffers[n].byteOffset+r,t);if(t==i)return e.slice();o||(o=i<=PAGE_SIZE$1?new Uint8Array(i):new BigBuffer(i)),o.set(e,i-s),s-=t,n++,r=0}return o}set(t,e){void 0===e&&(e=0);const i=t.byteLength;if(0==i)return;const a=Math.floor(e/PAGE_SIZE$1);if(a==Math.floor((e+i-1)/PAGE_SIZE$1))return t instanceof BigBuffer&&1==t.buffers.length?this.buffers[a].set(t.buffers[0],e%PAGE_SIZE$1):this.buffers[a].set(t,e%PAGE_SIZE$1);let o=a,n=e%PAGE_SIZE$1,r=i;for(;r>0;){const e=n+r>PAGE_SIZE$1?PAGE_SIZE$1-n:r,a=t.slice(i-r,i-r+e);new Uint8Array(this.buffers[o].buffer,this.buffers[o].byteOffset+n,e).set(a),r-=e,o++,n=0}}}function buildBatchConvert(t,e,i,a){return async function(o){const n=Math.floor(o.byteLength/i);if(n*i!==o.byteLength)throw new Error("Invalid buffer size");const r=Math.floor(n/t.concurrency),s=[];for(let l=0;l<t.concurrency;l++){let c;if(c=l<t.concurrency-1?r:n-l*r,0==c)continue;const d=[{cmd:"ALLOCSET",var:0,buff:o.slice(l*r*i,l*r*i+c*i)},{cmd:"ALLOC",var:1,len:a*c},{cmd:"CALL",fnName:e,params:[{var:0},{val:c},{var:1}]},{cmd:"GET",out:0,var:1,len:a*c}];s.push(t.queueAction(d))}const l=await Promise.all(s);let c;c=o instanceof BigBuffer?new BigBuffer(n*a):new Uint8Array(n*a);let d=0;for(let t=0;t<l.length;t++)c.set(l[t][0],d),d+=l[t][0].byteLength;return c}}class WasmField1{constructor(t,e,i,a){if(this.tm=t,this.prefix=e,this.p=a,this.n8=i,this.type="F1",this.m=1,this.half=shiftRight(a,one),this.bitLength=bitLength(a),this.mask=sub(shiftLeft(one,this.bitLength),one),this.pOp1=t.alloc(i),this.pOp2=t.alloc(i),this.pOp3=t.alloc(i),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=this.tm.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.n64=Math.floor(i/8),this.n32=Math.floor(i/4),8*this.n64!=this.n8)throw new Error("n8 must be a multiple of 8");this.half=shiftRight(this.p,one),this.nqr=this.two;let o=this.exp(this.nqr,this.half);for(;!this.eq(o,this.negone);)this.nqr=this.add(this.nqr,this.one),o=this.exp(this.nqr,this.half);this.shift=this.mul(this.nqr,this.nqr),this.shiftInv=this.inv(this.shift),this.s=0;let n=sub(this.p,one);for(;!isOdd(n);)this.s=this.s+1,n=shiftRight(n,one);this.w=[],this.w[this.s]=this.exp(this.nqr,n);for(let t=this.s-1;t>=0;t--)this.w[t]=this.square(this.w[t+1]);if(!this.eq(this.w[0],this.one))throw new Error("Error calculating roots of unity");this.batchToMontgomery=buildBatchConvert(t,e+"_batchToMontgomery",this.n8,this.n8),this.batchFromMontgomery=buildBatchConvert(t,e+"_batchFromMontgomery",this.n8,this.n8)}op2(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){return this.op2("_add",t,e)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,i){return i instanceof Uint8Array||(i=toLEBuff(e(i))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,i.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}isNegative(t){return this.op1Bool("_isNegative",t)}e(t,i){if(t instanceof Uint8Array)return t;let a=e(t,i);isNegative(a)?(a=neg(a),gt(a,this.p)&&(a=mod(a,this.p)),a=sub(this.p,a)):gt(a,this.p)&&(a=mod(a,this.p));const o=leInt2Buff(a,this.n8);return this.toMontgomery(o)}toString(t,e){const i=this.fromMontgomery(t),a=fromRprLE(i,0);return toString$6(a,e)}fromRng(t){let e;const i=new Uint8Array(this.n8);do{e=zero;for(let i=0;i<this.n64;i++)e=add(e,shiftLeft(t.nextU64(),64*i));e=band(e,this.mask)}while(geq(e,this.p));return toRprLE(i,0,e,this.n8),i}random(){return this.fromRng(getThreadRng())}toObject(t){const e=this.fromMontgomery(t);return fromRprLE(e,0)}fromObject(t){const e=new Uint8Array(this.n8);return toRprLE(e,0,t,this.n8),this.toMontgomery(e)}toRprLE(t,e,i){t.set(this.fromMontgomery(i),e)}toRprBE(t,e,i){const a=this.fromMontgomery(i);for(let t=0;t<this.n8/2;t++){const e=a[t];a[t]=a[this.n8-1-t],a[this.n8-1-t]=e}t.set(a,e)}fromRprLE(t,e){e=e||0;const i=t.slice(e,e+this.n8);return this.toMontgomery(i)}async batchInverse(t){let e=!1;const i=this.n8,a=this.n8;Array.isArray(t)?(t=array2buffer(t,i),e=!0):t=t.slice(0,t.byteLength);const o=Math.floor(t.byteLength/i);if(o*i!==t.byteLength)throw new Error("Invalid buffer size");const n=Math.floor(o/this.tm.concurrency),r=[];for(let e=0;e<this.tm.concurrency;e++){let s;if(s=e<this.tm.concurrency-1?n:o-e*n,0==s)continue;const l=[{cmd:"ALLOCSET",var:0,buff:t.slice(e*n*i,e*n*i+s*i)},{cmd:"ALLOC",var:1,len:a*s},{cmd:"CALL",fnName:this.prefix+"_batchInverse",params:[{var:0},{val:i},{val:s},{var:1},{val:a}]},{cmd:"GET",out:0,var:1,len:a*s}];r.push(this.tm.queueAction(l))}const s=await Promise.all(r);let l;l=t instanceof BigBuffer?new BigBuffer(o*a):new Uint8Array(o*a);let c=0;for(let t=0;t<s.length;t++)l.set(s[t][0],c),c+=s[t][0].byteLength;return e?buffer2array(l,a):l}}class WasmField2{constructor(t,e,i){this.tm=t,this.prefix=e,this.F=i,this.type="F2",this.m=2*i.m,this.n8=2*this.F.n8,this.n32=2*this.F.n32,this.n64=2*this.F.n64,this.pOp1=t.alloc(2*i.n8),this.pOp2=t.alloc(2*i.n8),this.pOp3=t.alloc(2*i.n8),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){return this.op2("_add",t,e)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}mul1(t,e){return this.op2("_mul1",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,i){return i instanceof Uint8Array||(i=toLEBuff(e(i))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,i.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}e(t,e){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&2==t.length){const i=this.F.e(t[0],e),a=this.F.e(t[1],e),o=new Uint8Array(2*this.F.n8);return o.set(i),o.set(a,2*this.F.n8),o}throw new Error("invalid F2")}toString(t,e){return`[${this.F.toString(t.slice(0,this.F.n8),e)}, ${this.F.toString(t.slice(this.F.n8),e)}]`}fromRng(t){const e=this.F.fromRng(t),i=this.F.fromRng(t),a=new Uint8Array(2*this.F.n8);return a.set(e),a.set(i,this.F.n8),a}random(){return this.fromRng(getThreadRng())}toObject(t){return[this.F.toObject(t.slice(0,this.F.n8)),this.F.toObject(t.slice(this.F.n8,2*this.F.n8))]}fromObject(t){const e=new Uint8Array(2*this.F.n8),i=this.F.fromObject(t[0]),a=this.F.fromObject(t[1]);return e.set(i),e.set(a,this.F.n8),e}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8)}}class WasmField3{constructor(t,e,i){this.tm=t,this.prefix=e,this.F=i,this.type="F3",this.m=3*i.m,this.n8=3*this.F.n8,this.n32=3*this.F.n32,this.n64=3*this.F.n64,this.pOp1=t.alloc(3*i.n8),this.pOp2=t.alloc(3*i.n8),this.pOp3=t.alloc(3*i.n8),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[e+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}eq(t,e){return this.op2Bool("_eq",t,e)}isZero(t){return this.op1Bool("_isZero",t)}add(t,e){return this.op2("_add",t,e)}sub(t,e){return this.op2("_sub",t,e)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,e){return this.op2("_mul",t,e)}div(t,e){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,i){return i instanceof Uint8Array||(i=toLEBuff(e(i))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,i.byteLength,this.pOp3),this.getBuff(this.pOp3,this.n8)}e(t,e){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&3==t.length){const i=this.F.e(t[0],e),a=this.F.e(t[1],e),o=this.F.e(t[2],e),n=new Uint8Array(3*this.F.n8);return n.set(i),n.set(a,this.F.n8),n.set(o,2*this.F.n8),n}throw new Error("invalid F3")}toString(t,e){return`[${this.F.toString(t.slice(0,this.F.n8),e)}, ${this.F.toString(t.slice(this.F.n8,2*this.F.n8),e)}, ${this.F.toString(t.slice(2*this.F.n8),e)}]`}fromRng(t){const e=this.F.fromRng(t),i=this.F.fromRng(t),a=this.F.fromRng(t),o=new Uint8Array(3*this.F.n8);return o.set(e),o.set(i,this.F.n8),o.set(a,2*this.F.n8),o}random(){return this.fromRng(getThreadRng())}toObject(t){return[this.F.toObject(t.slice(0,this.F.n8)),this.F.toObject(t.slice(this.F.n8,2*this.F.n8)),this.F.toObject(t.slice(2*this.F.n8,3*this.F.n8))]}fromObject(t){const e=new Uint8Array(3*this.F.n8),i=this.F.fromObject(t[0]),a=this.F.fromObject(t[1]),o=this.F.fromObject(t[2]);return e.set(i),e.set(a,this.F.n8),e.set(o,2*this.F.n8),e}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8,2*this.F.n8)}c3(t){return t.slice(2*this.F.n8)}}class WasmCurve{constructor(t,e,i,a,o,n){this.tm=t,this.prefix=e,this.F=i,this.pOp1=t.alloc(3*i.n8),this.pOp2=t.alloc(3*i.n8),this.pOp3=t.alloc(3*i.n8),this.tm.instance.exports[e+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,3*i.n8),this.tm.instance.exports[e+"_zeroAffine"](this.pOp1),this.zeroAffine=this.tm.getBuff(this.pOp1,2*i.n8),this.one=this.tm.getBuff(a,3*i.n8),this.g=this.one,this.oneAffine=this.tm.getBuff(a,2*i.n8),this.gAffine=this.oneAffine,this.b=this.tm.getBuff(o,i.n8),n&&(this.cofactor=toLEBuff(n)),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.batchLEMtoC=buildBatchConvert(t,e+"_batchLEMtoC",2*i.n8,i.n8),this.batchLEMtoU=buildBatchConvert(t,e+"_batchLEMtoU",2*i.n8,2*i.n8),this.batchCtoLEM=buildBatchConvert(t,e+"_batchCtoLEM",i.n8,2*i.n8),this.batchUtoLEM=buildBatchConvert(t,e+"_batchUtoLEM",2*i.n8,2*i.n8),this.batchToJacobian=buildBatchConvert(t,e+"_batchToJacobian",2*i.n8,3*i.n8),this.batchToAffine=buildBatchConvert(t,e+"_batchToAffine",3*i.n8,2*i.n8)}op2(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}op2bool(t,e,i){return this.tm.setBuff(this.pOp1,e),this.tm.setBuff(this.pOp2,i),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3)}op1(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}op1Affine(t,e){return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,2*this.F.n8)}op1Bool(t,e){return this.tm.setBuff(this.pOp1,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,e){if(t.byteLength==3*this.F.n8){if(e.byteLength==3*this.F.n8)return this.op2("_add",t,e);if(e.byteLength==2*this.F.n8)return this.op2("_addMixed",t,e);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(e.byteLength==3*this.F.n8)return this.op2("_addMixed",e,t);if(e.byteLength==2*this.F.n8)return this.op2("_addAffine",t,e);throw new Error("invalid point size")}throw new Error("invalid point size")}sub(t,e){if(t.byteLength==3*this.F.n8){if(e.byteLength==3*this.F.n8)return this.op2("_sub",t,e);if(e.byteLength==2*this.F.n8)return this.op2("_subMixed",t,e);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(e.byteLength==3*this.F.n8)return this.op2("_subMixed",e,t);if(e.byteLength==2*this.F.n8)return this.op2("_subAffine",t,e);throw new Error("invalid point size")}throw new Error("invalid point size")}neg(t){if(t.byteLength==3*this.F.n8)return this.op1("_neg",t);if(t.byteLength==2*this.F.n8)return this.op1Affine("_negAffine",t);throw new Error("invalid point size")}double(t){if(t.byteLength==3*this.F.n8)return this.op1("_double",t);if(t.byteLength==2*this.F.n8)return this.op1("_doubleAffine",t);throw new Error("invalid point size")}isZero(t){if(t.byteLength==3*this.F.n8)return this.op1Bool("_isZero",t);if(t.byteLength==2*this.F.n8)return this.op1Bool("_isZeroAffine",t);throw new Error("invalid point size")}timesScalar(t,i){let a;if(i instanceof Uint8Array||(i=toLEBuff(e(i))),t.byteLength==3*this.F.n8)a=this.prefix+"_timesScalar";else{if(t.byteLength!=2*this.F.n8)throw new Error("invalid point size");a=this.prefix+"_timesScalarAffine"}return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,i),this.tm.instance.exports[a](this.pOp1,this.pOp2,i.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}timesFr(t,e){let i;if(t.byteLength==3*this.F.n8)i=this.prefix+"_timesFr";else{if(t.byteLength!=2*this.F.n8)throw new Error("invalid point size");i=this.prefix+"_timesFrAffine"}return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[i](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}eq(t,e){if(t.byteLength==3*this.F.n8){if(e.byteLength==3*this.F.n8)return this.op2bool("_eq",t,e);if(e.byteLength==2*this.F.n8)return this.op2bool("_eqMixed",t,e);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(e.byteLength==3*this.F.n8)return this.op2bool("_eqMixed",e,t);if(e.byteLength==2*this.F.n8)return this.op2bool("_eqAffine",t,e);throw new Error("invalid point size")}throw new Error("invalid point size")}toAffine(t){if(t.byteLength==3*this.F.n8)return this.op1Affine("_toAffine",t);if(t.byteLength==2*this.F.n8)return t;throw new Error("invalid point size")}toJacobian(t){if(t.byteLength==3*this.F.n8)return t;if(t.byteLength==2*this.F.n8)return this.op1("_toJacobian",t);throw new Error("invalid point size")}toRprUncompressed(t,e,i){if(this.tm.setBuff(this.pOp1,i),i.byteLength==3*this.F.n8)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(i.byteLength!=2*this.F.n8)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoU"](this.pOp1,this.pOp1);const a=this.tm.getBuff(this.pOp1,2*this.F.n8);t.set(a,e)}fromRprUncompressed(t,e){const i=t.slice(e,e+2*this.F.n8);return this.tm.setBuff(this.pOp1,i),this.tm.instance.exports[this.prefix+"_UtoLEM"](this.pOp1,this.pOp1),this.tm.getBuff(this.pOp1,2*this.F.n8)}toRprCompressed(t,e,i){if(this.tm.setBuff(this.pOp1,i),i.byteLength==3*this.F.n8)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(i.byteLength!=2*this.F.n8)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoC"](this.pOp1,this.pOp1);const a=this.tm.getBuff(this.pOp1,this.F.n8);t.set(a,e)}fromRprCompressed(t,e){const i=t.slice(e,e+this.F.n8);return this.tm.setBuff(this.pOp1,i),this.tm.instance.exports[this.prefix+"_CtoLEM"](this.pOp1,this.pOp2),this.tm.getBuff(this.pOp2,2*this.F.n8)}toUncompressed(t){const e=new Uint8Array(2*this.F.n8);return this.toRprUncompressed(e,0,t),e}toRprLEM(t,e,i){if(i.byteLength!=2*this.F.n8){if(i.byteLength!=3*this.F.n8)throw new Error("invalid point size");{this.tm.setBuff(this.pOp1,i),this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);const a=this.tm.getBuff(this.pOp1,2*this.F.n8);t.set(a,e)}}else t.set(i,e)}fromRprLEM(t,e){return e=e||0,t.slice(e,e+2*this.F.n8)}toString(t,e){if(t.byteLength==3*this.F.n8){return`[ ${this.F.toString(t.slice(0,this.F.n8),e)}, ${this.F.toString(t.slice(this.F.n8,2*this.F.n8),e)}, ${this.F.toString(t.slice(2*this.F.n8),e)} ]`}if(t.byteLength==2*this.F.n8){return`[ ${this.F.toString(t.slice(0,this.F.n8),e)}, ${this.F.toString(t.slice(this.F.n8),e)} ]`}throw new Error("invalid point size")}isValid(t){if(this.isZero(t))return!0;const e=this.F,i=this.toAffine(t),a=i.slice(0,this.F.n8),o=i.slice(this.F.n8,2*this.F.n8),n=e.add(e.mul(e.square(a),a),this.b),r=e.square(o);return e.eq(n,r)}fromRng(t){const e=this.F;let i,a,o=[];do{o[0]=e.fromRng(t),i=t.nextBool(),a=e.add(e.mul(e.square(o[0]),o[0]),this.b)}while(!e.isSquare(a));o[1]=e.sqrt(a);i^e.isNegative(o[1])&&(o[1]=e.neg(o[1]));let n=new Uint8Array(2*this.F.n8);return n.set(o[0]),n.set(o[1],this.F.n8),this.cofactor&&(n=this.timesScalar(n,this.cofactor)),n}toObject(t){if(this.isZero(t))return[this.F.toObject(this.F.zero),this.F.toObject(this.F.one),this.F.toObject(this.F.zero)];const e=this.F.toObject(t.slice(0,this.F.n8)),i=this.F.toObject(t.slice(this.F.n8,2*this.F.n8));let a;return a=t.byteLength==3*this.F.n8?this.F.toObject(t.slice(2*this.F.n8,3*this.F.n8)):this.F.toObject(this.F.one),[e,i,a]}fromObject(t){const e=this.F.fromObject(t[0]),i=this.F.fromObject(t[1]);let a;if(a=3==t.length?this.F.fromObject(t[2]):this.F.one,this.F.isZero(a,this.F.one))return this.zeroAffine;if(this.F.eq(a,this.F.one)){const t=new Uint8Array(2*this.F.n8);return t.set(e),t.set(i,this.F.n8),t}{const t=new Uint8Array(3*this.F.n8);return t.set(e),t.set(i,this.F.n8),t.set(a,2*this.F.n8),t}}e(t){return t instanceof Uint8Array?t:this.fromObject(t)}x(t){return this.toAffine(t).slice(0,this.F.n8)}y(t){return this.toAffine(t).slice(this.F.n8)}}function thread(t){const e=32767;let i,a;async function o(t){const o=new Uint8Array(t.code),n=await WebAssembly.compile(o);a=new WebAssembly.Memory({initial:t.init,maximum:e}),i=await WebAssembly.instantiate(n,{env:{memory:a}})}function n(t){const i=new Uint32Array(a.buffer,0,1);for(;3&i[0];)i[0]++;const o=i[0];if(i[0]+=t,i[0]+t>a.buffer.byteLength){const o=a.buffer.byteLength/65536;let n=Math.floor((i[0]+t)/65536)+1;n>e&&(n=e),a.grow(n-o)}return o}function r(t){const e=n(t.byteLength);return l(e,t),e}function s(t,e){const i=new Uint8Array(a.buffer);return new Uint8Array(i.buffer,i.byteOffset+t,e)}function l(t,e){new Uint8Array(a.buffer).set(new Uint8Array(e),t)}function c(t){if("INIT"==t[0].cmd)return o(t[0]);const e={vars:[],out:[]},c=new Uint32Array(a.buffer,0,1)[0];for(let a=0;a<t.length;a++)switch(t[a].cmd){case"ALLOCSET":e.vars[t[a].var]=r(t[a].buff);break;case"ALLOC":e.vars[t[a].var]=n(t[a].len);break;case"SET":l(e.vars[t[a].var],t[a].buff);break;case"CALL":{const o=[];for(let i=0;i<t[a].params.length;i++){const n=t[a].params[i];void 0!==n.var?o.push(e.vars[n.var]+(n.offset||0)):void 0!==n.val&&o.push(n.val)}i.exports[t[a].fnName](...o);break}case"GET":e.out[t[a].out]=s(e.vars[t[a].var],t[a].len).slice();break;default:throw new Error("Invalid cmd")}return new Uint32Array(a.buffer,0,1)[0]=c,e.out}return t&&(t.onmessage=function(e){let i;if(i=e.data?e.data:e,"INIT"==i[0].cmd)o(i[0]).then((function(){t.postMessage(i.result)}));else if("TERMINATE"==i[0].cmd)t.close();else{const e=c(i);t.postMessage(e)}}),c}var os={},browser$1=Worker;const MEM_SIZE=25;class Deferred{constructor(){this.promise=new Promise(((t,e)=>{this.reject=e,this.resolve=t}))}}function sleep(t){return new Promise((e=>setTimeout(e,t)))}function stringToBase64(t){return globalThis.btoa(t)}const threadSource=stringToBase64("("+thread.toString()+")(self)"),workerSource="data:application/javascript;base64,"+threadSource;async function buildThreadManager(t,e){const i=new ThreadManager;i.memory=new WebAssembly.Memory({initial:MEM_SIZE}),i.u8=new Uint8Array(i.memory.buffer),i.u32=new Uint32Array(i.memory.buffer);const a=await WebAssembly.compile(t.code);if(i.instance=await WebAssembly.instantiate(a,{env:{memory:i.memory}}),i.singleThread=e,i.initalPFree=i.u32[0],i.pq=t.pq,i.pr=t.pr,i.pG1gen=t.pG1gen,i.pG1zero=t.pG1zero,i.pG2gen=t.pG2gen,i.pG2zero=t.pG2zero,i.pOneT=t.pOneT,e)i.code=t.code,i.taskManager=thread(),await i.taskManager([{cmd:"INIT",init:MEM_SIZE,code:i.code.slice()}]),i.concurrency=1;else{let e;i.workers=[],i.pendingDeferreds=[],i.working=[],e="object"==typeof navigator&&navigator.hardwareConcurrency?navigator.hardwareConcurrency:os.cpus().length,0==e&&(e=2),e>64&&(e=64),i.concurrency=e;for(let t=0;t<e;t++)i.workers[t]=new browser$1(workerSource),i.workers[t].addEventListener("message",o(t)),i.working[t]=!1;const a=[];for(let e=0;e<i.workers.length;e++){const o=t.code.slice();a.push(i.postAction(e,[{cmd:"INIT",init:MEM_SIZE,code:o}],[o.buffer]))}await Promise.all(a)}return i;function o(t){return function(e){let a;a=e&&e.data?e.data:e,i.working[t]=!1,i.pendingDeferreds[t].resolve(a),i.processWorks()}}}class ThreadManager{constructor(){this.actionQueue=[],this.oldPFree=0}startSyncOp(){if(0!=this.oldPFree)throw new Error("Sync operation in progress");this.oldPFree=this.u32[0]}endSyncOp(){if(0==this.oldPFree)throw new Error("No sync operation in progress");this.u32[0]=this.oldPFree,this.oldPFree=0}postAction(t,e,i,a){if(this.working[t])throw new Error("Posting a job t a working worker");return this.working[t]=!0,this.pendingDeferreds[t]=a||new Deferred,this.workers[t].postMessage(e,i),this.pendingDeferreds[t].promise}processWorks(){for(let t=0;t<this.workers.length&&this.actionQueue.length>0;t++)if(0==this.working[t]){const e=this.actionQueue.shift();this.postAction(t,e.data,e.transfers,e.deferred)}}queueAction(t,e){const i=new Deferred;if(this.singleThread){const e=this.taskManager(t);i.resolve(e)}else this.actionQueue.push({data:t,transfers:e,deferred:i}),this.processWorks();return i.promise}resetMemory(){this.u32[0]=this.initalPFree}allocBuff(t){const e=this.alloc(t.byteLength);return this.setBuff(e,t),e}getBuff(t,e){return this.u8.slice(t,t+e)}setBuff(t,e){this.u8.set(new Uint8Array(e),t)}alloc(t){for(;3&this.u32[0];)this.u32[0]++;const e=this.u32[0];return this.u32[0]+=t,e}async terminate(){for(let t=0;t<this.workers.length;t++)this.workers[t].postMessage([{cmd:"TERMINATE"}]);await sleep(200)}}function buildBatchApplyKey(t,e){const i=t[e],a=t.Fr,o=t.tm;t[e].batchApplyKey=async function(t,n,r,s,l){let c,d,u,g,f;if(s=s||"affine",l=l||"affine","G1"==e)"jacobian"==s?(u=3*i.F.n8,c="g1m_batchApplyKey"):(u=2*i.F.n8,c="g1m_batchApplyKeyMixed"),g=3*i.F.n8,"jacobian"==l?f=3*i.F.n8:(d="g1m_batchToAffine",f=2*i.F.n8);else if("G2"==e)"jacobian"==s?(u=3*i.F.n8,c="g2m_batchApplyKey"):(u=2*i.F.n8,c="g2m_batchApplyKeyMixed"),g=3*i.F.n8,"jacobian"==l?f=3*i.F.n8:(d="g2m_batchToAffine",f=2*i.F.n8);else{if("Fr"!=e)throw new Error("Invalid group: "+e);c="frm_batchApplyKey",u=i.n8,g=i.n8,f=i.n8}const h=Math.floor(t.byteLength/u),_=Math.floor(h/o.concurrency),p=[];r=a.e(r);let m=a.e(n);for(let e=0;e<o.concurrency;e++){let i;if(i=e<o.concurrency-1?_:h-e*_,0==i)continue;const n=[];n.push({cmd:"ALLOCSET",var:0,buff:t.slice(e*_*u,e*_*u+i*u)}),n.push({cmd:"ALLOCSET",var:1,buff:m}),n.push({cmd:"ALLOCSET",var:2,buff:r}),n.push({cmd:"ALLOC",var:3,len:i*Math.max(g,f)}),n.push({cmd:"CALL",fnName:c,params:[{var:0},{val:i},{var:1},{var:2},{var:3}]}),d&&n.push({cmd:"CALL",fnName:d,params:[{var:3},{val:i},{var:3}]}),n.push({cmd:"GET",out:0,var:3,len:i*f}),p.push(o.queueAction(n)),m=a.mul(m,a.exp(r,i))}const b=await Promise.all(p);let L;L=t instanceof BigBuffer?new BigBuffer(h*f):new Uint8Array(h*f);let w=0;for(let t=0;t<b.length;t++)L.set(b[t][0],w),w+=b[t][0].byteLength;return L}}function buildPairing(t){const e=t.tm;t.pairing=function(i,a){e.startSyncOp();const o=e.allocBuff(t.G1.toJacobian(i)),n=e.allocBuff(t.G2.toJacobian(a)),r=e.alloc(t.Gt.n8);e.instance.exports[t.name+"_pairing"](o,n,r);const s=e.getBuff(r,t.Gt.n8);return e.endSyncOp(),s},t.pairingEq=async function(){let i,a;arguments.length%2==1?(i=arguments[arguments.length-1],a=(arguments.length-1)/2):(i=t.Gt.one,a=arguments.length/2);const o=[];for(let i=0;i<a;i++){const a=[],n=t.G1.toJacobian(arguments[2*i]);a.push({cmd:"ALLOCSET",var:0,buff:n}),a.push({cmd:"ALLOC",var:1,len:t.prePSize});const r=t.G2.toJacobian(arguments[2*i+1]);a.push({cmd:"ALLOCSET",var:2,buff:r}),a.push({cmd:"ALLOC",var:3,len:t.preQSize}),a.push({cmd:"ALLOC",var:4,len:t.Gt.n8}),a.push({cmd:"CALL",fnName:t.name+"_prepareG1",params:[{var:0},{var:1}]}),a.push({cmd:"CALL",fnName:t.name+"_prepareG2",params:[{var:2},{var:3}]}),a.push({cmd:"CALL",fnName:t.name+"_millerLoop",params:[{var:1},{var:3},{var:4}]}),a.push({cmd:"GET",out:0,var:4,len:t.Gt.n8}),o.push(e.queueAction(a))}const n=await Promise.all(o);e.startSyncOp();const r=e.alloc(t.Gt.n8);e.instance.exports.ftm_one(r);for(let t=0;t<n.length;t++){const i=e.allocBuff(n[t][0]);e.instance.exports.ftm_mul(r,i,r)}e.instance.exports[t.name+"_finalExponentiation"](r,r);const s=e.allocBuff(i),l=!!e.instance.exports.ftm_eq(r,s);return e.endSyncOp(),l},t.prepareG1=function(t){this.tm.startSyncOp();const e=this.tm.allocBuff(t),i=this.tm.alloc(this.prePSize);this.tm.instance.exports[this.name+"_prepareG1"](e,i);const a=this.tm.getBuff(i,this.prePSize);return this.tm.endSyncOp(),a},t.prepareG2=function(t){this.tm.startSyncOp();const e=this.tm.allocBuff(t),i=this.tm.alloc(this.preQSize);this.tm.instance.exports[this.name+"_prepareG2"](e,i);const a=this.tm.getBuff(i,this.preQSize);return this.tm.endSyncOp(),a},t.millerLoop=function(t,e){this.tm.startSyncOp();const i=this.tm.allocBuff(t),a=this.tm.allocBuff(e),o=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_millerLoop"](i,a,o);const n=this.tm.getBuff(o,this.Gt.n8);return this.tm.endSyncOp(),n},t.finalExponentiation=function(t){this.tm.startSyncOp();const e=this.tm.allocBuff(t),i=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_finalExponentiation"](e,i);const a=this.tm.getBuff(i,this.Gt.n8);return this.tm.endSyncOp(),a}}const pTSizes=[1,1,1,1,2,3,4,5,6,7,7,8,9,10,11,12,13,13,14,15,16,16,17,17,17,17,17,17,17,17,17,17];function buildMultiexp(t,e){const i=t[e],a=i.tm;async function o(t,a,o,n,r){if(!(t instanceof Uint8Array))throw n&&n.error(`${r} _multiExpChunk buffBases is not Uint8Array`),new Error(`${r} _multiExpChunk buffBases is not Uint8Array`);if(!(a instanceof Uint8Array))throw n&&n.error(`${r} _multiExpChunk buffScalars is not Uint8Array`),new Error(`${r} _multiExpChunk buffScalars is not Uint8Array`);let s,l;if(o=o||"affine","G1"==e)"affine"==o?(l="g1m_multiexpAffine_chunk",s=2*i.F.n8):(l="g1m_multiexp_chunk",s=3*i.F.n8);else{if("G2"!=e)throw new Error("Invalid group");"affine"==o?(l="g2m_multiexpAffine_chunk",s=2*i.F.n8):(l="g2m_multiexp_chunk",s=3*i.F.n8)}const c=Math.floor(t.byteLength/s);if(0==c)return i.zero;const d=Math.floor(a.byteLength/c);if(d*c!=a.byteLength)throw new Error("Scalar size does not match");const u=pTSizes[log2$1(c)],g=Math.floor((8*d-1)/u)+1,f=[];for(let e=0;e<g;e++){const o=[{cmd:"ALLOCSET",var:0,buff:t},{cmd:"ALLOCSET",var:1,buff:a},{cmd:"ALLOC",var:2,len:3*i.F.n8},{cmd:"CALL",fnName:l,params:[{var:0},{var:1},{val:d},{val:c},{val:e*u},{val:Math.min(8*d-e*u,u)},{var:2}]},{cmd:"GET",out:0,var:2,len:3*i.F.n8}];f.push(i.tm.queueAction(o))}const h=await Promise.all(f);let _=i.zero;for(let t=h.length-1;t>=0;t--){if(!i.isZero(_))for(let t=0;t<u;t++)_=i.double(_);_=i.add(_,h[t][0])}return _}async function n(t,n,r,s,l){const c=1<<22;let d;if("G1"==e)d="affine"==r?2*i.F.n8:3*i.F.n8;else{if("G2"!=e)throw new Error("Invalid group");d="affine"==r?2*i.F.n8:3*i.F.n8}const u=Math.floor(t.byteLength/d),g=Math.floor(n.byteLength/u);if(g*u!=n.byteLength)throw new Error("Scalar size does not match");const f=pTSizes[log2$1(u)],h=Math.floor((8*g-1)/f)+1;let _;_=Math.floor(u/(a.concurrency/h)),_>c&&(_=c),_<1024&&(_=1024);const p=[];for(let e=0;e<u;e+=_){s&&s.debug(`Multiexp start: ${l}: ${e}/${u}`);const i=Math.min(u-e,_),a=t.slice(e*d,(e+i)*d),c=n.slice(e*g,(e+i)*g);p.push(o(a,c,r,s,l).then((t=>(s&&s.debug(`Multiexp end: ${l}: ${e}/${u}`),t))))}const m=await Promise.all(p);let b=i.zero;for(let t=m.length-1;t>=0;t--)b=i.add(b,m[t]);return b}i.multiExp=async function(t,e,i,a){return await n(t,e,"jacobian",i,a)},i.multiExpAffine=async function(t,e,i,a){return await n(t,e,"affine",i,a)}}function buildFFT(t,e){const i=t[e],a=t.Fr,o=i.tm;async function n(t,s,l,c,d,u){l=l||"affine",c=c||"affine";let g,f,h,_,p,m,b,L;"G1"==e?("affine"==l?(g=2*i.F.n8,_="g1m_batchToJacobian"):g=3*i.F.n8,f=3*i.F.n8,s&&(L="g1m_fftFinal"),b="g1m_fftJoin",m="g1m_fftMix","affine"==c?(h=2*i.F.n8,p="g1m_batchToAffine"):h=3*i.F.n8):"G2"==e?("affine"==l?(g=2*i.F.n8,_="g2m_batchToJacobian"):g=3*i.F.n8,f=3*i.F.n8,s&&(L="g2m_fftFinal"),b="g2m_fftJoin",m="g2m_fftMix","affine"==c?(h=2*i.F.n8,p="g2m_batchToAffine"):h=3*i.F.n8):"Fr"==e&&(g=i.n8,f=i.n8,h=i.n8,s&&(L="frm_fftFinal"),m="frm_fftMix",b="frm_fftJoin");let w=!1;Array.isArray(t)?(t=array2buffer(t,g),w=!0):t=t.slice(0,t.byteLength);const y=t.byteLength/g,A=log2$1(y);if(1<<A!=y)throw new Error("fft must be multiple of 2");if(A==a.s+1){let e;return e=s?await async function(t,e,i,o,s){let l,c;l=t.slice(0,t.byteLength/2),c=t.slice(t.byteLength/2,t.byteLength);const d=[];d.push(n(l,!0,e,"jacobian",o,s)),d.push(n(c,!0,e,"jacobian",o,s)),[l,c]=await Promise.all(d);const u=await r(l,c,"fftJoinExtInv",a.one,a.shiftInv,"jacobian",i,o,s);let g;g=u[0].byteLength>1<<28?new BigBuffer(2*u[0].byteLength):new Uint8Array(2*u[0].byteLength);return g.set(u[0]),g.set(u[1],u[0].byteLength),g}(t,l,c,d,u):await async function(t,e,i,o,s){let l,c;l=t.slice(0,t.byteLength/2),c=t.slice(t.byteLength/2,t.byteLength);const d=[];[l,c]=await r(l,c,"fftJoinExt",a.one,a.shift,e,"jacobian",o,s),d.push(n(l,!1,"jacobian",i,o,s)),d.push(n(c,!1,"jacobian",i,o,s));const u=await Promise.all(d);let g;g=u[0].byteLength>1<<28?new BigBuffer(2*u[0].byteLength):new Uint8Array(2*u[0].byteLength);return g.set(u[0]),g.set(u[1],u[0].byteLength),g}(t,l,c,d,u),w?buffer2array(e,h):e}let I,C,B;s&&(I=a.inv(a.e(y))),buffReverseBits(t,g);let E=Math.min(16384,y),F=y/E;for(;F<o.concurrency&&E>=16;)F*=2,E/=2;const S=log2$1(E),v=[];for(let e=0;e<F;e++){d&&d.debug(`${u}: fft ${A} mix start: ${e}/${F}`);const i=[];i.push({cmd:"ALLOC",var:0,len:f*E});const a=t.slice(E*e*g,E*(e+1)*g);i.push({cmd:"SET",var:0,buff:a}),_&&i.push({cmd:"CALL",fnName:_,params:[{var:0},{val:E},{var:0}]});for(let t=1;t<=S;t++)i.push({cmd:"CALL",fnName:m,params:[{var:0},{val:E},{val:t}]});S==A?(L&&(i.push({cmd:"ALLOCSET",var:1,buff:I}),i.push({cmd:"CALL",fnName:L,params:[{var:0},{val:E},{var:1}]})),p&&i.push({cmd:"CALL",fnName:p,params:[{var:0},{val:E},{var:0}]}),i.push({cmd:"GET",out:0,var:0,len:E*h})):i.push({cmd:"GET",out:0,var:0,len:f*E}),v.push(o.queueAction(i).then((t=>(d&&d.debug(`${u}: fft ${A} mix end: ${e}/${F}`),t))))}B=await Promise.all(v);for(let t=0;t<F;t++)B[t]=B[t][0];for(let t=S+1;t<=A;t++){d&&d.debug(`${u}: fft  ${A}  join: ${t}/${A}`);const e=1<<A-t,i=F/e,n=[];for(let r=0;r<e;r++)for(let s=0;s<i/2;s++){const l=a.exp(a.w[t],s*E),c=a.w[t],g=r*i+s,_=r*i+s+i/2,m=[];m.push({cmd:"ALLOCSET",var:0,buff:B[g]}),m.push({cmd:"ALLOCSET",var:1,buff:B[_]}),m.push({cmd:"ALLOCSET",var:2,buff:l}),m.push({cmd:"ALLOCSET",var:3,buff:c}),m.push({cmd:"CALL",fnName:b,params:[{var:0},{var:1},{val:E},{var:2},{var:3}]}),t==A?(L&&(m.push({cmd:"ALLOCSET",var:4,buff:I}),m.push({cmd:"CALL",fnName:L,params:[{var:0},{val:E},{var:4}]}),m.push({cmd:"CALL",fnName:L,params:[{var:1},{val:E},{var:4}]})),p&&(m.push({cmd:"CALL",fnName:p,params:[{var:0},{val:E},{var:0}]}),m.push({cmd:"CALL",fnName:p,params:[{var:1},{val:E},{var:1}]})),m.push({cmd:"GET",out:0,var:0,len:E*h}),m.push({cmd:"GET",out:1,var:1,len:E*h})):(m.push({cmd:"GET",out:0,var:0,len:E*f}),m.push({cmd:"GET",out:1,var:1,len:E*f})),n.push(o.queueAction(m).then((a=>(d&&d.debug(`${u}: fft ${A} join  ${t}/${A}  ${r+1}/${e} ${s}/${i/2}`),a))))}const r=await Promise.all(n);for(let t=0;t<e;t++)for(let e=0;e<i/2;e++){const a=t*i+e,o=t*i+e+i/2,n=r.shift();B[a]=n[0],B[o]=n[1]}}if(C=t instanceof BigBuffer?new BigBuffer(y*h):new Uint8Array(y*h),s){C.set(B[0].slice((E-1)*h));let t=h;for(let e=F-1;e>0;e--)C.set(B[e],t),t+=E*h,delete B[e];C.set(B[0].slice(0,(E-1)*h),t),delete B[0]}else for(let t=0;t<F;t++)C.set(B[t],E*h*t),delete B[t];return w?buffer2array(C,h):C}async function r(t,n,r,s,l,c,d,u,g){let f,h,_,p,m,b;if("G1"==e)"affine"==c?(m=2*i.F.n8,h="g1m_batchToJacobian"):m=3*i.F.n8,b=3*i.F.n8,f="g1m_"+r,"affine"==d?(_="g1m_batchToAffine",p=2*i.F.n8):p=3*i.F.n8;else if("G2"==e)"affine"==c?(m=2*i.F.n8,h="g2m_batchToJacobian"):m=3*i.F.n8,f="g2m_"+r,b=3*i.F.n8,"affine"==d?(_="g2m_batchToAffine",p=2*i.F.n8):p=3*i.F.n8;else{if("Fr"!=e)throw new Error("Invalid group");m=a.n8,p=a.n8,b=a.n8,f="frm_"+r}if(t.byteLength!=n.byteLength)throw new Error("Invalid buffer size");const L=Math.floor(t.byteLength/m);if(L!=1<<log2$1(L))throw new Error("Invalid number of points");let w=Math.floor(L/o.concurrency);w<16&&(w=16),w>65536&&(w=65536);const y=[];for(let e=0;e<L;e+=w){u&&u.debug(`${g}: fftJoinExt Start: ${e}/${L}`);const i=Math.min(L-e,w),r=a.mul(s,a.exp(l,e)),c=[],d=t.slice(e*m,(e+i)*m),A=n.slice(e*m,(e+i)*m);c.push({cmd:"ALLOC",var:0,len:b*i}),c.push({cmd:"SET",var:0,buff:d}),c.push({cmd:"ALLOC",var:1,len:b*i}),c.push({cmd:"SET",var:1,buff:A}),c.push({cmd:"ALLOCSET",var:2,buff:r}),c.push({cmd:"ALLOCSET",var:3,buff:l}),h&&(c.push({cmd:"CALL",fnName:h,params:[{var:0},{val:i},{var:0}]}),c.push({cmd:"CALL",fnName:h,params:[{var:1},{val:i},{var:1}]})),c.push({cmd:"CALL",fnName:f,params:[{var:0},{var:1},{val:i},{var:2},{var:3},{val:a.s}]}),_&&(c.push({cmd:"CALL",fnName:_,params:[{var:0},{val:i},{var:0}]}),c.push({cmd:"CALL",fnName:_,params:[{var:1},{val:i},{var:1}]})),c.push({cmd:"GET",out:0,var:0,len:i*p}),c.push({cmd:"GET",out:1,var:1,len:i*p}),y.push(o.queueAction(c).then((t=>(u&&u.debug(`${g}: fftJoinExt End: ${e}/${L}`),t))))}const A=await Promise.all(y);let I,C;L*p>1<<28?(I=new BigBuffer(L*p),C=new BigBuffer(L*p)):(I=new Uint8Array(L*p),C=new Uint8Array(L*p));let B=0;for(let t=0;t<A.length;t++)I.set(A[t][0],B),C.set(A[t][1],B),B+=A[t][0].byteLength;return[I,C]}i.fft=async function(t,e,i,a,o){return await n(t,!1,e,i,a,o)},i.ifft=async function(t,e,i,a,o){return await n(t,!0,e,i,a,o)},i.lagrangeEvaluations=async function(t,o,s,l,c){let d;if(o=o||"affine",s=s||"affine","G1"==e)d="affine"==o?2*i.F.n8:3*i.F.n8;else if("G2"==e)d="affine"==o?2*i.F.n8:3*i.F.n8;else{if("Fr"!=e)throw new Error("Invalid group");d=a.n8}const u=t.byteLength/d,g=log2$1(u);if(2**g*d!=t.byteLength)throw l&&l.error("lagrangeEvaluations iinvalid input size"),new Error("lagrangeEvaluations invalid Input size");if(g<=a.s)return await i.ifft(t,o,s,l,c);if(g>a.s+1)throw l&&l.error("lagrangeEvaluations input too big"),new Error("lagrangeEvaluations input too big");let f=t.slice(0,t.byteLength/2),h=t.slice(t.byteLength/2,t.byteLength);const _=a.exp(a.shift,u/2),p=a.inv(a.sub(a.one,_));[f,h]=await r(f,h,"prepareLagrangeEvaluation",p,a.shiftInv,o,"jacobian",l,c+" prep");const m=[];let b;return m.push(n(f,!0,"jacobian",s,l,c+" t0")),m.push(n(h,!0,"jacobian",s,l,c+" t1")),[f,h]=await Promise.all(m),b=f.byteLength>1<<28?new BigBuffer(2*f.byteLength):new Uint8Array(2*f.byteLength),b.set(f),b.set(h,f.byteLength),b},i.fftMix=async function(t){const n=3*i.F.n8;let r,s;if("G1"==e)r="g1m_fftMix",s="g1m_fftJoin";else if("G2"==e)r="g2m_fftMix",s="g2m_fftJoin";else{if("Fr"!=e)throw new Error("Invalid group");r="frm_fftMix",s="frm_fftJoin"}const l=Math.floor(t.byteLength/n),c=log2$1(l);let d=1<<log2$1(o.concurrency);l<=2*d&&(d=1);const u=l/d,g=log2$1(u),f=[];for(let e=0;e<d;e++){const i=[],a=t.slice(e*u*n,(e+1)*u*n);i.push({cmd:"ALLOCSET",var:0,buff:a});for(let t=1;t<=g;t++)i.push({cmd:"CALL",fnName:r,params:[{var:0},{val:u},{val:t}]});i.push({cmd:"GET",out:0,var:0,len:u*n}),f.push(o.queueAction(i))}const h=await Promise.all(f),_=[];for(let t=0;t<h.length;t++)_[t]=h[t][0];for(let t=g+1;t<=c;t++){const e=1<<c-t,i=d/e,r=[];for(let l=0;l<e;l++)for(let e=0;e<i/2;e++){const c=a.exp(a.w[t],e*u),d=a.w[t],g=l*i+e,f=l*i+e+i/2,h=[];h.push({cmd:"ALLOCSET",var:0,buff:_[g]}),h.push({cmd:"ALLOCSET",var:1,buff:_[f]}),h.push({cmd:"ALLOCSET",var:2,buff:c}),h.push({cmd:"ALLOCSET",var:3,buff:d}),h.push({cmd:"CALL",fnName:s,params:[{var:0},{var:1},{val:u},{var:2},{var:3}]}),h.push({cmd:"GET",out:0,var:0,len:u*n}),h.push({cmd:"GET",out:1,var:1,len:u*n}),r.push(o.queueAction(h))}const l=await Promise.all(r);for(let t=0;t<e;t++)for(let e=0;e<i/2;e++){const a=t*i+e,o=t*i+e+i/2,n=l.shift();_[a]=n[0],_[o]=n[1]}}let p;p=t instanceof BigBuffer?new BigBuffer(l*n):new Uint8Array(l*n);let m=0;for(let t=0;t<d;t++)p.set(_[t],m),m+=_[t].byteLength;return p},i.fftJoin=async function(t,n,r,s){const l=3*i.F.n8;let c;if("G1"==e)c="g1m_fftJoin";else if("G2"==e)c="g2m_fftJoin";else{if("Fr"!=e)throw new Error("Invalid group");c="frm_fftJoin"}if(t.byteLength!=n.byteLength)throw new Error("Invalid buffer size");const d=Math.floor(t.byteLength/l);if(d!=1<<log2$1(d))throw new Error("Invalid number of points");let u=1<<log2$1(o.concurrency);d<=2*u&&(u=1);const g=d/u,f=[];for(let e=0;e<u;e++){const i=[],d=a.mul(r,a.exp(s,e*g)),u=t.slice(e*g*l,(e+1)*g*l),h=n.slice(e*g*l,(e+1)*g*l);i.push({cmd:"ALLOCSET",var:0,buff:u}),i.push({cmd:"ALLOCSET",var:1,buff:h}),i.push({cmd:"ALLOCSET",var:2,buff:d}),i.push({cmd:"ALLOCSET",var:3,buff:s}),i.push({cmd:"CALL",fnName:c,params:[{var:0},{var:1},{val:g},{var:2},{var:3}]}),i.push({cmd:"GET",out:0,var:0,len:g*l}),i.push({cmd:"GET",out:1,var:1,len:g*l}),f.push(o.queueAction(i))}const h=await Promise.all(f);let _,p;t instanceof BigBuffer?(_=new BigBuffer(d*l),p=new BigBuffer(d*l)):(_=new Uint8Array(d*l),p=new Uint8Array(d*l));let m=0;for(let t=0;t<h.length;t++)_.set(h[t][0],m),p.set(h[t][1],m),m+=h[t][0].byteLength;return[_,p]},i.fftFinal=async function(t,a){const n=3*i.F.n8,r=2*i.F.n8;let s,l;if("G1"==e)s="g1m_fftFinal",l="g1m_batchToAffine";else{if("G2"!=e)throw new Error("Invalid group");s="g2m_fftFinal",l="g2m_batchToAffine"}const c=Math.floor(t.byteLength/n);if(c!=1<<log2$1(c))throw new Error("Invalid number of points");const d=Math.floor(c/o.concurrency),u=[];for(let e=0;e<o.concurrency;e++){let i;if(i=e<o.concurrency-1?d:c-e*d,0==i)continue;const g=[],f=t.slice(e*d*n,(e*d+i)*n);g.push({cmd:"ALLOCSET",var:0,buff:f}),g.push({cmd:"ALLOCSET",var:1,buff:a}),g.push({cmd:"CALL",fnName:s,params:[{var:0},{val:i},{var:1}]}),g.push({cmd:"CALL",fnName:l,params:[{var:0},{val:i},{var:0}]}),g.push({cmd:"GET",out:0,var:0,len:i*r}),u.push(o.queueAction(g))}const g=await Promise.all(u);let f;f=t instanceof BigBuffer?new BigBuffer(c*r):new Uint8Array(c*r);let h=0;for(let t=g.length-1;t>=0;t--)f.set(g[t][0],h),h+=g[t][0].byteLength;return f}}async function buildEngine(t){const i=await buildThreadManager(t.wasm,t.singleThread),a={};return a.q=e(t.wasm.q.toString()),a.r=e(t.wasm.r.toString()),a.name=t.name,a.tm=i,a.prePSize=t.wasm.prePSize,a.preQSize=t.wasm.preQSize,a.Fr=new WasmField1(i,"frm",t.n8r,t.r),a.F1=new WasmField1(i,"f1m",t.n8q,t.q),a.F2=new WasmField2(i,"f2m",a.F1),a.G1=new WasmCurve(i,"g1m",a.F1,t.wasm.pG1gen,t.wasm.pG1b,t.cofactorG1),a.G2=new WasmCurve(i,"g2m",a.F2,t.wasm.pG2gen,t.wasm.pG2b,t.cofactorG2),a.F6=new WasmField3(i,"f6m",a.F2),a.F12=new WasmField2(i,"ftm",a.F6),a.Gt=a.F12,buildBatchApplyKey(a,"G1"),buildBatchApplyKey(a,"G2"),buildBatchApplyKey(a,"Fr"),buildMultiexp(a,"G1"),buildMultiexp(a,"G2"),buildFFT(a,"G1"),buildFFT(a,"G2"),buildFFT(a,"Fr"),buildPairing(a),a.array2buffer=function(t,e){const i=new Uint8Array(e*t.length);for(let a=0;a<t.length;a++)i.set(t[a],a*e);return i},a.buffer2array=function(t,e){const i=t.byteLength/e,a=new Array(i);for(let o=0;o<i;o++)a[o]=t.slice(o*e,o*e+e);return a},a}var utils$4={};const bigInt=BigInteger.exports;function toNumber(t){let e;return e="string"==typeof t&&"0x"==t.slice(0,2).toLowerCase()?bigInt(t.slice(2),16):bigInt(t),e}function u32(t){const e=[],i=toNumber(t);return e.push(i.and(255).toJSNumber()),e.push(i.shiftRight(8).and(255).toJSNumber()),e.push(i.shiftRight(16).and(255).toJSNumber()),e.push(i.shiftRight(24).and(255).toJSNumber()),e}function u64(t){const e=[],i=toNumber(t);return e.push(i.and(255).toJSNumber()),e.push(i.shiftRight(8).and(255).toJSNumber()),e.push(i.shiftRight(16).and(255).toJSNumber()),e.push(i.shiftRight(24).and(255).toJSNumber()),e.push(i.shiftRight(32).and(255).toJSNumber()),e.push(i.shiftRight(40).and(255).toJSNumber()),e.push(i.shiftRight(48).and(255).toJSNumber()),e.push(i.shiftRight(56).and(255).toJSNumber()),e}function toUTF8Array(t){for(var e=[],i=0;i<t.length;i++){var a=t.charCodeAt(i);a<128?e.push(a):a<2048?e.push(192|a>>6,128|63&a):a<55296||a>=57344?e.push(224|a>>12,128|a>>6&63,128|63&a):(i++,a=65536+((1023&a)<<10|1023&t.charCodeAt(i)),e.push(240|a>>18,128|a>>12&63,128|a>>6&63,128|63&a))}return e}function string(t){const e=toUTF8Array(t);return[...varuint32(e.length),...e]}function varuint(t){const e=[];let i=toNumber(t);if(i.isNegative())throw new Error("Number cannot be negative");for(;!i.isZero();)e.push(i.and(127).toJSNumber()),i=i.shiftRight(7);0==e.length&&e.push(0);for(let t=0;t<e.length-1;t++)e[t]=128|e[t];return e}function varint(t){let e,i;const a=t.bitLength().toJSNumber();t<0?(i=!0,e=bigInt.one.shiftLeft(a).add(t)):(i=!1,e=toNumber(t));const o=7-a%7,n=bigInt.one.shiftLeft(o).minus(1).shiftLeft(a),r=(1<<7-o)-1|128,s=varuint(e.add(n));return i||(s[s.length-1]=s[s.length-1]&r),s}function varint32(t){let e=toNumber(t);if(e.greater(bigInt("FFFFFFFF",16)))throw new Error("Number too big");if(e.greater(bigInt("7FFFFFFF",16))&&(e=e.minus(bigInt("100000000",16))),e.lesser(bigInt("-80000000",16)))throw new Error("Number too small");return varint(e)}function varint64(t){let e=toNumber(t);if(e.greater(bigInt("FFFFFFFFFFFFFFFF",16)))throw new Error("Number too big");if(e.greater(bigInt("7FFFFFFFFFFFFFFF",16))&&(e=e.minus(bigInt("10000000000000000",16))),e.lesser(bigInt("-8000000000000000",16)))throw new Error("Number too small");return varint(e)}function varuint32(t){let e=toNumber(t);if(e.greater(bigInt("FFFFFFFF",16)))throw new Error("Number too big");return varuint(e)}function varuint64(t){let e=toNumber(t);if(e.greater(bigInt("FFFFFFFFFFFFFFFF",16)))throw new Error("Number too big");return varuint(e)}function toHexString(t){return Array.from(t,(function(t){return("0"+(255&t).toString(16)).slice(-2)})).join("")}function ident(t){if("string"==typeof t){let e=t.split("\n");for(let t=0;t<e.length;t++)e[t]&&(e[t]="    "+e[t]);return e.join("\n")}if(Array.isArray(t)){for(let e=0;e<t.length;e++)t[e]=ident(t[e]);return t}}utils$4.toNumber=toNumber,utils$4.u32=u32,utils$4.u64=u64,utils$4.varuint32=varuint32,utils$4.varuint64=varuint64,utils$4.varint32=varint32,utils$4.varint64=varint64,utils$4.string=string,utils$4.toHexString=toHexString,utils$4.ident=ident;const utils$3=utils$4;class CodeBuilder$1{constructor(t){this.func=t,this.functionName=t.functionName,this.module=t.module}setLocal(t,e){const i=this.func.localIdxByName[t];if(void 0===i)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[...e,33,...utils$3.varuint32(i)]}teeLocal(t,e){const i=this.func.localIdxByName[t];if(void 0===i)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[...e,34,...utils$3.varuint32(i)]}getLocal(t){const e=this.func.localIdxByName[t];if(void 0===e)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[32,...utils$3.varuint32(e)]}i64_load8_s(t,e,i){const a=e||0;return[...t,48,void 0===i?0:i,...utils$3.varuint32(a)]}i64_load8_u(t,e,i){const a=e||0;return[...t,49,void 0===i?0:i,...utils$3.varuint32(a)]}i64_load16_s(t,e,i){const a=e||0;return[...t,50,void 0===i?1:i,...utils$3.varuint32(a)]}i64_load16_u(t,e,i){const a=e||0;return[...t,51,void 0===i?1:i,...utils$3.varuint32(a)]}i64_load32_s(t,e,i){const a=e||0;return[...t,52,void 0===i?2:i,...utils$3.varuint32(a)]}i64_load32_u(t,e,i){const a=e||0;return[...t,53,void 0===i?2:i,...utils$3.varuint32(a)]}i64_load(t,e,i){const a=e||0;return[...t,41,void 0===i?3:i,...utils$3.varuint32(a)]}i64_store(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=3,r=e):Array.isArray(i)?(o=e,n=3,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,55,n,...utils$3.varuint32(o)]}i64_store32(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=2,r=e):Array.isArray(i)?(o=e,n=2,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,62,n,...utils$3.varuint32(o)]}i64_store16(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=1,r=e):Array.isArray(i)?(o=e,n=1,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,61,n,...utils$3.varuint32(o)]}i64_store8(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=0,r=e):Array.isArray(i)?(o=e,n=0,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,60,n,...utils$3.varuint32(o)]}i32_load8_s(t,e,i){const a=e||0;return[...t,44,void 0===i?0:i,...utils$3.varuint32(a)]}i32_load8_u(t,e,i){const a=e||0;return[...t,45,void 0===i?0:i,...utils$3.varuint32(a)]}i32_load16_s(t,e,i){const a=e||0;return[...t,46,void 0===i?1:i,...utils$3.varuint32(a)]}i32_load16_u(t,e,i){const a=e||0;return[...t,47,void 0===i?1:i,...utils$3.varuint32(a)]}i32_load(t,e,i){const a=e||0;return[...t,40,void 0===i?2:i,...utils$3.varuint32(a)]}i32_store(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=2,r=e):Array.isArray(i)?(o=e,n=2,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,54,n,...utils$3.varuint32(o)]}i32_store16(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=1,r=e):Array.isArray(i)?(o=e,n=1,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,59,n,...utils$3.varuint32(o)]}i32_store8(t,e,i,a){let o,n,r;return Array.isArray(e)?(o=0,n=0,r=e):Array.isArray(i)?(o=e,n=0,r=i):Array.isArray(a)&&(o=e,n=i,r=a),[...t,...r,58,n,...utils$3.varuint32(o)]}call(t,...e){const i=this.module.functionIdxByName[t];if(void 0===i)throw new Error(`Function not defined: Function: ${t}`);return[...[].concat(...e),16,...utils$3.varuint32(i)]}call_indirect(t,...e){return[...[].concat(...e),...t,17,0,0]}if(t,e,i){return i?[...t,4,64,...e,5,...i,11]:[...t,4,64,...e,11]}block(t){return[2,64,...t,11]}loop(...t){return[3,64,...[].concat(...t),11]}br_if(t,e){return[...e,13,...utils$3.varuint32(t)]}br(t){return[12,...utils$3.varuint32(t)]}ret(t){return[...t,15]}drop(t){return[...t,26]}i64_const(t){return[66,...utils$3.varint64(t)]}i32_const(t){return[65,...utils$3.varint32(t)]}i64_eqz(t){return[...t,80]}i64_eq(t,e){return[...t,...e,81]}i64_ne(t,e){return[...t,...e,82]}i64_lt_s(t,e){return[...t,...e,83]}i64_lt_u(t,e){return[...t,...e,84]}i64_gt_s(t,e){return[...t,...e,85]}i64_gt_u(t,e){return[...t,...e,86]}i64_le_s(t,e){return[...t,...e,87]}i64_le_u(t,e){return[...t,...e,88]}i64_ge_s(t,e){return[...t,...e,89]}i64_ge_u(t,e){return[...t,...e,90]}i64_add(t,e){return[...t,...e,124]}i64_sub(t,e){return[...t,...e,125]}i64_mul(t,e){return[...t,...e,126]}i64_div_s(t,e){return[...t,...e,127]}i64_div_u(t,e){return[...t,...e,128]}i64_rem_s(t,e){return[...t,...e,129]}i64_rem_u(t,e){return[...t,...e,130]}i64_and(t,e){return[...t,...e,131]}i64_or(t,e){return[...t,...e,132]}i64_xor(t,e){return[...t,...e,133]}i64_shl(t,e){return[...t,...e,134]}i64_shr_s(t,e){return[...t,...e,135]}i64_shr_u(t,e){return[...t,...e,136]}i64_extend_i32_s(t){return[...t,172]}i64_extend_i32_u(t){return[...t,173]}i64_clz(t){return[...t,121]}i64_ctz(t){return[...t,122]}i32_eqz(t){return[...t,69]}i32_eq(t,e){return[...t,...e,70]}i32_ne(t,e){return[...t,...e,71]}i32_lt_s(t,e){return[...t,...e,72]}i32_lt_u(t,e){return[...t,...e,73]}i32_gt_s(t,e){return[...t,...e,74]}i32_gt_u(t,e){return[...t,...e,75]}i32_le_s(t,e){return[...t,...e,76]}i32_le_u(t,e){return[...t,...e,77]}i32_ge_s(t,e){return[...t,...e,78]}i32_ge_u(t,e){return[...t,...e,79]}i32_add(t,e){return[...t,...e,106]}i32_sub(t,e){return[...t,...e,107]}i32_mul(t,e){return[...t,...e,108]}i32_div_s(t,e){return[...t,...e,109]}i32_div_u(t,e){return[...t,...e,110]}i32_rem_s(t,e){return[...t,...e,111]}i32_rem_u(t,e){return[...t,...e,112]}i32_and(t,e){return[...t,...e,113]}i32_or(t,e){return[...t,...e,114]}i32_xor(t,e){return[...t,...e,115]}i32_shl(t,e){return[...t,...e,116]}i32_shr_s(t,e){return[...t,...e,117]}i32_shr_u(t,e){return[...t,...e,118]}i32_rotl(t,e){return[...t,...e,119]}i32_rotr(t,e){return[...t,...e,120]}i32_wrap_i64(t){return[...t,167]}i32_clz(t){return[...t,103]}i32_ctz(t){return[...t,104]}unreachable(){return[0]}current_memory(){return[63,0]}comment(){return[]}}var codebuilder=CodeBuilder$1;const CodeBuilder=codebuilder,utils$2=utils$4,typeCodes={i32:127,i64:126,f32:125,f64:124,anyfunc:112,func:96,emptyblock:64};class FunctionBuilder$1{constructor(t,e,i,a,o){if("import"==i)this.fnType="import",this.moduleName=a,this.fieldName=o;else{if("internal"!=i)throw new Error("Invalid function fnType: "+i);this.fnType="internal"}this.module=t,this.fnName=e,this.params=[],this.locals=[],this.localIdxByName={},this.code=[],this.returnType=null,this.nextLocal=0}addParam(t,e){if(this.localIdxByName[t])throw new Error(`param already exists. Function: ${this.fnName}, Param: ${t} `);const i=this.nextLocal++;this.localIdxByName[t]=i,this.params.push({type:e})}addLocal(t,e,i){const a=i||1;if(this.localIdxByName[t])throw new Error(`local already exists. Function: ${this.fnName}, Param: ${t} `);const o=this.nextLocal++;this.localIdxByName[t]=o,this.locals.push({type:e,length:a})}setReturnType(t){if(this.returnType)throw new Error(`returnType already defined. Function: ${this.fnName}`);this.returnType=t}getSignature(){return[96,...[...utils$2.varuint32(this.params.length),...this.params.map((t=>typeCodes[t.type]))],...this.returnType?[1,typeCodes[this.returnType]]:[0]]}getBody(){const t=this.locals.map((t=>[...utils$2.varuint32(t.length),typeCodes[t.type]])),e=[...utils$2.varuint32(this.locals.length),...[].concat(...t),...this.code,11];return[...utils$2.varuint32(e.length),...e]}addCode(...t){this.code.push(...[].concat(...t))}getCodeBuilder(){return new CodeBuilder(this)}}var functionbuilder=FunctionBuilder$1;const FunctionBuilder=functionbuilder,utils$1=utils$4;class ModuleBuilder$1{constructor(){this.functions=[],this.functionIdxByName={},this.nImportFunctions=0,this.nInternalFunctions=0,this.memory={pagesSize:1,moduleName:"env",fieldName:"memory"},this.free=8,this.datas=[],this.modules={},this.exports=[],this.functionsTable=[]}build(){return this._setSignatures(),new Uint8Array([...utils$1.u32(1836278016),...utils$1.u32(1),...this._buildType(),...this._buildImport(),...this._buildFunctionDeclarations(),...this._buildFunctionsTable(),...this._buildExports(),...this._buildElements(),...this._buildCode(),...this._buildData()])}addFunction(t){if(void 0!==this.functionIdxByName[t])throw new Error(`Function already defined: ${t}`);const e=this.functions.length;return this.functionIdxByName[t]=e,this.functions.push(new FunctionBuilder(this,t,"internal")),this.nInternalFunctions++,this.functions[e]}addIimportFunction(t,e,i){if(void 0!==this.functionIdxByName[t])throw new Error(`Function already defined: ${t}`);if(this.functions.length>0&&"internal"==this.functions[this.functions.length-1].type)throw new Error(`Import functions must be declared before internal: ${t}`);let a=i||t;const o=this.functions.length;return this.functionIdxByName[t]=o,this.functions.push(new FunctionBuilder(this,t,"import",e,a)),this.nImportFunctions++,this.functions[o]}setMemory(t,e,i){this.memory={pagesSize:t,moduleName:e||"env",fieldName:i||"memory"}}exportFunction(t,e){const i=e||t;if(void 0===this.functionIdxByName[t])throw new Error(`Function not defined: ${t}`);const a=this.functionIdxByName[t];i!=t&&(this.functionIdxByName[i]=a),this.exports.push({exportName:i,idx:a})}addFunctionToTable(t){const e=this.functionIdxByName[t];this.functionsTable.push(e)}addData(t,e){this.datas.push({offset:t,bytes:e})}alloc(t,e){let i,a;(Array.isArray(t)||ArrayBuffer.isView(t))&&void 0===e?(i=t.length,a=t):(i=t,a=e),i=1+(i-1>>3)<<3;const o=this.free;return this.free+=i,a&&this.addData(o,a),o}allocString(t){const e=(new globalThis.TextEncoder).encode(t);return this.alloc([...e,0])}_setSignatures(){this.signatures=[];const t={};if(this.functionsTable.length>0){const e=this.functions[this.functionsTable[0]].getSignature();t["s_"+utils$1.toHexString(e)]=0,this.signatures.push(e)}for(let e=0;e<this.functions.length;e++){const i=this.functions[e].getSignature(),a="s_"+utils$1.toHexString(i);void 0===t[a]&&(t[a]=this.signatures.length,this.signatures.push(i)),this.functions[e].signatureIdx=t[a]}}_buildSection(t,e){return[t,...utils$1.varuint32(e.length),...e]}_buildType(){return this._buildSection(1,[...utils$1.varuint32(this.signatures.length),...[].concat(...this.signatures)])}_buildImport(){const t=[];t.push([...utils$1.string(this.memory.moduleName),...utils$1.string(this.memory.fieldName),2,0,...utils$1.varuint32(this.memory.pagesSize)]);for(let e=0;e<this.nImportFunctions;e++)t.push([...utils$1.string(this.functions[e].moduleName),...utils$1.string(this.functions[e].fieldName),0,...utils$1.varuint32(this.functions[e].signatureIdx)]);return this._buildSection(2,utils$1.varuint32(t.length).concat(...t))}_buildFunctionDeclarations(){const t=[];for(let e=this.nImportFunctions;e<this.nImportFunctions+this.nInternalFunctions;e++)t.push(...utils$1.varuint32(this.functions[e].signatureIdx));return this._buildSection(3,[...utils$1.varuint32(t.length),...t])}_buildFunctionsTable(){return 0==this.functionsTable.length?[]:this._buildSection(4,[...utils$1.varuint32(1),112,0,...utils$1.varuint32(this.functionsTable.length)])}_buildElements(){if(0==this.functionsTable.length)return[];const t=[];for(let e=0;e<this.functionsTable.length;e++)t.push(...utils$1.varuint32(this.functionsTable[e]));return this._buildSection(9,[...utils$1.varuint32(1),...utils$1.varuint32(0),65,...utils$1.varint32(0),11,...utils$1.varuint32(this.functionsTable.length),...t])}_buildExports(){const t=[];for(let e=0;e<this.exports.length;e++)t.push([...utils$1.string(this.exports[e].exportName),0,...utils$1.varuint32(this.exports[e].idx)]);return this._buildSection(7,utils$1.varuint32(t.length).concat(...t))}_buildCode(){const t=[];for(let e=this.nImportFunctions;e<this.nImportFunctions+this.nInternalFunctions;e++)t.push(this.functions[e].getBody());return this._buildSection(10,utils$1.varuint32(t.length).concat(...t))}_buildData(){const t=[];t.push([0,65,0,11,4,...utils$1.u32(this.free)]);for(let e=0;e<this.datas.length;e++)t.push([0,65,...utils$1.varint32(this.datas[e].offset),11,...utils$1.varuint32(this.datas[e].bytes.length),...this.datas[e].bytes]);return this._buildSection(11,utils$1.varuint32(t.length).concat(...t))}}var modulebuilder=ModuleBuilder$1,ModuleBuilder=modulebuilder;async function buildBn128(t,i){const a=new ModuleBuilder;a.setMemory(25),buildBn128$1(a),i&&i(a);const o={};if(o.code=a.build(),o.pq=a.modules.f1m.pq,o.pr=a.modules.frm.pq,o.pG1gen=a.modules.bn128.pG1gen,o.pG1zero=a.modules.bn128.pG1zero,o.pG1b=a.modules.bn128.pG1b,o.pG2gen=a.modules.bn128.pG2gen,o.pG2zero=a.modules.bn128.pG2zero,o.pG2b=a.modules.bn128.pG2b,o.pOneT=a.modules.bn128.pOneT,o.prePSize=a.modules.bn128.prePSize,o.preQSize=a.modules.bn128.preQSize,o.n8q=32,o.n8r=32,o.q=a.modules.bn128.q,o.r=a.modules.bn128.r,!t&&globalThis.curve_bn128)return globalThis.curve_bn128;const n={name:"bn128",wasm:o,q:e("21888242871839275222246405745257275088696311157297823662689037894645226208583"),r:e("21888242871839275222246405745257275088548364400416034343698204186575808495617"),n8q:32,n8r:32,cofactorG2:e("30644e72e131a029b85045b68181585e06ceecda572a2489345f2299c0f9fa8d",16),singleThread:!!t},r=await buildEngine(n);return r.terminate=async function(){n.singleThread||(globalThis.curve_bn128=null,await this.tm.terminate())},t||(globalThis.curve_bn128=r),r}async function buildBls12381(t,i){const a=new ModuleBuilder;a.setMemory(25),buildBls12381$1(a),i&&i(a);const o={};if(o.code=a.build(),o.pq=a.modules.f1m.pq,o.pr=a.modules.frm.pq,o.pG1gen=a.modules.bls12381.pG1gen,o.pG1zero=a.modules.bls12381.pG1zero,o.pG1b=a.modules.bls12381.pG1b,o.pG2gen=a.modules.bls12381.pG2gen,o.pG2zero=a.modules.bls12381.pG2zero,o.pG2b=a.modules.bls12381.pG2b,o.pOneT=a.modules.bls12381.pOneT,o.prePSize=a.modules.bls12381.prePSize,o.preQSize=a.modules.bls12381.preQSize,o.n8q=48,o.n8r=32,o.q=a.modules.bls12381.q,o.r=a.modules.bls12381.r,!t&&globalThis.curve_bls12381)return globalThis.curve_bls12381;const n={name:"bls12381",wasm:o,q:e("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),r:e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),n8q:48,n8r:32,cofactorG1:e("0x396c8c005555e1568c00aaab0000aaab",16),cofactorG2:e("0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5",16),singleThread:!!t},r=await buildEngine(n);return r.terminate=async function(){n.singleThread||(globalThis.curve_bls12381=null,await this.tm.terminate())},t||(globalThis.curve_bls12381=r),r}globalThis.curve_bn128=null,globalThis.curve_bls12381=null;const bls12381r$1=e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),bn128r$1=e("21888242871839275222246405745257275088548364400416034343698204186575808495617");async function getCurveFromR(t,e,i){let a;if(eq(t,bn128r$1))a=await buildBn128(e,i);else{if(!eq(t,bls12381r$1))throw new Error(`Curve not supported: ${toString$6(t)}`);a=await buildBls12381(e,i)}return a}e("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),e("21888242871839275222246405745257275088696311157297823662689037894645226208583");const Scalar=_Scalar,utils=_utils;var fs={};async function open(t,e,i,a){if(i=i||262144,"number"!=typeof e&&["w+","wx+","r","ax+","a+"].indexOf(e)<0)throw new Error("Invalid open option");const o=await fs.promises.open(t,e),n=await o.stat();return new FastFile(o,n,i,a,t)}class FastFile{constructor(t,e,i,a,o){for(this.fileName=o,this.fd=t,this.pos=0,this.pageSize=a||256;this.pageSize<e.blksize;)this.pageSize*=2;this.totalSize=e.size,this.totalPages=Math.floor((e.size-1)/this.pageSize)+1,this.maxPagesLoaded=Math.floor(i/this.pageSize)+1,this.pages={},this.pendingLoads=[],this.writing=!1,this.reading=!1,this.avBuffs=[],this.history={}}_loadPage(t){const e=this,i=new Promise(((i,a)=>{e.pendingLoads.push({page:t,resolve:i,reject:a})}));return e.__statusPage("After Load request: ",t),i}__statusPage(t,e){const i=[],a=this;if(!a.logHistory)return;i.push("=="+t+" "+e);let o="";for(let t=0;t<a.pendingLoads.length;t++)a.pendingLoads[t].page==e&&(o=o+" "+t);if(o&&i.push("Pending loads:"+o),void 0!==a.pages[e]){const t=a.pages[e];i.push("Loaded"),i.push("pendingOps: "+t.pendingOps),t.loading&&i.push("loading: "+t.loading),t.writing&&i.push("writing"),t.dirty&&i.push("dirty")}i.push("=="),a.history[e]||(a.history[e]=[]),a.history[e].push(i)}__printHistory(t){const e=this;e.history[t]||console.log("Empty History ",t),console.log("History "+t);for(let i=0;i<e.history[t].length;i++)for(let a=0;a<e.history[t][i].length;a++)console.log("-> "+e.history[t][i][a])}_triggerLoad(){const t=this;if(t.reading)return;if(0==t.pendingLoads.length)return;const e=Object.keys(t.pages),i=[];for(let a=0;a<e.length;a++){const o=t.pages[parseInt(e[a])];0!=o.dirty||0!=o.pendingOps||o.writing||o.loading||i.push(parseInt(e[a]))}let a=t.maxPagesLoaded-e.length;const o=[];for(;t.pendingLoads.length>0&&(void 0!==t.pages[t.pendingLoads[0].page]||a>0||i.length>0);){const e=t.pendingLoads.shift();if(void 0!==t.pages[e.page]){t.pages[e.page].pendingOps++;const a=i.indexOf(e.page);a>=0&&i.splice(a,1),t.pages[e.page].loading?t.pages[e.page].loading.push(e):e.resolve(),t.__statusPage("After Load (cached): ",e.page)}else{if(a)a--;else{const e=i.shift();t.__statusPage("Before Unload: ",e),t.avBuffs.unshift(t.pages[e]),delete t.pages[e],t.__statusPage("After Unload: ",e)}e.page>=t.totalPages?(t.pages[e.page]=n(),e.resolve(),t.__statusPage("After Load (new): ",e.page)):(t.reading=!0,t.pages[e.page]=n(),t.pages[e.page].loading=[e],o.push(t.fd.read(t.pages[e.page].buff,0,t.pageSize,e.page*t.pageSize).then((i=>{t.pages[e.page].size=i.bytesRead;const a=t.pages[e.page].loading;delete t.pages[e.page].loading;for(let t=0;t<a.length;t++)a[t].resolve();return t.__statusPage("After Load (loaded): ",e.page),i}),(t=>{e.reject(t)}))),t.__statusPage("After Load (loading): ",e.page))}}function n(){if(t.avBuffs.length>0){const e=t.avBuffs.shift();return e.dirty=!1,e.pendingOps=1,e.size=0,e}return{dirty:!1,buff:new Uint8Array(t.pageSize),pendingOps:1,size:0}}Promise.all(o).then((()=>{t.reading=!1,t.pendingLoads.length>0&&setImmediate(t._triggerLoad.bind(t)),t._tryClose()}))}_triggerWrite(){const t=this;if(t.writing)return;const e=Object.keys(t.pages),i=[];for(let a=0;a<e.length;a++){const o=t.pages[parseInt(e[a])];o.dirty&&(o.dirty=!1,o.writing=!0,t.writing=!0,i.push(t.fd.write(o.buff,0,o.size,parseInt(e[a])*t.pageSize).then((()=>{o.writing=!1}),(e=>{console.log("ERROR Writing: "+e),t.error=e,t._tryClose()}))))}t.writing&&Promise.all(i).then((()=>{t.writing=!1,setImmediate(t._triggerWrite.bind(t)),t._tryClose(),t.pendingLoads.length>0&&setImmediate(t._triggerLoad.bind(t))}))}_getDirtyPage(){for(let t in this.pages)if(this.pages[t].dirty)return t;return-1}async write(t,e){if(0==t.byteLength)return;const i=this;if(void 0===e&&(e=i.pos),i.pos=e+t.byteLength,i.totalSize<e+t.byteLength&&(i.totalSize=e+t.byteLength),i.pendingClose)throw new Error("Writing a closing file");const a=Math.floor(e/i.pageSize),o=Math.floor((e+t.byteLength-1)/i.pageSize),n=[];for(let t=a;t<=o;t++)n.push(i._loadPage(t));i._triggerLoad();let r=a,s=e%i.pageSize,l=t.byteLength;for(;l>0;){await n[r-a];const e=s+l>i.pageSize?i.pageSize-s:l,o=t.slice(t.byteLength-l,t.byteLength-l+e);new Uint8Array(i.pages[r].buff.buffer,s,e).set(o),i.pages[r].dirty=!0,i.pages[r].pendingOps--,i.pages[r].size=Math.max(s+e,i.pages[r].size),r>=i.totalPages&&(i.totalPages=r+1),l-=e,r++,s=0,i.writing||setImmediate(i._triggerWrite.bind(i))}}async read(t,e){let i=new Uint8Array(t);return await this.readToBuffer(i,0,t,e),i}async readToBuffer(t,e,i,a){if(0==i)return;const o=this;if(i>o.pageSize*o.maxPagesLoaded*.8){const t=Math.floor(1.1*i);this.maxPagesLoaded=Math.floor(t/o.pageSize)+1}if(void 0===a&&(a=o.pos),o.pos=a+i,o.pendingClose)throw new Error("Reading a closing file");const n=Math.floor(a/o.pageSize),r=Math.floor((a+i-1)/o.pageSize),s=[];for(let t=n;t<=r;t++)s.push(o._loadPage(t));o._triggerLoad();let l=n,c=a%o.pageSize,d=a+i>o.totalSize?i-(a+i-o.totalSize):i;for(;d>0;){await s[l-n],o.__statusPage("After Await (read): ",l);const a=c+d>o.pageSize?o.pageSize-c:d,r=new Uint8Array(o.pages[l].buff.buffer,o.pages[l].buff.byteOffset+c,a);t.set(r,e+i-d),o.pages[l].pendingOps--,o.__statusPage("After Op done: ",l),d-=a,l++,c=0,o.pendingLoads.length>0&&setImmediate(o._triggerLoad.bind(o))}this.pos=a+i}_tryClose(){const t=this;if(!t.pendingClose)return;t.error&&t.pendingCloseReject(t.error);t._getDirtyPage()>=0||t.writing||t.reading||t.pendingLoads.length>0||t.pendingClose()}close(){const t=this;if(t.pendingClose)throw new Error("Closing the file twice");return new Promise(((e,i)=>{t.pendingClose=e,t.pendingCloseReject=i,t._tryClose()})).then((()=>{t.fd.close()}),(e=>{throw t.fd.close(),e}))}async discard(){await this.close(),await fs.promises.unlink(this.fileName)}async writeULE32(t,e){const i=new Uint8Array(4);new DataView(i.buffer).setUint32(0,t,!0),await this.write(i,e)}async writeUBE32(t,e){const i=new Uint8Array(4);new DataView(i.buffer).setUint32(0,t,!1),await this.write(i,e)}async writeULE64(t,e){const i=new Uint8Array(8),a=new DataView(i.buffer);a.setUint32(0,4294967295&t,!0),a.setUint32(4,Math.floor(t/4294967296),!0),await this.write(i,e)}async readULE32(t){const e=await this.read(4,t);return new Uint32Array(e.buffer)[0]}async readUBE32(t){const e=await this.read(4,t);return new DataView(e.buffer).getUint32(0,!1)}async readULE64(t){const e=await this.read(8,t),i=new Uint32Array(e.buffer);return 4294967296*i[1]+i[0]}async readString(t){const e=this;if(e.pendingClose)throw new Error("Reading a closing file");let i=void 0===t?e.pos:t,a=Math.floor(i/e.pageSize),o=!1,n="";for(;!o;){let t=e._loadPage(a);e._triggerLoad(),await t,e.__statusPage("After Await (read): ",a);let r=i%e.pageSize;const s=new Uint8Array(e.pages[a].buff.buffer,e.pages[a].buff.byteOffset+r,e.pageSize-r);let l=s.findIndex((t=>0===t));o=-1!==l,o?(n+=(new TextDecoder).decode(s.slice(0,l)),e.pos=a*this.pageSize+r+l+1):(n+=(new TextDecoder).decode(s),e.pos=a*this.pageSize+r+s.length),e.pages[a].pendingOps--,e.__statusPage("After Op done: ",a),i=e.pos,a++,e.pendingLoads.length>0&&setImmediate(e._triggerLoad.bind(e))}return n}}function createNew$1(t){const e=t.initialSize||1<<20,i=new MemFile;return i.o=t,i.o.data=new Uint8Array(e),i.allocSize=e,i.totalSize=0,i.readOnly=!1,i.pos=0,i}function readExisting$2(t){const e=new MemFile;return e.o=t,e.allocSize=t.data.byteLength,e.totalSize=t.data.byteLength,e.readOnly=!0,e.pos=0,e}const tmpBuff32$1=new Uint8Array(4),tmpBuff32v$1=new DataView(tmpBuff32$1.buffer),tmpBuff64$1=new Uint8Array(8),tmpBuff64v$1=new DataView(tmpBuff64$1.buffer);class MemFile{constructor(){this.pageSize=16384}_resizeIfNeeded(t){if(t>this.allocSize){const e=Math.max(this.allocSize+(1<<20),Math.floor(1.1*this.allocSize),t),i=new Uint8Array(e);i.set(this.o.data),this.o.data=i,this.allocSize=e}}async write(t,e){if(void 0===e&&(e=this.pos),this.readOnly)throw new Error("Writing a read only file");this._resizeIfNeeded(e+t.byteLength),this.o.data.set(t.slice(),e),e+t.byteLength>this.totalSize&&(this.totalSize=e+t.byteLength),this.pos=e+t.byteLength}async readToBuffer(t,e,i,a){if(void 0===a&&(a=this.pos),this.readOnly&&a+i>this.totalSize)throw new Error("Reading out of bounds");this._resizeIfNeeded(a+i);const o=new Uint8Array(this.o.data.buffer,this.o.data.byteOffset+a,i);t.set(o,e),this.pos=a+i}async read(t,e){const i=new Uint8Array(t);return await this.readToBuffer(i,0,t,e),i}close(){this.o.data.byteLength!=this.totalSize&&(this.o.data=this.o.data.slice(0,this.totalSize))}async discard(){}async writeULE32(t,e){tmpBuff32v$1.setUint32(0,t,!0),await this.write(tmpBuff32$1,e)}async writeUBE32(t,e){tmpBuff32v$1.setUint32(0,t,!1),await this.write(tmpBuff32$1,e)}async writeULE64(t,e){tmpBuff64v$1.setUint32(0,4294967295&t,!0),tmpBuff64v$1.setUint32(4,Math.floor(t/4294967296),!0),await this.write(tmpBuff64$1,e)}async readULE32(t){const e=await this.read(4,t);return new Uint32Array(e.buffer)[0]}async readUBE32(t){const e=await this.read(4,t);return new DataView(e.buffer).getUint32(0,!1)}async readULE64(t){const e=await this.read(8,t),i=new Uint32Array(e.buffer);return 4294967296*i[1]+i[0]}async readString(t){const e=this;let i=void 0===t?e.pos:t;if(i>this.totalSize){if(this.readOnly)throw new Error("Reading out of bounds");this._resizeIfNeeded(t)}const a=new Uint8Array(e.o.data.buffer,i,this.totalSize-i);let o=a.findIndex((t=>0===t)),n="";return-1!==o?(n=(new TextDecoder).decode(a.slice(0,o)),e.pos=i+o+1):e.pos=i,n}}const PAGE_SIZE=1<<22;function createNew(t){const e=t.initialSize||0,i=new BigMemFile;i.o=t;const a=e?Math.floor((e-1)/PAGE_SIZE)+1:0;i.o.data=[];for(let t=0;t<a-1;t++)i.o.data.push(new Uint8Array(PAGE_SIZE));return a&&i.o.data.push(new Uint8Array(e-PAGE_SIZE*(a-1))),i.totalSize=0,i.readOnly=!1,i.pos=0,i}function readExisting$1(t){const e=new BigMemFile;return e.o=t,e.totalSize=(t.data.length-1)*PAGE_SIZE+t.data[t.data.length-1].byteLength,e.readOnly=!0,e.pos=0,e}const tmpBuff32=new Uint8Array(4),tmpBuff32v=new DataView(tmpBuff32.buffer),tmpBuff64=new Uint8Array(8),tmpBuff64v=new DataView(tmpBuff64.buffer);class BigMemFile{constructor(){this.pageSize=16384}_resizeIfNeeded(t){if(t<=this.totalSize)return;if(this.readOnly)throw new Error("Reading out of file bounds");const e=Math.floor((t-1)/PAGE_SIZE)+1;for(let i=Math.max(this.o.data.length-1,0);i<e;i++){const a=new Uint8Array(i<e-1?PAGE_SIZE:t-(e-1)*PAGE_SIZE);i==this.o.data.length-1&&a.set(this.o.data[i]),this.o.data[i]=a}this.totalSize=t}async write(t,e){const i=this;if(void 0===e&&(e=i.pos),this.readOnly)throw new Error("Writing a read only file");this._resizeIfNeeded(e+t.byteLength);let a=Math.floor(e/PAGE_SIZE),o=e%PAGE_SIZE,n=t.byteLength;for(;n>0;){const e=o+n>PAGE_SIZE?PAGE_SIZE-o:n,r=t.slice(t.byteLength-n,t.byteLength-n+e);new Uint8Array(i.o.data[a].buffer,o,e).set(r),n-=e,a++,o=0}this.pos=e+t.byteLength}async readToBuffer(t,e,i,a){const o=this;if(void 0===a&&(a=o.pos),this.readOnly&&a+i>this.totalSize)throw new Error("Reading out of bounds");this._resizeIfNeeded(a+i);let n=Math.floor(a/PAGE_SIZE),r=a%PAGE_SIZE,s=i;for(;s>0;){const a=r+s>PAGE_SIZE?PAGE_SIZE-r:s,l=new Uint8Array(o.o.data[n].buffer,r,a);t.set(l,e+i-s),s-=a,n++,r=0}this.pos=a+i}async read(t,e){const i=new Uint8Array(t);return await this.readToBuffer(i,0,t,e),i}close(){}async discard(){}async writeULE32(t,e){tmpBuff32v.setUint32(0,t,!0),await this.write(tmpBuff32,e)}async writeUBE32(t,e){tmpBuff32v.setUint32(0,t,!1),await this.write(tmpBuff32,e)}async writeULE64(t,e){tmpBuff64v.setUint32(0,4294967295&t,!0),tmpBuff64v.setUint32(4,Math.floor(t/4294967296),!0),await this.write(tmpBuff64,e)}async readULE32(t){const e=await this.read(4,t);return new Uint32Array(e.buffer)[0]}async readUBE32(t){const e=await this.read(4,t);return new DataView(e.buffer).getUint32(0,!1)}async readULE64(t){const e=await this.read(8,t),i=new Uint32Array(e.buffer);return 4294967296*i[1]+i[0]}async readString(t){const e=this;let i=void 0===t?e.pos:t;if(i>this.totalSize){if(this.readOnly)throw new Error("Reading out of bounds");this._resizeIfNeeded(t)}let a=!1,o="";for(;!a;){let t=Math.floor(i/PAGE_SIZE),n=i%PAGE_SIZE;if(void 0===e.o.data[t])throw new Error("ERROR");let r=Math.min(2048,e.o.data[t].length-n);const s=new Uint8Array(e.o.data[t].buffer,n,r);let l=s.findIndex((t=>0===t));a=-1!==l,a?(o+=(new TextDecoder).decode(s.slice(0,l)),e.pos=t*PAGE_SIZE+n+l+1):(o+=(new TextDecoder).decode(s),e.pos=t*PAGE_SIZE+n+s.length),i=e.pos}return o}}const O_TRUNC=1024,O_CREAT=512,O_RDWR=2,O_RDONLY=0,DEFAULT_CACHE_SIZE=65536,DEFAULT_PAGE_SIZE=8192;async function createOverride(t,e,i){if("string"==typeof t&&(t={type:"file",fileName:t,cacheSize:e||DEFAULT_CACHE_SIZE,pageSize:i||DEFAULT_PAGE_SIZE}),"file"==t.type)return await open(t.fileName,O_TRUNC|O_CREAT|O_RDWR,t.cacheSize,t.pageSize);if("mem"==t.type)return createNew$1(t);if("bigMem"==t.type)return createNew(t);throw new Error("Invalid FastFile type: "+t.type)}async function readExisting(t,e,i){if(t instanceof Uint8Array&&(t={type:"mem",data:t}),"string"==typeof t){t={type:"mem",data:await fetch(t).then((function(t){return t.arrayBuffer()})).then((function(t){return new Uint8Array(t)}))}}if("file"==t.type)return await open(t.fileName,O_RDONLY,t.cacheSize,t.pageSize);if("mem"==t.type)return await readExisting$2(t);if("bigMem"==t.type)return await readExisting$1(t);throw new Error("Invalid FastFile type: "+t.type)}async function readBinFile(t,e,i,a,o){const n=await readExisting(t),r=await n.read(4);let s="";for(let t=0;t<4;t++)s+=String.fromCharCode(r[t]);if(s!=e)throw new Error(t+": Invalid File format");if(await n.readULE32()>i)throw new Error("Version not supported");const l=await n.readULE32();let c=[];for(let t=0;t<l;t++){let t=await n.readULE32(),e=await n.readULE64();void 0===c[t]&&(c[t]=[]),c[t].push({p:n.pos,size:e}),n.pos+=e}return{fd:n,sections:c}}async function createBinFile(t,e,i,a,o,n){const r=await createOverride(t,o,n),s=new Uint8Array(4);for(let t=0;t<4;t++)s[t]=e.charCodeAt(t);return await r.write(s,0),await r.writeULE32(i),await r.writeULE32(a),r}async function startWriteSection(t,e){if(void 0!==t.writingSection)throw new Error("Already writing a section");await t.writeULE32(e),t.writingSection={pSectionSize:t.pos},await t.writeULE64(0)}async function endWriteSection(t){if(void 0===t.writingSection)throw new Error("Not writing a section");const e=t.pos-t.writingSection.pSectionSize-8,i=t.pos;t.pos=t.writingSection.pSectionSize,await t.writeULE64(e),t.pos=i,delete t.writingSection}async function startReadUniqueSection(t,e,i){if(void 0!==t.readingSection)throw new Error("Already reading a section");if(!e[i])throw new Error(t.fileName+": Missing section "+i);if(e[i].length>1)throw new Error(t.fileName+": Section Duplicated "+i);t.pos=e[i][0].p,t.readingSection=e[i][0]}async function endReadSection(t,e){if(void 0===t.readingSection)throw new Error("Not reading a section");if(!e&&t.pos-t.readingSection.p!=t.readingSection.size)throw new Error("Invalid section size reading");delete t.readingSection}async function writeBigInt(t,e,i,a){const o=new Uint8Array(i);Scalar.toRprLE(o,0,e,i),await t.write(o,a)}async function readBigInt(t,e,i){const a=await t.read(e,i);return Scalar.fromRprLE(a,0,e)}async function copySection(t,e,i,a,o){void 0===o&&(o=e[a][0].size);const n=t.pageSize;await startReadUniqueSection(t,e,a),await startWriteSection(i,a);for(let e=0;e<o;e+=n){const a=Math.min(o-e,n),r=await t.read(a);await i.write(r)}await endWriteSection(i),await endReadSection(t,o!=e[a][0].size)}async function readSection(t,e,i,a,o){if((a=void 0===a?0:a)+(o=void 0===o?e[i][0].size-a:o)>e[i][0].size)throw new Error("Reading out of the range of the section");let n;return n=o<1<<30?new Uint8Array(o):new BigBuffer(o),await t.readToBuffer(n,0,o,e[i][0].p+a),n}async function sectionIsEqual(t,e,i,a,o){const n=16*t.pageSize;if(await startReadUniqueSection(t,e,o),await startReadUniqueSection(i,a,o),e[o][0].size!=a[o][0].size)return!1;const r=e[o][0].size;for(let e=0;e<r;e+=n){const a=Math.min(r-e,n),o=await t.read(a),s=await i.read(a);for(let t=0;t<a;t++)if(o[t]!=s[t])return!1}return await endReadSection(t),await endReadSection(i),!0}Scalar.e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),Scalar.e("21888242871839275222246405745257275088548364400416034343698204186575808495617");const bls12381q=Scalar.e("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),bn128q=Scalar.e("21888242871839275222246405745257275088696311157297823662689037894645226208583");async function getCurveFromQ(t){let e;if(Scalar.eq(t,bn128q))e=await buildBn128();else{if(!Scalar.eq(t,bls12381q))throw new Error(`Curve not supported: ${Scalar.toString(t)}`);e=await buildBls12381()}return e}async function getCurveFromName(t){let e;const i=t.toUpperCase().match(/[A-Za-z0-9]+/g).join("");if(["BN128","BN254","ALTBN128"].indexOf(i)>=0)e=await buildBn128();else{if(!(["BLS12381"].indexOf(i)>=0))throw new Error(`Curve not supported: ${t}`);e=await buildBls12381()}return e}var blake2bWasm={exports:{}},nanoassert=assert$1;class AssertionError extends Error{}function assert$1(t,e){if(!t){var i=new AssertionError(e);throw Error.captureStackTrace&&Error.captureStackTrace(i,assert$1),i}}function byteLength$5(t){return t.length}function toString$5(t){const e=t.byteLength;let i="";for(let a=0;a<e;a++)i+=String.fromCharCode(t[a]);return i}function write$6(t,e,i=0,a=byteLength$5(e)){const o=Math.min(a,t.byteLength-i);for(let a=0;a<o;a++)t[i+a]=e.charCodeAt(a);return o}AssertionError.prototype.name="AssertionError";var ascii$1={byteLength:byteLength$5,toString:toString$5,write:write$6};const alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",codes=new Uint8Array(256);for(let t=0;t<alphabet.length;t++)codes[alphabet.charCodeAt(t)]=t;function byteLength$4(t){let e=t.length;return 61===t.charCodeAt(e-1)&&e--,e>1&&61===t.charCodeAt(e-1)&&e--,3*e>>>2}function toString$4(t){const e=t.byteLength;let i="";for(let a=0;a<e;a+=3)i+=alphabet[t[a]>>2]+alphabet[(3&t[a])<<4|t[a+1]>>4]+alphabet[(15&t[a+1])<<2|t[a+2]>>6]+alphabet[63&t[a+2]];return e%3==2?i=i.substring(0,i.length-1)+"=":e%3==1&&(i=i.substring(0,i.length-2)+"=="),i}function write$5(t,e,i=0,a=byteLength$4(e)){const o=Math.min(a,t.byteLength-i);for(let i=0,a=0;i<o;i+=4){const o=codes[e.charCodeAt(i)],n=codes[e.charCodeAt(i+1)],r=codes[e.charCodeAt(i+2)],s=codes[e.charCodeAt(i+3)];t[a++]=o<<2|n>>4,t[a++]=(15&n)<<4|r>>2,t[a++]=(3&r)<<6|63&s}return o}codes[45]=62,codes[95]=63;var base64$1={byteLength:byteLength$4,toString:toString$4,write:write$5};function byteLength$3(t){return t.length>>>1}function toString$3(t){const e=t.byteLength;t=new DataView(t.buffer,t.byteOffset,e);let i="",a=0;for(let o=e-e%4;a<o;a+=4)i+=t.getUint32(a).toString(16).padStart(8,"0");for(;a<e;a++)i+=t.getUint8(a).toString(16).padStart(2,"0");return i}function write$4(t,e,i=0,a=byteLength$3(e)){const o=Math.min(a,t.byteLength-i);for(let a=0;a<o;a++){const o=hexValue(e.charCodeAt(2*a)),n=hexValue(e.charCodeAt(2*a+1));if(void 0===o||void 0===n)return t.subarray(0,a);t[i+a]=o<<4|n}return o}var hex$1={byteLength:byteLength$3,toString:toString$3,write:write$4};function hexValue(t){return t>=48&&t<=57?t-48:t>=65&&t<=70?t-65+10:t>=97&&t<=102?t-97+10:void 0}function byteLength$2(t){let e=0;for(let i=0,a=t.length;i<a;i++){const o=t.charCodeAt(i);if(o>=55296&&o<=56319&&i+1<a){const a=t.charCodeAt(i+1);if(a>=56320&&a<=57343){e+=4,i++;continue}}e+=o<=127?1:o<=2047?2:3}return e}let toString$2,write$3;if("undefined"!=typeof TextDecoder){const t=new TextDecoder;toString$2=function(e){return t.decode(e)}}else toString$2=function(t){const e=t.byteLength;let i="",a=0;for(;a<e;){let o=t[a];if(o<=127){i+=String.fromCharCode(o),a++;continue}let n=0,r=0;if(o<=223?(n=1,r=31&o):o<=239?(n=2,r=15&o):o<=244&&(n=3,r=7&o),e-a-n>0){let e=0;for(;e<n;)o=t[a+e+1],r=r<<6|63&o,e+=1}else r=65533,n=e-a;i+=String.fromCodePoint(r),a+=n+1}return i};if("undefined"!=typeof TextEncoder){const t=new TextEncoder;write$3=function(e,i,a=0,o=byteLength$2(i)){const n=Math.min(o,e.byteLength-a);return t.encodeInto(i,e.subarray(a,a+n)),n}}else write$3=function(t,e,i=0,a=byteLength$2(e)){const o=Math.min(a,t.byteLength-i);t=t.subarray(i,i+o);let n=0,r=0;for(;n<e.length;){const i=e.codePointAt(n);if(i<=127){t[r++]=i,n++;continue}let a=0,o=0;for(i<=2047?(a=6,o=192):i<=65535?(a=12,o=224):i<=2097151&&(a=18,o=240),t[r++]=o|i>>a,a-=6;a>=0;)t[r++]=128|i>>a&63,a-=6;n+=i>=65536?2:1}return o};var utf8$1={byteLength:byteLength$2,toString:toString$2,write:write$3};function byteLength$1(t){return 2*t.length}function toString$1(t){const e=t.byteLength;let i="";for(let a=0;a<e-1;a+=2)i+=String.fromCharCode(t[a]+256*t[a+1]);return i}function write$2(t,e,i=0,a=byteLength$1(e)){const o=Math.min(a,t.byteLength-i);let n=o;for(let a=0;a<e.length&&!((n-=2)<0);++a){const o=e.charCodeAt(a),n=o>>8,r=o%256;t[i+2*a]=r,t[i+2*a+1]=n}return o}var utf16le$1={byteLength:byteLength$1,toString:toString$1,write:write$2};const ascii=ascii$1,base64=base64$1,hex=hex$1,utf8=utf8$1,utf16le=utf16le$1,LE=255===new Uint8Array(Uint16Array.of(255).buffer)[0];function codecFor(t){switch(t){case"ascii":return ascii;case"base64":return base64;case"hex":return hex;case"utf8":case"utf-8":case void 0:return utf8;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16le;default:throw new Error(`Unknown encoding: ${t}`)}}function isBuffer(t){return t instanceof Uint8Array}function isEncoding(t){try{return codecFor(t),!0}catch{return!1}}function alloc(t,e,i){const a=new Uint8Array(t);return void 0!==e&&e(a,e,0,a.byteLength,i),a}function allocUnsafe(t){return new Uint8Array(t)}function allocUnsafeSlow(t){return new Uint8Array(t)}function byteLength(t,e){return codecFor(e).byteLength(t)}function compare(t,e){if(t===e)return 0;const i=Math.min(t.byteLength,e.byteLength);t=new DataView(t.buffer,t.byteOffset,t.byteLength),e=new DataView(e.buffer,e.byteOffset,e.byteLength);let a=0;for(let o=i-i%4;a<o;a+=4){if(t.getUint32(a,LE)!==e.getUint32(a,LE))break}for(;a<i;a++){const i=t.getUint8(a),o=e.getUint8(a);if(i<o)return-1;if(i>o)return 1}return t.byteLength>e.byteLength?1:t.byteLength<e.byteLength?-1:0}function concat(t,e){void 0===e&&(e=t.reduce(((t,e)=>t+e.byteLength),0));const i=new Uint8Array(e);return t.reduce(((t,e)=>(i.set(e,t),t+e.byteLength)),0),i}function copy(t,e,i=0,a=0,o=t.byteLength){if(o>0&&o<a)return 0;if(o===a)return 0;if(0===t.byteLength||0===e.byteLength)return 0;if(i<0)throw new RangeError("targetStart is out of range");if(a<0||a>=t.byteLength)throw new RangeError("sourceStart is out of range");if(o<0)throw new RangeError("sourceEnd is out of range");i>=e.byteLength&&(i=e.byteLength),o>t.byteLength&&(o=t.byteLength),e.byteLength-i<o-a&&(o=e.length-i+a);const n=o-a;return t===e?e.copyWithin(i,a,o):e.set(t.subarray(a,o),i),n}function equals(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;const i=t.byteLength;t=new DataView(t.buffer,t.byteOffset,t.byteLength),e=new DataView(e.buffer,e.byteOffset,e.byteLength);let a=0;for(let o=i-i%4;a<o;a+=4)if(t.getUint32(a,LE)!==e.getUint32(a,LE))return!1;for(;a<i;a++)if(t.getUint8(a)!==e.getUint8(a))return!1;return!0}function fill(t,e,i,a,o){if("string"==typeof e?"string"==typeof i?(o=i,i=0,a=t.byteLength):"string"==typeof a&&(o=a,a=t.byteLength):"number"==typeof val?e&=255:"boolean"==typeof val&&(e=+e),i<0||t.byteLength<i||t.byteLength<a)throw new RangeError("Out of range index");if(void 0===i&&(i=0),void 0===a&&(a=t.byteLength),a<=i)return t;if(e||(e=0),"number"==typeof e)for(let o=i;o<a;++o)t[o]=e;else{const n=(e=isBuffer(e)?e:from(e,o)).byteLength;for(let o=0;o<a-i;++o)t[o+i]=e[o%n]}return t}function from(t,e,i){return"string"==typeof t?fromString(t,e):Array.isArray(t)?fromArray(t):ArrayBuffer.isView(t)?fromBuffer(t):fromArrayBuffer(t,e,i)}function fromString(t,e){const i=codecFor(e),a=new Uint8Array(i.byteLength(t));return i.write(a,t,0,a.byteLength),a}function fromArray(t){const e=new Uint8Array(t.length);return e.set(t),e}function fromBuffer(t){const e=new Uint8Array(t.byteLength);return e.set(t),e}function fromArrayBuffer(t,e,i){return new Uint8Array(t,e,i)}function includes(t,e,i,a){return-1!==indexOf(t,e,i,a)}function bidirectionalIndexOf(t,e,i,a,o){if(0===t.byteLength)return-1;if("string"==typeof i?(a=i,i=0):void 0===i?i=o?0:t.length-1:i<0&&(i+=t.byteLength),i>=t.byteLength){if(o)return-1;i=t.byteLength-1}else if(i<0){if(!o)return-1;i=0}if("string"==typeof e)e=from(e,a);else if("number"==typeof e)return e&=255,o?t.indexOf(e,i):t.lastIndexOf(e,i);if(0===e.byteLength)return-1;if(o){let a=-1;for(let o=i;o<t.byteLength;o++)if(t[o]===e[-1===a?0:o-a]){if(-1===a&&(a=o),o-a+1===e.byteLength)return a}else-1!==a&&(o-=o-a),a=-1}else{i+e.byteLength>t.byteLength&&(i=t.byteLength-e.byteLength);for(let a=i;a>=0;a--){let i=!0;for(let o=0;o<e.byteLength;o++)if(t[a+o]!==e[o]){i=!1;break}if(i)return a}}return-1}function indexOf(t,e,i,a){return bidirectionalIndexOf(t,e,i,a,!0)}function lastIndexOf(t,e,i,a){return bidirectionalIndexOf(t,e,i,a,!1)}function swap(t,e,i){const a=t[e];t[e]=t[i],t[i]=a}function swap16(t){const e=t.byteLength;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let i=0;i<e;i+=2)swap(t,i,i+1);return t}function swap32(t){const e=t.byteLength;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let i=0;i<e;i+=4)swap(t,i,i+3),swap(t,i+1,i+2);return t}function swap64(t){const e=t.byteLength;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let i=0;i<e;i+=8)swap(t,i,i+7),swap(t,i+1,i+6),swap(t,i+2,i+5),swap(t,i+3,i+4);return t}function toBuffer(t){return t}function toString(t,e,i=0,a=t.byteLength){const o=t.byteLength;return i>=o||a<=i?"":(i<0&&(i=0),a>o&&(a=o),(0!==i||a<o)&&(t=t.subarray(i,a)),codecFor(e).toString(t))}function write$1(t,e,i,a,o){return void 0===i?o="utf8":void 0===a&&"string"==typeof i?(o=i,i=void 0):void 0===o&&"string"==typeof a&&(o=a,a=void 0),codecFor(o).write(t,e,i,a)}var browser={isBuffer:isBuffer,isEncoding:isEncoding,alloc:alloc,allocUnsafe:allocUnsafe,allocUnsafeSlow:allocUnsafeSlow,byteLength:byteLength,compare:compare,concat:concat,copy:copy,equals:equals,fill:fill,from:from,includes:includes,indexOf:indexOf,lastIndexOf:lastIndexOf,swap16:swap16,swap32:swap32,swap64:swap64,toBuffer:toBuffer,toString:toString,write:write$1},blake2b,hasRequiredBlake2b;function requireBlake2b(){if(hasRequiredBlake2b)return blake2b;hasRequiredBlake2b=1;var t=(()=>{for(var t=new Uint8Array(128),e=0;e<64;e++)t[e<26?e+65:e<52?e+71:e<62?e-4:4*e-205]=e;return e=>{for(var i=e.length,a=new Uint8Array(3*(i-("="==e[i-1])-("="==e[i-2]))/4|0),o=0,n=0;o<i;){var r=t[e.charCodeAt(o++)],s=t[e.charCodeAt(o++)],l=t[e.charCodeAt(o++)],c=t[e.charCodeAt(o++)];a[n++]=r<<2|s>>4,a[n++]=s<<4|l>>2,a[n++]=l<<6|c}return a}})(),e=((t,e)=>function(){return e||(0,t[Object.keys(t)[0]])((e={exports:{}}).exports,e),e.exports})({"wasm-binary:./blake2b.wat"(e,i){i.exports=t("")}}),i=e(),a=WebAssembly.compile(i);return blake2b=async t=>(await WebAssembly.instantiate(await a,t)).exports}var assert=nanoassert,b4a=browser,wasm=null,wasmPromise="undefined"!=typeof WebAssembly&&requireBlake2b()().then((t=>{wasm=t})),head=64,freeList=[];blake2bWasm.exports=Blake2b;var BYTES_MIN=blake2bWasm.exports.BYTES_MIN=16,BYTES_MAX=blake2bWasm.exports.BYTES_MAX=64;blake2bWasm.exports.BYTES=32;var KEYBYTES_MIN=blake2bWasm.exports.KEYBYTES_MIN=16,KEYBYTES_MAX=blake2bWasm.exports.KEYBYTES_MAX=64;blake2bWasm.exports.KEYBYTES=32;var SALTBYTES=blake2bWasm.exports.SALTBYTES=16,PERSONALBYTES=blake2bWasm.exports.PERSONALBYTES=16;function Blake2b(t,e,i,a,o){if(!(this instanceof Blake2b))return new Blake2b(t,e,i,a,o);if(!wasm)throw new Error("WASM not loaded. Wait for Blake2b.ready(cb)");t||(t=32),!0!==o&&(assert(t>=BYTES_MIN,"digestLength must be at least "+BYTES_MIN+", was given "+t),assert(t<=BYTES_MAX,"digestLength must be at most "+BYTES_MAX+", was given "+t),null!=e&&(assert(e instanceof Uint8Array,"key must be Uint8Array or Buffer"),assert(e.length>=KEYBYTES_MIN,"key must be at least "+KEYBYTES_MIN+", was given "+e.length),assert(e.length<=KEYBYTES_MAX,"key must be at least "+KEYBYTES_MAX+", was given "+e.length)),null!=i&&(assert(i instanceof Uint8Array,"salt must be Uint8Array or Buffer"),assert(i.length===SALTBYTES,"salt must be exactly "+SALTBYTES+", was given "+i.length)),null!=a&&(assert(a instanceof Uint8Array,"personal must be Uint8Array or Buffer"),assert(a.length===PERSONALBYTES,"personal must be exactly "+PERSONALBYTES+", was given "+a.length))),freeList.length||(freeList.push(head),head+=216),this.digestLength=t,this.finalized=!1,this.pointer=freeList.pop(),this._memory=new Uint8Array(wasm.memory.buffer),this._memory.fill(0,0,64),this._memory[0]=this.digestLength,this._memory[1]=e?e.length:0,this._memory[2]=1,this._memory[3]=1,i&&this._memory.set(i,32),a&&this._memory.set(a,48),this.pointer+216>this._memory.length&&this._realloc(this.pointer+216),wasm.blake2b_init(this.pointer,this.digestLength),e&&(this.update(e),this._memory.fill(0,head,head+e.length),this._memory[this.pointer+200]=128)}function noop(){}function log2(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function formatHash(t,e){const i=new DataView(t.buffer,t.byteOffset,t.byteLength);let a="";for(let t=0;t<4;t++){t>0&&(a+="\n"),a+="\t\t";for(let e=0;e<4;e++)e>0&&(a+=" "),a+=i.getUint32(16*t+4*e).toString(16).padStart(8,"0")}return e&&(a=e+"\n"+a),a}function hashIsEqual(t,e){if(t.byteLength!=e.byteLength)return!1;for(var i=new Int8Array(t),a=new Int8Array(e),o=0;o!=t.byteLength;o++)if(i[o]!=a[o])return!1;return!0}function cloneHasher(t){const e=t.getPartialHash(),i=blake2bWasm.exports(64);return i.setPartialHash(e),i}async function sameRatio$2(t,e,i,a,o){if(t.G1.isZero(e))return!1;if(t.G1.isZero(i))return!1;if(t.G2.isZero(a))return!1;if(t.G2.isZero(o))return!1;return await t.pairingEq(e,o,t.G1.neg(i),a)}function askEntropy(){return window.prompt("Enter a random text. (Entropy): ","")}async function getRandomRng(t){for(;!t;)t=await askEntropy();const e=blake2bWasm.exports(64);e.update(crypto.randomBytes(64));const i=new TextEncoder;e.update(i.encode(t));const a=Buffer.from(e.digest()),o=[];for(let t=0;t<8;t++)o[t]=a.readUInt32BE(4*t);return new ChaCha(o)}function rngFromBeaconParams(t,e){let i,a;e<32?(i=1<<e>>>0,a=1):(i=4294967296,a=1<<e-32>>>0);let o=t;for(let t=0;t<a;t++)for(let t=0;t<i;t++)o=crypto.createHash("sha256").update(o).digest();const n=new DataView(o.buffer,o.byteOffset,o.byteLength),r=[];for(let t=0;t<8;t++)r[t]=n.getUint32(4*t,!1);return new ChaCha(r)}function hex2ByteArray(t){return t instanceof Uint8Array?t:("0x"==t.slice(0,2)&&(t=t.slice(2)),new Uint8Array(t.match(/[\da-f]{2}/gi).map((function(t){return parseInt(t,16)}))))}function byteArray2hex(t){return Array.prototype.map.call(t,(function(t){return("0"+(255&t).toString(16)).slice(-2)})).join("")}function stringifyBigIntsWithField(t,e){if(e instanceof Uint8Array)return t.toString(e);if(Array.isArray(e))return e.map(stringifyBigIntsWithField.bind(null,t));if("object"==typeof e){const i={};return Object.keys(e).forEach((a=>{i[a]=stringifyBigIntsWithField(t,e[a])})),i}return"bigint"==typeof e||void 0!==e.eq?e.toString(10):e}async function writeHeader(t,e){await startWriteSection(t,1),await t.writeULE32(1),await endWriteSection(t);const i=await getCurveFromQ(e.q);await startWriteSection(t,2);const a=i.q,o=8*(Math.floor((Scalar.bitLength(a)-1)/64)+1),n=i.r,r=8*(Math.floor((Scalar.bitLength(n)-1)/64)+1);await t.writeULE32(o),await writeBigInt(t,a,o),await t.writeULE32(r),await writeBigInt(t,n,r),await t.writeULE32(e.nVars),await t.writeULE32(e.nPublic),await t.writeULE32(e.domainSize),await writeG1(t,i,e.vk_alpha_1),await writeG1(t,i,e.vk_beta_1),await writeG2(t,i,e.vk_beta_2),await writeG2(t,i,e.vk_gamma_2),await writeG1(t,i,e.vk_delta_1),await writeG2(t,i,e.vk_delta_2),await endWriteSection(t)}async function writeG1(t,e,i){const a=new Uint8Array(2*e.G1.F.n8);e.G1.toRprLEM(a,0,i),await t.write(a)}async function writeG2(t,e,i){const a=new Uint8Array(2*e.G2.F.n8);e.G2.toRprLEM(a,0,i),await t.write(a)}async function readG1(t,e,i){const a=await t.read(2*e.G1.F.n8),o=e.G1.fromRprLEM(a,0);return i?e.G1.toObject(o):o}async function readG2(t,e,i){const a=await t.read(2*e.G2.F.n8),o=e.G2.fromRprLEM(a,0);return i?e.G2.toObject(o):o}async function readHeader$1(t,e,i){await startReadUniqueSection(t,e,1);const a=await t.readULE32();if(await endReadSection(t),1==a)return await readHeaderGroth16(t,e,i);if(2==a)return await readHeaderPlonk(t,e,i);throw new Error("Protocol not supported: ")}async function readHeaderGroth16(t,e,i){const a={protocol:"groth16"};await startReadUniqueSection(t,e,2);const o=await t.readULE32();a.n8q=o,a.q=await readBigInt(t,o);const n=await t.readULE32();return a.n8r=n,a.r=await readBigInt(t,n),a.curve=await getCurveFromQ(a.q),a.nVars=await t.readULE32(),a.nPublic=await t.readULE32(),a.domainSize=await t.readULE32(),a.power=log2(a.domainSize),a.vk_alpha_1=await readG1(t,a.curve,i),a.vk_beta_1=await readG1(t,a.curve,i),a.vk_beta_2=await readG2(t,a.curve,i),a.vk_gamma_2=await readG2(t,a.curve,i),a.vk_delta_1=await readG1(t,a.curve,i),a.vk_delta_2=await readG2(t,a.curve,i),await endReadSection(t),a}async function readHeaderPlonk(t,e,i){const a={protocol:"plonk"};await startReadUniqueSection(t,e,2);const o=await t.readULE32();a.n8q=o,a.q=await readBigInt(t,o);const n=await t.readULE32();return a.n8r=n,a.r=await readBigInt(t,n),a.curve=await getCurveFromQ(a.q),a.nVars=await t.readULE32(),a.nPublic=await t.readULE32(),a.domainSize=await t.readULE32(),a.power=log2(a.domainSize),a.nAdditions=await t.readULE32(),a.nConstrains=await t.readULE32(),a.k1=await t.read(n),a.k2=await t.read(n),a.Qm=await readG1(t,a.curve,i),a.Ql=await readG1(t,a.curve,i),a.Qr=await readG1(t,a.curve,i),a.Qo=await readG1(t,a.curve,i),a.Qc=await readG1(t,a.curve,i),a.S1=await readG1(t,a.curve,i),a.S2=await readG1(t,a.curve,i),a.S3=await readG1(t,a.curve,i),a.X_2=await readG2(t,a.curve,i),await endReadSection(t),a}async function readZKey(t,e){const{fd:i,sections:a}=await readBinFile(t,"zkey",1),o=await readHeader$1(i,a,e),n=new F1Field(o.r),r=Scalar.mod(Scalar.shl(1,8*o.n8r),o.r),s=n.inv(r),l=n.mul(s,s);let c=await getCurveFromQ(o.q);await startReadUniqueSection(i,a,3),o.IC=[];for(let t=0;t<=o.nPublic;t++){const t=await readG1(i,c,e);o.IC.push(t)}await endReadSection(i),await startReadUniqueSection(i,a,4);const d=await i.readULE32();o.ccoefs=[];for(let t=0;t<d;t++){const t=await i.readULE32(),e=await i.readULE32(),a=await i.readULE32(),n=await u();o.ccoefs.push({matrix:t,constraint:e,signal:a,value:n})}await endReadSection(i),await startReadUniqueSection(i,a,5),o.A=[];for(let t=0;t<o.nVars;t++){const a=await readG1(i,c,e);o.A[t]=a}await endReadSection(i),await startReadUniqueSection(i,a,6),o.B1=[];for(let t=0;t<o.nVars;t++){const a=await readG1(i,c,e);o.B1[t]=a}await endReadSection(i),await startReadUniqueSection(i,a,7),o.B2=[];for(let t=0;t<o.nVars;t++){const a=await readG2(i,c,e);o.B2[t]=a}await endReadSection(i),await startReadUniqueSection(i,a,8),o.C=[];for(let t=o.nPublic+1;t<o.nVars;t++){const a=await readG1(i,c,e);o.C[t]=a}await endReadSection(i),await startReadUniqueSection(i,a,9),o.hExps=[];for(let t=0;t<o.domainSize;t++){const t=await readG1(i,c,e);o.hExps.push(t)}return await endReadSection(i),await i.close(),o;async function u(){const t=await readBigInt(i,o.n8r);return n.mul(t,l)}}async function readContribution$1(t,e,i){const a={delta:{}};a.deltaAfter=await readG1(t,e,i),a.delta.g1_s=await readG1(t,e,i),a.delta.g1_sx=await readG1(t,e,i),a.delta.g2_spx=await readG2(t,e,i),a.transcript=await t.read(64),a.type=await t.readULE32();const o=await t.readULE32(),n=t.pos;let r=0;for(;t.pos-n<o;){const e=await t.read(1);if(e[0]<=r)throw new Error("Parameters in the contribution must be sorted");if(r=e[0],1==e[0]){const e=await t.read(1),i=await t.read(e[0]);a.name=(new TextDecoder).decode(i)}else if(2==e[0]){const e=await t.read(1);a.numIterationsExp=e[0]}else{if(3!=e[0])throw new Error("Parameter not recognized");{const e=await t.read(1);a.beaconHash=await t.read(e[0])}}}if(t.pos!=n+o)throw new Error("Parametes do not match");return a}async function readMPCParams(t,e,i){await startReadUniqueSection(t,i,10);const a={contributions:[]};a.csHash=await t.read(64);const o=await t.readULE32();for(let i=0;i<o;i++){const i=await readContribution$1(t,e);a.contributions.push(i)}return await endReadSection(t),a}async function writeContribution$1(t,e,i){await writeG1(t,e,i.deltaAfter),await writeG1(t,e,i.delta.g1_s),await writeG1(t,e,i.delta.g1_sx),await writeG2(t,e,i.delta.g2_spx),await t.write(i.transcript),await t.writeULE32(i.type||0);const a=[];if(i.name){a.push(1);const t=new TextEncoder("utf-8").encode(i.name.substring(0,64));a.push(t.byteLength);for(let e=0;e<t.byteLength;e++)a.push(t[e])}if(1==i.type){a.push(2),a.push(i.numIterationsExp),a.push(3),a.push(i.beaconHash.byteLength);for(let t=0;t<i.beaconHash.byteLength;t++)a.push(i.beaconHash[t])}if(a.length>0){const e=new Uint8Array(a);await t.writeULE32(e.byteLength),await t.write(e)}else await t.writeULE32(0)}async function writeMPCParams(t,e,i){await startWriteSection(t,10),await t.write(i.csHash),await t.writeULE32(i.contributions.length);for(let a=0;a<i.contributions.length;a++)await writeContribution$1(t,e,i.contributions[a]);await endWriteSection(t)}function hashG1(t,e,i){const a=new Uint8Array(2*e.G1.F.n8);e.G1.toRprUncompressed(a,0,i),t.update(a)}function hashG2(t,e,i){const a=new Uint8Array(2*e.G2.F.n8);e.G2.toRprUncompressed(a,0,i),t.update(a)}function hashPubKey(t,e,i){hashG1(t,e,i.deltaAfter),hashG1(t,e,i.delta.g1_s),hashG1(t,e,i.delta.g1_sx),hashG2(t,e,i.delta.g2_spx),t.update(i.transcript)}async function write(t,e,i){await startWriteSection(t,1);const a=8*(Math.floor((Scalar.bitLength(i)-1)/64)+1);await t.writeULE32(a),await writeBigInt(t,i,a),await t.writeULE32(e.length),await endWriteSection(t),await startWriteSection(t,2);for(let i=0;i<e.length;i++)await writeBigInt(t,e[i],a);await endWriteSection(t)}async function writeBin(t,e,i){await startWriteSection(t,1);const a=8*(Math.floor((Scalar.bitLength(i)-1)/64)+1);if(await t.writeULE32(a),await writeBigInt(t,i,a),e.byteLength%a!=0)throw new Error("Invalid witness length");await t.writeULE32(e.byteLength/a),await endWriteSection(t),await startWriteSection(t,2),await t.write(e),await endWriteSection(t)}async function readHeader(t,e){await startReadUniqueSection(t,e,1);const i=await t.readULE32(),a=await readBigInt(t,i),o=await t.readULE32();return await endReadSection(t),{n8:i,q:a,nWitness:o}}async function read(t){const{fd:e,sections:i}=await readBinFile(t,"wtns",2),{n8:a,nWitness:o}=await readHeader(e,i);await startReadUniqueSection(e,i,2);const n=[];for(let t=0;t<o;t++){const t=await readBigInt(e,a);n.push(t)}return await endReadSection(e),await e.close(),n}Blake2b.prototype._realloc=function(t){wasm.memory.grow(Math.max(0,Math.ceil(Math.abs(t-this._memory.length)/65536))),this._memory=new Uint8Array(wasm.memory.buffer)},Blake2b.prototype.update=function(t){return assert(!1===this.finalized,"Hash instance finalized"),assert(t instanceof Uint8Array,"input must be Uint8Array or Buffer"),head+t.length>this._memory.length&&this._realloc(head+t.length),this._memory.set(t,head),wasm.blake2b_update(this.pointer,head,head+t.length),this},Blake2b.prototype.digest=function(t){if(assert(!1===this.finalized,"Hash instance finalized"),this.finalized=!0,freeList.push(this.pointer),wasm.blake2b_final(this.pointer),!t||"binary"===t)return this._memory.slice(this.pointer+128,this.pointer+128+this.digestLength);if("string"==typeof t)return b4a.toString(this._memory,t,this.pointer+128,this.pointer+128+this.digestLength);assert(t instanceof Uint8Array&&t.length>=this.digestLength,"input must be Uint8Array or Buffer");for(var e=0;e<this.digestLength;e++)t[e]=this._memory[this.pointer+128+e];return t},Blake2b.prototype.final=Blake2b.prototype.digest,Blake2b.WASM=wasm,Blake2b.SUPPORTED="undefined"!=typeof WebAssembly,Blake2b.ready=function(t){return t||(t=noop),wasmPromise?wasmPromise.then((()=>t()),t):t(new Error("WebAssembly not supported"))},Blake2b.prototype.ready=Blake2b.ready,Blake2b.prototype.getPartialHash=function(){return this._memory.slice(this.pointer,this.pointer+216)},Blake2b.prototype.setPartialHash=function(t){this._memory.set(t,this.pointer)};const{stringifyBigInts:stringifyBigInts$2}=utils;async function groth16Prove(t,e,i){const{fd:a,sections:o}=await readBinFile(e,"wtns",2),n=await readHeader(a,o),{fd:r,sections:s}=await readBinFile(t,"zkey",2),l=await readHeader$1(r,s);if("groth16"!=l.protocol)throw new Error("zkey file is not groth16");if(!Scalar.eq(l.r,n.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(n.nWitness!=l.nVars)throw new Error(`Invalid witness length. Circuit: ${l.nVars}, witness: ${n.nWitness}`);const c=l.curve,d=c.Fr,u=c.G1,g=c.G2,f=log2(l.domainSize);i&&i.debug("Reading Wtns");const h=await readSection(a,o,2);i&&i.debug("Reading Coeffs");const _=await readSection(r,s,4);i&&i.debug("Building ABC");const[p,m,b]=await buildABC1(c,l,h,_,i),L=f==d.s?c.Fr.shift:c.Fr.w[f+1],w=await d.ifft(p,"","",i,"IFFT_A"),y=await d.batchApplyKey(w,d.e(1),L),A=await d.fft(y,"","",i,"FFT_A"),I=await d.ifft(m,"","",i,"IFFT_B"),C=await d.batchApplyKey(I,d.e(1),L),B=await d.fft(C,"","",i,"FFT_B"),E=await d.ifft(b,"","",i,"IFFT_C"),F=await d.batchApplyKey(E,d.e(1),L),S=await d.fft(F,"","",i,"FFT_C");i&&i.debug("Join ABC");const v=await joinABC(c,l,A,B,S,i);let x={};i&&i.debug("Reading A Points");const $=await readSection(r,s,5);x.pi_a=await c.G1.multiExpAffine($,h,i,"multiexp A"),i&&i.debug("Reading B1 Points");const P=await readSection(r,s,6);let G=await c.G1.multiExpAffine(P,h,i,"multiexp B1");i&&i.debug("Reading B2 Points");const R=await readSection(r,s,7);x.pi_b=await c.G2.multiExpAffine(R,h,i,"multiexp B2"),i&&i.debug("Reading C Points");const O=await readSection(r,s,8);x.pi_c=await c.G1.multiExpAffine(O,h.slice((l.nPublic+1)*c.Fr.n8),i,"multiexp C"),i&&i.debug("Reading H Points");const U=await readSection(r,s,9),q=await c.G1.multiExpAffine(U,v,i,"multiexp H"),z=c.Fr.random(),M=c.Fr.random();x.pi_a=u.add(x.pi_a,l.vk_alpha_1),x.pi_a=u.add(x.pi_a,u.timesFr(l.vk_delta_1,z)),x.pi_b=g.add(x.pi_b,l.vk_beta_2),x.pi_b=g.add(x.pi_b,g.timesFr(l.vk_delta_2,M)),G=u.add(G,l.vk_beta_1),G=u.add(G,u.timesFr(l.vk_delta_1,M)),x.pi_c=u.add(x.pi_c,q),x.pi_c=u.add(x.pi_c,u.timesFr(x.pi_a,M)),x.pi_c=u.add(x.pi_c,u.timesFr(G,z)),x.pi_c=u.add(x.pi_c,u.timesFr(l.vk_delta_1,d.neg(d.mul(z,M))));let T=[];for(let t=1;t<=l.nPublic;t++){const e=h.slice(t*d.n8,t*d.n8+d.n8);T.push(Scalar.fromRprLE(e))}return x.pi_a=u.toObject(u.toAffine(x.pi_a)),x.pi_b=g.toObject(g.toAffine(x.pi_b)),x.pi_c=u.toObject(u.toAffine(x.pi_c)),x.protocol="groth16",x.curve=c.name,await r.close(),await a.close(),x=stringifyBigInts$2(x),T=stringifyBigInts$2(T),{proof:x,publicSignals:T}}async function buildABC1(t,e,i,a,o){const n=t.Fr.n8,r=12+e.n8r,s=(a.byteLength-4)/r,l=new BigBuffer(e.domainSize*n),c=new BigBuffer(e.domainSize*n),d=new BigBuffer(e.domainSize*n),u=[l,c];for(let e=0;e<s;e++){o&&e%1e6==0&&o.debug(`QAP AB: ${e}/${s}`);const l=a.slice(4+e*r,4+e*r+r),c=new DataView(l.buffer),d=c.getUint32(0,!0),g=c.getUint32(4,!0),f=c.getUint32(8,!0),h=l.slice(12,12+n);u[d].set(t.Fr.add(u[d].slice(g*n,g*n+n),t.Fr.mul(h,i.slice(f*n,f*n+n))),g*n)}for(let i=0;i<e.domainSize;i++)o&&i%1e6==0&&o.debug(`QAP C: ${i}/${e.domainSize}`),d.set(t.Fr.mul(l.slice(i*n,i*n+n),c.slice(i*n,i*n+n)),i*n);return[l,c,d]}async function joinABC(t,e,i,a,o,n){const r=1<<22,s=t.Fr.n8,l=Math.floor(i.byteLength/t.Fr.n8),c=[];for(let e=0;e<l;e+=r){n&&n.debug(`JoinABC: ${e}/${l}`);const d=Math.min(l-e,r),u=[],g=i.slice(e*s,(e+d)*s),f=a.slice(e*s,(e+d)*s),h=o.slice(e*s,(e+d)*s);u.push({cmd:"ALLOCSET",var:0,buff:g}),u.push({cmd:"ALLOCSET",var:1,buff:f}),u.push({cmd:"ALLOCSET",var:2,buff:h}),u.push({cmd:"ALLOC",var:3,len:d*s}),u.push({cmd:"CALL",fnName:"qap_joinABC",params:[{var:0},{var:1},{var:2},{val:d},{var:3}]}),u.push({cmd:"CALL",fnName:"frm_batchFromMontgomery",params:[{var:3},{val:d},{var:3}]}),u.push({cmd:"GET",out:0,var:3,len:d*s}),c.push(t.tm.queueAction(u))}const d=await Promise.all(c);let u;u=i instanceof BigBuffer?new BigBuffer(i.byteLength):new Uint8Array(i.byteLength);let g=0;for(let t=0;t<d.length;t++)u.set(d[t][0],g),g+=d[t][0].byteLength;return u}function flatArray(t){var e=[];return function t(e,i){if(Array.isArray(i))for(let a=0;a<i.length;a++)t(e,i[a]);else e.push(i)}(e,t),e}function fnvHash(t){const e=BigInt(2)**BigInt(64);let i=BigInt("0xCBF29CE484222325");for(var a=0;a<t.length;a++)i^=BigInt(t[a].charCodeAt()),i*=BigInt(1099511628211),i%=e;let o=i.toString(16),n=16-o.length;return o="0".repeat(n).concat(o),o}function toArray32(t,e){const i=[];let a=BigInt(t);const o=BigInt(4294967296);for(;a;)i.unshift(Number(a%o)),a/=o;if(e)for(var n=e-i.length;n>0;)i.unshift(0),n--;return i}async function builder(t,e){e=e||{};let i,a=32767,o=!1;for(;!o;)try{i=new WebAssembly.Memory({initial:a}),o=!0}catch(t){if(1===a)throw t;console.warn("Could not allocate "+1024*a*64+" bytes. This may cause severe instability. Trying with "+1024*a*64/2+" bytes"),a=Math.floor(a/2)}const n=await WebAssembly.compile(t);let r,s="",l="",c=1,d=0;const u=await WebAssembly.instantiate(n,{env:{memory:i},runtime:{exceptionHandler:function(t){let e;throw e=1==t?"Signal not found. ":2==t?"Too many signals set. ":3==t?"Signal already set. ":4==t?"Assert Failed. ":5==t?"Not enough memory. ":6==t?"Input signal array access exceeds the size. ":"Unknown error. ",console.error("ERROR: ",t,s),new Error(e+s)},printErrorMessage:function(){s+=f()+"\n"},writeBufferMessage:function(){const t=f();"\n"===t?(console.log(l),l=""):(""!==l&&(l+=" "),l+=t)},showSharedRWMemory:function(){const t=u.exports.getFieldNumLen32(),e=new Uint32Array(t);for(let i=0;i<t;i++)e[t-1-i]=u.exports.readSharedRWMemory(i);if(d>=7){""!==l&&(l+=" ");const t=Scalar.fromArray(e,4294967296).toString();l+=t}else console.log(Scalar.fromArray(e,4294967296))},error:function(t,i,a,o,n,s){let l;throw l=7==t?h(i)+" "+r.getFr(o).toString()+" != "+r.getFr(n).toString()+" "+h(s):9==t?h(i)+" "+r.getFr(o).toString()+" "+h(n):5==t&&e.sym?h(i)+" "+e.sym.labelIdx2Name[n]:h(i)+" "+a+" "+o+" "+n+" "+s,console.log("ERROR: ",t,l),new Error(l)},log:function(t){console.log(r.getFr(t).toString())},logGetSignal:function(t,i){e.logGetSignal&&e.logGetSignal(t,r.getFr(i))},logSetSignal:function(t,i){e.logSetSignal&&e.logSetSignal(t,r.getFr(i))},logStartComponent:function(t){e.logStartComponent&&e.logStartComponent(t)},logFinishComponent:function(t){e.logFinishComponent&&e.logFinishComponent(t)}}});"function"==typeof u.exports.getVersion&&(c=u.exports.getVersion()),"function"==typeof u.exports.getMinorVersion&&u.exports.getMinorVersion(),"function"==typeof u.exports.getPatchVersion&&(d=u.exports.getPatchVersion());const g=e&&(e.sanityCheck||e.logGetSignal||e.logSetSignal||e.logStartComponent||e.logFinishComponent);return r=2===c?new WitnessCalculatorCircom2(u,g):new WitnessCalculatorCircom1(i,u,g),r;function f(){for(var t="",e=u.exports.getMessageChar();0!=e;)t+=String.fromCharCode(e),e=u.exports.getMessageChar();return t}function h(t){const e=new Uint8Array(i.buffer),a=[];for(let i=0;e[t+i]>0;i++)a.push(e[t+i]);return String.fromCharCode.apply(null,a)}}class WitnessCalculatorCircom1{constructor(t,e,i){this.memory=t,this.i32=new Uint32Array(t.buffer),this.instance=e,this.n32=(this.instance.exports.getFrLen()>>2)-2;const a=this.instance.exports.getPRawPrime(),o=new Array(this.n32);for(let t=0;t<this.n32;t++)o[this.n32-1-t]=this.i32[(a>>2)+t];this.prime=Scalar.fromArray(o,4294967296),this.Fr=new F1Field(this.prime),this.mask32=Scalar.fromString("FFFFFFFF",16),this.NVars=this.instance.exports.getNVars(),this.n64=Math.floor((this.Fr.bitLength-1)/64)+1,this.R=this.Fr.e(Scalar.shiftLeft(1,64*this.n64)),this.RInv=this.Fr.inv(this.R),this.sanityCheck=i}circom_version(){return 1}async _doCalculateWitness(t,e){this.instance.exports.init(this.sanityCheck||e?1:0);const i=this.allocInt(),a=this.allocFr();Object.keys(t).forEach((e=>{const o=fnvHash(e),n=parseInt(o.slice(0,8),16),r=parseInt(o.slice(8,16),16);try{this.instance.exports.getSignalOffset32(i,0,n,r)}catch(t){throw new Error(`Signal ${e} is not an input of the circuit.`)}const s=this.getInt(i),l=flatArray(t[e]);for(let t=0;t<l.length;t++)this.setFr(a,l[t]),this.instance.exports.setSignal(0,0,s+t,a)}))}async calculateWitness(t,e){const i=this,a=i.i32[0],o=[];await i._doCalculateWitness(t,e);for(let t=0;t<i.NVars;t++){const e=i.instance.exports.getPWitness(t);o.push(i.getFr(e))}return i.i32[0]=a,o}async calculateBinWitness(t,e){const i=this,a=i.i32[0];await i._doCalculateWitness(t,e);const o=i.instance.exports.getWitnessBuffer();i.i32[0]=a;const n=i.memory.buffer.slice(o,o+i.NVars*i.n64*8);return new Uint8Array(n)}allocInt(){const t=this.i32[0];return this.i32[0]=t+8,t}allocFr(){const t=this.i32[0];return this.i32[0]=t+4*this.n32+8,t}getInt(t){return this.i32[t>>2]}setInt(t,e){this.i32[t>>2]=e}getFr(t){const e=this,i=t>>2;if(2147483648&e.i32[i+1]){const t=new Array(e.n32);for(let a=0;a<e.n32;a++)t[e.n32-1-a]=e.i32[i+2+a];const o=e.Fr.e(Scalar.fromArray(t,4294967296));return 1073741824&e.i32[i+1]?(a=o,e.Fr.mul(e.RInv,a)):o}return 2147483648&e.i32[i]?e.Fr.e(e.i32[i]-4294967296):e.Fr.e(e.i32[i]);var a}setFr(t,e){const i=this;e=i.Fr.e(e);const a=i.Fr.neg(i.Fr.e("80000000",16)),o=i.Fr.e("7FFFFFFF",16);if(i.Fr.geq(e,a)&&i.Fr.leq(e,o)){let o;return i.Fr.geq(e,i.Fr.zero)?o=Scalar.toNumber(e):(o=Scalar.toNumber(i.Fr.sub(e,a)),o-=2147483648,o=4294967296+o),i.i32[t>>2]=o,void(i.i32[1+(t>>2)]=0)}i.i32[t>>2]=0,i.i32[1+(t>>2)]=2147483648;const n=Scalar.toArray(e,4294967296);for(let e=0;e<i.n32;e++){const a=n.length-1-e;i.i32[2+(t>>2)+e]=a>=0?n[a]:0}}}class WitnessCalculatorCircom2{constructor(t,e){this.instance=t,this.version=this.instance.exports.getVersion(),this.n32=this.instance.exports.getFieldNumLen32(),this.instance.exports.getRawPrime();const i=new Array(this.n32);for(let t=0;t<this.n32;t++)i[this.n32-1-t]=this.instance.exports.readSharedRWMemory(t);this.prime=Scalar.fromArray(i,4294967296),this.witnessSize=this.instance.exports.getWitnessSize(),this.sanityCheck=e}circom_version(){return this.instance.exports.getVersion()}async _doCalculateWitness(t,e){this.instance.exports.init(this.sanityCheck||e?1:0);const i=Object.keys(t);var a=0;if(i.forEach((e=>{const i=fnvHash(e),o=parseInt(i.slice(0,8),16),n=parseInt(i.slice(8,16),16),r=flatArray(t[e]);for(let t=0;t<r.length;t++){const e=toArray32(r[t],this.n32);for(let t=0;t<this.n32;t++)this.instance.exports.writeSharedRWMemory(t,e[this.n32-1-t]);try{this.instance.exports.setInputSignal(o,n,t),a++}catch(t){throw new Error(t)}}})),a<this.instance.exports.getInputSize())throw new Error(`Not all inputs have been set. Only ${a} out of ${this.instance.exports.getInputSize()}`)}async calculateWitness(t,e){const i=[];await this._doCalculateWitness(t,e);for(let t=0;t<this.witnessSize;t++){this.instance.exports.getWitness(t);const e=new Uint32Array(this.n32);for(let t=0;t<this.n32;t++)e[this.n32-1-t]=this.instance.exports.readSharedRWMemory(t);i.push(Scalar.fromArray(e,4294967296))}return i}async calculateWTNSBin(t,e){const i=new Uint32Array(this.witnessSize*this.n32+this.n32+11),a=new Uint8Array(i.buffer);await this._doCalculateWitness(t,e),a[0]="w".charCodeAt(0),a[1]="t".charCodeAt(0),a[2]="n".charCodeAt(0),a[3]="s".charCodeAt(0),i[1]=2,i[2]=2,i[3]=1;const o=4*this.n32,n=(8+o).toString(16);i[4]=parseInt(n.slice(0,8),16),i[5]=parseInt(n.slice(8,16),16),i[6]=o,this.instance.exports.getRawPrime();var r=7;for(let t=0;t<this.n32;t++)i[r+t]=this.instance.exports.readSharedRWMemory(t);i[r+=this.n32]=this.witnessSize,i[++r]=2,r++;const s=(o*this.witnessSize).toString(16);i[r]=parseInt(s.slice(0,8),16),i[r+1]=parseInt(s.slice(8,16),16),r+=2;for(let t=0;t<this.witnessSize;t++){this.instance.exports.getWitness(t);for(let t=0;t<this.n32;t++)i[r+t]=this.instance.exports.readSharedRWMemory(t);r+=this.n32}return a}}const{unstringifyBigInts:unstringifyBigInts$7}=utils;async function wtnsCalculate(t,e,i,a){const o=unstringifyBigInts$7(t),n=await readExisting(e),r=await n.read(n.totalSize);await n.close();const s=await builder(r);if(1==s.circom_version()){const t=await s.calculateBinWitness(o),e=await createBinFile(i,"wtns",2,2);await writeBin(e,t,s.prime),await e.close()}else{const t=await createOverride(i),e=await s.calculateWTNSBin(o);await t.write(e),await t.close()}}const{unstringifyBigInts:unstringifyBigInts$6}=utils;async function groth16FullProve(t,e,i,a){const o=unstringifyBigInts$6(t),n={type:"mem"};return await wtnsCalculate(o,e,n),await groth16Prove(i,n,a)}const{unstringifyBigInts:unstringifyBigInts$5}=utils;async function groth16Verify(t,e,i,a){const o=unstringifyBigInts$5(t),n=unstringifyBigInts$5(i),r=unstringifyBigInts$5(e),s=await getCurveFromName(o.curve),l=s.G1.fromObject(o.IC[0]),c=new Uint8Array(2*s.G1.F.n8*r.length),d=new Uint8Array(s.Fr.n8*r.length);for(let t=0;t<r.length;t++){const e=s.G1.fromObject(o.IC[t+1]);c.set(e,t*s.G1.F.n8*2),Scalar.toRprLE(d,s.Fr.n8*t,r[t],s.Fr.n8)}let u=await s.G1.multiExpAffine(c,d);u=s.G1.add(u,l);const g=s.G1.fromObject(n.pi_a),f=s.G2.fromObject(n.pi_b),h=s.G1.fromObject(n.pi_c),_=s.G2.fromObject(o.vk_gamma_2),p=s.G2.fromObject(o.vk_delta_2),m=s.G1.fromObject(o.vk_alpha_1),b=s.G2.fromObject(o.vk_beta_2);return await s.pairingEq(s.G1.neg(g),f,u,_,h,p,m,b)?(a&&a.info("OK!"),!0):(a&&a.error("Invalid proof"),!1)}const{unstringifyBigInts:unstringifyBigInts$4}=utils;function p256$1(t){let e=t.toString(16);for(;e.length<64;)e="0"+e;return e=`"0x${e}"`,e}async function groth16ExportSolidityCallData(t,e){const i=unstringifyBigInts$4(t),a=unstringifyBigInts$4(e);let o,n="";for(let t=0;t<a.length;t++)""!=n&&(n+=","),n+=p256$1(a[t]);return o=`[${p256$1(i.pi_a[0])}, ${p256$1(i.pi_a[1])}],[[${p256$1(i.pi_b[0][1])}, ${p256$1(i.pi_b[0][0])}],[${p256$1(i.pi_b[1][1])}, ${p256$1(i.pi_b[1][0])}]],[${p256$1(i.pi_c[0])}, ${p256$1(i.pi_c[1])}],[${n}]`,o}var groth16=Object.freeze({__proto__:null,fullProve:groth16FullProve,prove:groth16Prove,verify:groth16Verify,exportSolidityCallData:groth16ExportSolidityCallData});function hashToG2(t,e){const i=new DataView(e.buffer,e.byteOffset,e.byteLength),a=[];for(let t=0;t<8;t++)a[t]=i.getUint32(4*t);const o=new ChaCha(a);return t.G2.fromRng(o)}function getG2sp(t,e,i,a,o){const n=blake2bWasm.exports(64),r=new Uint8Array([e]);n.update(r),n.update(i);const s=t.G1.toUncompressed(a);n.update(s);const l=t.G1.toUncompressed(o);n.update(l);return hashToG2(t,n.digest())}function calculatePubKey(t,e,i,a,o){return t.g1_s=e.G1.toAffine(e.G1.fromRng(o)),t.g1_sx=e.G1.toAffine(e.G1.timesFr(t.g1_s,t.prvKey)),t.g2_sp=e.G2.toAffine(getG2sp(e,i,a,t.g1_s,t.g1_sx)),t.g2_spx=e.G2.toAffine(e.G2.timesFr(t.g2_sp,t.prvKey)),t}function createPTauKey(t,e,i){const a={tau:{},alpha:{},beta:{}};return a.tau.prvKey=t.Fr.fromRng(i),a.alpha.prvKey=t.Fr.fromRng(i),a.beta.prvKey=t.Fr.fromRng(i),calculatePubKey(a.tau,t,0,e,i),calculatePubKey(a.alpha,t,1,e,i),calculatePubKey(a.beta,t,2,e,i),a}async function writePTauHeader(t,e,i,a){a||(a=i),await t.writeULE32(1);const o=t.pos;await t.writeULE64(0),await t.writeULE32(8*e.F1.n64);const n=new Uint8Array(e.F1.n8);Scalar.toRprLE(n,0,e.q,e.F1.n8),await t.write(n),await t.writeULE32(i),await t.writeULE32(a);const r=t.pos-o-8,s=t.pos;await t.writeULE64(r,o),t.pos=s}async function readPTauHeader(t,e){if(!e[1])throw new Error(t.fileName+": File has no  header");if(e[1].length>1)throw new Error(t.fileName+": File has more than one header");t.pos=e[1][0].p;const i=await t.readULE32(),a=await t.read(i),o=Scalar.fromRprLE(a),n=await getCurveFromQ(o);if(8*n.F1.n64!=i)throw new Error(t.fileName+": Invalid size");const r=await t.readULE32(),s=await t.readULE32();if(t.pos-e[1][0].p!=e[1][0].size)throw new Error("Invalid PTau header size");return{curve:n,power:r,ceremonyPower:s}}async function readPtauPubKey(t,e,i){return fromPtauPubKeyRpr(await t.read(2*e.F1.n8*6+2*e.F2.n8*3),0,e,i)}function fromPtauPubKeyRpr(t,e,i,a){const o={tau:{},alpha:{},beta:{}};return o.tau.g1_s=n(),o.tau.g1_sx=n(),o.alpha.g1_s=n(),o.alpha.g1_sx=n(),o.beta.g1_s=n(),o.beta.g1_sx=n(),o.tau.g2_spx=r(),o.alpha.g2_spx=r(),o.beta.g2_spx=r(),o;function n(){let o;return o=a?i.G1.fromRprLEM(t,e):i.G1.fromRprUncompressed(t,e),e+=2*i.G1.F.n8,o}function r(){let o;return o=a?i.G2.fromRprLEM(t,e):i.G2.fromRprUncompressed(t,e),e+=2*i.G2.F.n8,o}}function toPtauPubKeyRpr(t,e,i,a,o){async function n(a){o?i.G1.toRprLEM(t,e,a):i.G1.toRprUncompressed(t,e,a),e+=2*i.F1.n8}async function r(a){o?i.G2.toRprLEM(t,e,a):i.G2.toRprUncompressed(t,e,a),e+=2*i.F2.n8}return n(a.tau.g1_s),n(a.tau.g1_sx),n(a.alpha.g1_s),n(a.alpha.g1_sx),n(a.beta.g1_s),n(a.beta.g1_sx),r(a.tau.g2_spx),r(a.alpha.g2_spx),r(a.beta.g2_spx),t}async function writePtauPubKey(t,e,i,a){const o=new Uint8Array(2*e.F1.n8*6+2*e.F2.n8*3);toPtauPubKeyRpr(o,0,e,i,a),await t.write(o)}async function readContribution(t,e){const i={};i.tauG1=await l(),i.tauG2=await c(),i.alphaG1=await l(),i.betaG1=await l(),i.betaG2=await c(),i.key=await readPtauPubKey(t,e,!0),i.partialHash=await t.read(216),i.nextChallenge=await t.read(64),i.type=await t.readULE32();const a=new Uint8Array(2*e.G1.F.n8*6+2*e.G2.F.n8*3);toPtauPubKeyRpr(a,0,e,i.key,!1);const o=blake2bWasm.exports(64);o.setPartialHash(i.partialHash),o.update(a),i.responseHash=o.digest();const n=await t.readULE32(),r=t.pos;let s=0;for(;t.pos-r<n;){const t=await d(1);if(t[0]<=s)throw new Error("Parameters in the contribution must be sorted");if(s=t[0],1==t[0]){const t=await d(1),e=await d(t[0]);i.name=(new TextDecoder).decode(e)}else if(2==t[0]){const t=await d(1);i.numIterationsExp=t[0]}else{if(3!=t[0])throw new Error("Parameter not recognized");{const t=await d(1);i.beaconHash=await d(t[0])}}}if(t.pos!=r+n)throw new Error("Parametes do not match");return i;async function l(){const i=await t.read(2*e.G1.F.n8);return e.G1.fromRprLEM(i)}async function c(){const i=await t.read(2*e.G2.F.n8);return e.G2.fromRprLEM(i)}async function d(e){const i=await t.read(e);return new Uint8Array(i)}}async function readContributions(t,e,i){if(!i[7])throw new Error(t.fileName+": File has no  contributions");if(i[7][0].length>1)throw new Error(t.fileName+": File has more than one contributions section");t.pos=i[7][0].p;const a=await t.readULE32(),o=[];for(let i=0;i<a;i++){const a=await readContribution(t,e);a.id=i+1,o.push(a)}if(t.pos-i[7][0].p!=i[7][0].size)throw new Error("Invalid contribution section size");return o}async function writeContribution(t,e,i){const a=new Uint8Array(2*e.F1.n8),o=new Uint8Array(2*e.F2.n8);await r(i.tauG1),await s(i.tauG2),await r(i.alphaG1),await r(i.betaG1),await s(i.betaG2),await writePtauPubKey(t,e,i.key,!0),await t.write(i.partialHash),await t.write(i.nextChallenge),await t.writeULE32(i.type||0);const n=[];if(i.name){n.push(1);const t=new TextEncoder("utf-8").encode(i.name.substring(0,64));n.push(t.byteLength);for(let e=0;e<t.byteLength;e++)n.push(t[e])}if(1==i.type){n.push(2),n.push(i.numIterationsExp),n.push(3),n.push(i.beaconHash.byteLength);for(let t=0;t<i.beaconHash.byteLength;t++)n.push(i.beaconHash[t])}if(n.length>0){const e=new Uint8Array(n);await t.writeULE32(e.byteLength),await t.write(e)}else await t.writeULE32(0);async function r(i){e.G1.toRprLEM(a,0,i),await t.write(a)}async function s(i){e.G2.toRprLEM(o,0,i),await t.write(o)}}async function writeContributions(t,e,i){await t.writeULE32(7);const a=t.pos;await t.writeULE64(0),await t.writeULE32(i.length);for(let a=0;a<i.length;a++)await writeContribution(t,e,i[a]);const o=t.pos-a-8,n=t.pos;await t.writeULE64(o,a),t.pos=n}function calculateFirstChallengeHash(t,e,i){i&&i.debug("Calculating First Challenge Hash");const a=new blake2bWasm.exports(64),o=new Uint8Array(2*t.G1.F.n8),n=new Uint8Array(2*t.G2.F.n8);let r;return t.G1.toRprUncompressed(o,0,t.G1.g),t.G2.toRprUncompressed(n,0,t.G2.g),a.update(blake2bWasm.exports(64).digest()),r=2**e*2-1,i&&i.debug("Calculate Initial Hash: tauG1"),s(o,r),r=2**e,i&&i.debug("Calculate Initial Hash: tauG2"),s(n,r),i&&i.debug("Calculate Initial Hash: alphaTauG1"),s(o,r),i&&i.debug("Calculate Initial Hash: betaTauG1"),s(o,r),a.update(n),a.digest();function s(t,e){const o=341e3,n=Math.floor(e/o),r=e%o,s=new Uint8Array(o*t.byteLength);for(let e=0;e<o;e++)s.set(t,e*t.byteLength);for(let t=0;t<n;t++)a.update(s),i&&i.debug("Initial hash: "+t*o);for(let e=0;e<r;e++)a.update(t)}}function keyFromBeacon(t,e,i,a){return createPTauKey(t,e,rngFromBeaconParams(i,a))}async function newAccumulator(t,e,i,a){await blake2bWasm.exports.ready();const o=await createBinFile(i,"ptau",1,7);await writePTauHeader(o,t,e,0);const n=t.G1.oneAffine,r=t.G2.oneAffine;await startWriteSection(o,2);const s=2**e*2-1;for(let t=0;t<s;t++)await o.write(n),a&&t%1e5==0&&t&&a.log("tauG1: "+t);await endWriteSection(o),await startWriteSection(o,3);const l=2**e;for(let t=0;t<l;t++)await o.write(r),a&&t%1e5==0&&t&&a.log("tauG2: "+t);await endWriteSection(o),await startWriteSection(o,4);const c=2**e;for(let t=0;t<c;t++)await o.write(n),a&&t%1e5==0&&t&&a.log("alphaTauG1: "+t);await endWriteSection(o),await startWriteSection(o,5);const d=2**e;for(let t=0;t<d;t++)await o.write(n),a&&t%1e5==0&&t&&a.log("betaTauG1: "+t);await endWriteSection(o),await startWriteSection(o,6),await o.write(r),await endWriteSection(o),await startWriteSection(o,7),await o.writeULE32(0),await endWriteSection(o),await o.close();const u=calculateFirstChallengeHash(t,e,a);return a&&a.debug(formatHash(blake2bWasm.exports(64).digest(),"Blank Contribution Hash:")),a&&a.info(formatHash(u,"First Contribution Hash:")),u}async function exportChallenge(t,e,i){await blake2bWasm.exports.ready();const{fd:a,sections:o}=await readBinFile(t,"ptau",1),{curve:n,power:r}=await readPTauHeader(a,o),s=await readContributions(a,n,o);let l,c;0==s.length?(l=blake2bWasm.exports(64).digest(),c=calculateFirstChallengeHash(n,r)):(l=s[s.length-1].responseHash,c=s[s.length-1].nextChallenge),i&&i.info(formatHash(l,"Last Response Hash: ")),i&&i.info(formatHash(c,"New Challenge Hash: "));const d=await createOverride(e),u=blake2bWasm.exports(64);await d.write(l),u.update(l),await f(2,"G1",2**r*2-1,"tauG1"),await f(3,"G2",2**r,"tauG2"),await f(4,"G1",2**r,"alphaTauG1"),await f(5,"G1",2**r,"betaTauG1"),await f(6,"G2",1,"betaG2"),await a.close(),await d.close();const g=u.digest();if(!hashIsEqual(c,g))throw i&&i.info(formatHash(g,"Calc Curret Challenge Hash: ")),i&&i.error("PTau file is corrupted. Calculated new challenge hash does not match with the eclared one"),new Error("PTau file is corrupted. Calculated new challenge hash does not match with the eclared one");return c;async function f(t,e,r,s){const l=n[e],c=2*l.F.n8,g=Math.floor((1<<24)/c);await startReadUniqueSection(a,o,t);for(let t=0;t<r;t+=g){i&&i.debug(`Exporting ${s}: ${t}/${r}`);const e=Math.min(r-t,g);let o;o=await a.read(e*c),o=await l.batchLEMtoU(o),await d.write(o),u.update(o)}await endReadSection(a)}}async function importResponse(t,e,i,a,o,n){await blake2bWasm.exports.ready();const r=new Uint8Array(64);for(let t=0;t<64;t++)r[t]=255;const{fd:s,sections:l}=await readBinFile(t,"ptau",1),{curve:c,power:d}=await readPTauHeader(s,l),u=await readContributions(s,c,l),g={};a&&(g.name=a);const f=2*c.F1.n8,h=c.F1.n8,_=2*c.F2.n8,p=c.F2.n8,m=await readExisting(e);if(m.totalSize!=64+(2**d*2-1)*h+2**d*p+2**d*h+2**d*h+p+6*f+3*_)throw new Error("Size of the contribution is invalid");let b;b=u.length>0?u[u.length-1].nextChallenge:calculateFirstChallengeHash(c,d,n);const L=await createBinFile(i,"ptau",1,o?7:2);await writePTauHeader(L,c,d);const w=await m.read(64);if(hashIsEqual(r,b)&&(b=w,u[u.length-1].nextChallenge=b),!hashIsEqual(w,b))throw new Error("Wrong contribution. this contribution is not based on the previus hash");const y=new blake2bWasm.exports(64);y.update(w);const A=[];let I;I=await E(m,L,"G1",2,2**d*2-1,[1],"tauG1"),g.tauG1=I[0],I=await E(m,L,"G2",3,2**d,[1],"tauG2"),g.tauG2=I[0],I=await E(m,L,"G1",4,2**d,[0],"alphaG1"),g.alphaG1=I[0],I=await E(m,L,"G1",5,2**d,[0],"betaG1"),g.betaG1=I[0],I=await E(m,L,"G2",6,1,[0],"betaG2"),g.betaG2=I[0],g.partialHash=y.getPartialHash();const C=await m.read(2*c.F1.n8*6+2*c.F2.n8*3);g.key=fromPtauPubKeyRpr(C,0,c,!1),y.update(new Uint8Array(C));const B=y.digest();if(n&&n.info(formatHash(B,"Contribution Response Hash imported: ")),o){const t=new blake2bWasm.exports(64);t.update(B),await F(t,L,"G1",2,2**d*2-1,"tauG1",n),await F(t,L,"G2",3,2**d,"tauG2",n),await F(t,L,"G1",4,2**d,"alphaTauG1",n),await F(t,L,"G1",5,2**d,"betaTauG1",n),await F(t,L,"G2",6,1,"betaG2",n),g.nextChallenge=t.digest(),n&&n.info(formatHash(g.nextChallenge,"Next Challenge Hash: "))}else g.nextChallenge=r;return u.push(g),await writeContributions(L,c,u),await m.close(),await L.close(),await s.close(),g.nextChallenge;async function E(t,e,i,a,r,s,l){return o?await async function(t,e,i,a,o,r,s){const l=c[i],d=l.F.n8,u=2*l.F.n8,g=[];await startWriteSection(e,a);const f=Math.floor((1<<24)/u);A[a]=e.pos;for(let i=0;i<o;i+=f){n&&n.debug(`Importing ${s}: ${i}/${o}`);const a=Math.min(o-i,f),c=await t.read(a*d);y.update(c);const h=await l.batchCtoLEM(c);await e.write(h);for(let t=0;t<r.length;t++){const e=r[t];if(e>=i&&e<i+a){const t=l.fromRprLEM(h,(e-i)*u);g.push(t)}}}return await endWriteSection(e),g}(t,e,i,a,r,s,l):await async function(t,e,i,a,o,r,s){const l=c[i],d=l.F.n8,u=[],g=Math.floor((1<<24)/d);for(let e=0;e<o;e+=g){n&&n.debug(`Importing ${s}: ${e}/${o}`);const i=Math.min(o-e,g),a=await t.read(i*d);y.update(a);for(let t=0;t<r.length;t++){const o=r[t];if(o>=e&&o<e+i){const t=l.fromRprCompressed(a,(o-e)*d);u.push(t)}}}return u}(t,0,i,0,r,s,l)}async function F(t,e,i,a,o,n,r){const s=c[i],l=2*s.F.n8,d=Math.floor((1<<24)/l),u=e.pos;e.pos=A[a];for(let i=0;i<o;i+=d){r&&r.debug(`Hashing ${n}: ${i}/${o}`);const a=Math.min(o-i,d),c=await e.read(a*l),u=await s.batchLEMtoU(c);t.update(u)}e.pos=u}}const sameRatio$1=sameRatio$2;async function verifyContribution(t,e,i,a){let o;if(1==e.type){const o=keyFromBeacon(t,i.nextChallenge,e.beaconHash,e.numIterationsExp);if(!t.G1.eq(e.key.tau.g1_s,o.tau.g1_s))return a&&a.error(`BEACON key (tauG1_s) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G1.eq(e.key.tau.g1_sx,o.tau.g1_sx))return a&&a.error(`BEACON key (tauG1_sx) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G2.eq(e.key.tau.g2_spx,o.tau.g2_spx))return a&&a.error(`BEACON key (tauG2_spx) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G1.eq(e.key.alpha.g1_s,o.alpha.g1_s))return a&&a.error(`BEACON key (alphaG1_s) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G1.eq(e.key.alpha.g1_sx,o.alpha.g1_sx))return a&&a.error(`BEACON key (alphaG1_sx) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G2.eq(e.key.alpha.g2_spx,o.alpha.g2_spx))return a&&a.error(`BEACON key (alphaG2_spx) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G1.eq(e.key.beta.g1_s,o.beta.g1_s))return a&&a.error(`BEACON key (betaG1_s) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G1.eq(e.key.beta.g1_sx,o.beta.g1_sx))return a&&a.error(`BEACON key (betaG1_sx) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1;if(!t.G2.eq(e.key.beta.g2_spx,o.beta.g2_spx))return a&&a.error(`BEACON key (betaG2_spx) is not generated correctly in challenge #${e.id}  ${e.name||""}`),!1}return e.key.tau.g2_sp=t.G2.toAffine(getG2sp(t,0,i.nextChallenge,e.key.tau.g1_s,e.key.tau.g1_sx)),e.key.alpha.g2_sp=t.G2.toAffine(getG2sp(t,1,i.nextChallenge,e.key.alpha.g1_s,e.key.alpha.g1_sx)),e.key.beta.g2_sp=t.G2.toAffine(getG2sp(t,2,i.nextChallenge,e.key.beta.g1_s,e.key.beta.g1_sx)),o=await sameRatio$1(t,e.key.tau.g1_s,e.key.tau.g1_sx,e.key.tau.g2_sp,e.key.tau.g2_spx),!0!==o?(a&&a.error("INVALID key (tau) in challenge #"+e.id),!1):(o=await sameRatio$1(t,e.key.alpha.g1_s,e.key.alpha.g1_sx,e.key.alpha.g2_sp,e.key.alpha.g2_spx),!0!==o?(a&&a.error("INVALID key (alpha) in challenge #"+e.id),!1):(o=await sameRatio$1(t,e.key.beta.g1_s,e.key.beta.g1_sx,e.key.beta.g2_sp,e.key.beta.g2_spx),!0!==o?(a&&a.error("INVALID key (beta) in challenge #"+e.id),!1):(o=await sameRatio$1(t,i.tauG1,e.tauG1,e.key.tau.g2_sp,e.key.tau.g2_spx),!0!==o?(a&&a.error("INVALID tau*G1. challenge #"+e.id+" It does not follow the previous contribution"),!1):(o=await sameRatio$1(t,e.key.tau.g1_s,e.key.tau.g1_sx,i.tauG2,e.tauG2),!0!==o?(a&&a.error("INVALID tau*G2. challenge #"+e.id+" It does not follow the previous contribution"),!1):(o=await sameRatio$1(t,i.alphaG1,e.alphaG1,e.key.alpha.g2_sp,e.key.alpha.g2_spx),!0!==o?(a&&a.error("INVALID alpha*G1. challenge #"+e.id+" It does not follow the previous contribution"),!1):(o=await sameRatio$1(t,i.betaG1,e.betaG1,e.key.beta.g2_sp,e.key.beta.g2_spx),!0!==o?(a&&a.error("INVALID beta*G1. challenge #"+e.id+" It does not follow the previous contribution"),!1):(o=await sameRatio$1(t,e.key.beta.g1_s,e.key.beta.g1_sx,i.betaG2,e.betaG2),!0!==o?(a&&a.error("INVALID beta*G2. challenge #"+e.id+"It does not follow the previous contribution"),!1):(a&&a.info("Powers Of tau file OK!"),!0))))))))}async function verify(t,e){let i;await blake2bWasm.exports.ready();const{fd:a,sections:o}=await readBinFile(t,"ptau",1),{curve:n,power:r,ceremonyPower:s}=await readPTauHeader(a,o),l=await readContributions(a,n,o);e&&e.debug("power: 2**"+r),e&&e.debug("Computing initial contribution hash");const c={tauG1:n.G1.g,tauG2:n.G2.g,alphaG1:n.G1.g,betaG1:n.G1.g,betaG2:n.G2.g,nextChallenge:calculateFirstChallengeHash(n,s,e),responseHash:blake2bWasm.exports(64).digest()};if(0==l.length)return e&&e.error("This file has no contribution! It cannot be used in production"),!1;let d;d=l.length>1?l[l.length-2]:c;const u=l[l.length-1];e&&e.debug("Validating contribution #"+l[l.length-1].id);if(!await verifyContribution(n,u,d,e))return!1;const g=blake2bWasm.exports(64);g.update(u.responseHash),e&&e.debug("Verifying powers in tau*G1 section");const f=await w(2,"G1","tauG1",2**r*2-1,[0,1],e);if(i=await sameRatio$1(n,f.R1,f.R2,n.G2.g,u.tauG2),!0!==i)return e&&e.error("tauG1 section. Powers do not match"),!1;if(!n.G1.eq(n.G1.g,f.singularPoints[0]))return e&&e.error("First element of tau*G1 section must be the generator"),!1;if(!n.G1.eq(u.tauG1,f.singularPoints[1]))return e&&e.error("Second element of tau*G1 section does not match the one in the contribution section"),!1;e&&e.debug("Verifying powers in tau*G2 section");const h=await w(3,"G2","tauG2",2**r,[0,1],e);if(i=await sameRatio$1(n,n.G1.g,u.tauG1,h.R1,h.R2),!0!==i)return e&&e.error("tauG2 section. Powers do not match"),!1;if(!n.G2.eq(n.G2.g,h.singularPoints[0]))return e&&e.error("First element of tau*G2 section must be the generator"),!1;if(!n.G2.eq(u.tauG2,h.singularPoints[1]))return e&&e.error("Second element of tau*G2 section does not match the one in the contribution section"),!1;e&&e.debug("Verifying powers in alpha*tau*G1 section");const _=await w(4,"G1","alphatauG1",2**r,[0],e);if(i=await sameRatio$1(n,_.R1,_.R2,n.G2.g,u.tauG2),!0!==i)return e&&e.error("alphaTauG1 section. Powers do not match"),!1;if(!n.G1.eq(u.alphaG1,_.singularPoints[0]))return e&&e.error("First element of alpha*tau*G1 section (alpha*G1) does not match the one in the contribution section"),!1;e&&e.debug("Verifying powers in beta*tau*G1 section");const p=await w(5,"G1","betatauG1",2**r,[0],e);if(i=await sameRatio$1(n,p.R1,p.R2,n.G2.g,u.tauG2),!0!==i)return e&&e.error("betaTauG1 section. Powers do not match"),!1;if(!n.G1.eq(u.betaG1,p.singularPoints[0]))return e&&e.error("First element of beta*tau*G1 section (beta*G1) does not match the one in the contribution section"),!1;const m=await async function(t){const e=n.G2,i=2*e.F.n8,r=new Uint8Array(i);if(!o[6])throw t.error("File has no BetaG2 section"),new Error("File has no BetaG2 section");if(o[6].length>1)throw t.error("File has no BetaG2 section"),new Error("File has more than one GetaG2 section");a.pos=o[6][0].p;const s=await a.read(i),l=e.fromRprLEM(s);return e.toRprUncompressed(r,0,l),g.update(r),l}(e);if(!n.G2.eq(u.betaG2,m))return e&&e.error("betaG2 element in betaG2 section does not match the one in the contribution section"),!1;const b=g.digest();if(r==s&&!hashIsEqual(b,u.nextChallenge))return e&&e.error("Hash of the values does not match the next challenge of the last contributor in the contributions section"),!1;e&&e.info(formatHash(b,"Next challenge hash: ")),L(u,d);for(let t=l.length-2;t>=0;t--){const i=l[t],a=t>0?l[t-1]:c;if(!await verifyContribution(n,i,a,e))return!1;L(i,a)}if(e&&e.info("-----------------------------------------------------"),o[12]&&o[13]&&o[14]&&o[15]){let t;if(t=await y("G1",2,12,"tauG1",e),!t)return!1;if(t=await y("G2",3,13,"tauG2",e),!t)return!1;if(t=await y("G1",4,14,"alphaTauG1",e),!t)return!1;if(t=await y("G1",5,15,"betaTauG1",e),!t)return!1}else e&&e.warn('this file does not contain phase2 precalculated values. Please run: \n   snarkjs "powersoftau preparephase2" to prepare this file to be used in the phase2 ceremony.');return await a.close(),e&&e.info("Powers of Tau Ok!"),!0;function L(t,i){if(!e)return;e.info("-----------------------------------------------------"),e.info(`Contribution #${t.id}: ${t.name||""}`),e.info(formatHash(t.nextChallenge,"Next Challenge: "));const a=new Uint8Array(2*n.G1.F.n8*6+2*n.G2.F.n8*3);toPtauPubKeyRpr(a,0,n,t.key,!1);const o=blake2bWasm.exports(64);o.setPartialHash(t.partialHash),o.update(a);const r=o.digest();e.info(formatHash(r,"Response Hash:")),e.info(formatHash(i.nextChallenge,"Response Hash:")),1==t.type&&(e.info(`Beacon generator: ${byteArray2hex(t.beaconHash)}`),e.info(`Beacon iterations Exp: ${t.numIterationsExp}`))}async function w(t,e,i,r,s,l){const c=n[e],d=2*c.F.n8;await startReadUniqueSection(a,o,t);const u=[];let f=c.zero,h=c.zero,_=c.zero;for(let t=0;t<r;t+=65536){l&&l.debug(`points relations: ${i}: ${t}/${r} `);const e=Math.min(r-t,65536),o=await a.read(e*d),n=await c.batchLEMtoU(o);g.update(n);const p=new Uint8Array(4*(e-1));if(crypto.randomFillSync(p),t>0){const t=c.fromRprLEM(o,0),e=crypto.randomBytes(4).readUInt32BE(0,!0);f=c.add(f,c.timesScalar(_,e)),h=c.add(h,c.timesScalar(t,e))}const m=await c.multiExpAffine(o.slice(0,(e-1)*d),p),b=await c.multiExpAffine(o.slice(d),p);f=c.add(f,m),h=c.add(h,b),_=c.fromRprLEM(o,(e-1)*d);for(let i=0;i<s.length;i++){const a=s[i];if(a>=t&&a<t+e){const e=c.fromRprLEM(o,(a-t)*d);u.push(e)}}}return await endReadSection(a),{R1:f,R2:h,singularPoints:u}}async function y(t,e,i,s,l){l&&l.debug(`Verifying phase2 calculated values ${s}...`);const c=n[t],d=2*c.F.n8,u=new Array(8);for(let t=0;t<8;t++)u[t]=crypto.randomBytes(4).readUInt32BE(0,!0);for(let t=0;t<=r;t++){if(!await g(t))return!1}if(2==e){if(!await g(r+1))return!1}return!0;async function g(t){l&&l.debug(`Power ${t}...`);const g=n.Fr.n8,f=2**t;let h,_=new Uint32Array(f),p=new ChaCha(u);l&&l.debug(`Creating random numbers Powers${t}...`);for(let e=0;e<f;e++)_[e]=t==r+1&&e==f-1?0:p.nextU32();_=new Uint8Array(_.buffer,_.byteOffset,_.byteLength),l&&l.debug(`reading points Powers${t}...`),await startReadUniqueSection(a,o,e),h=new BigBuffer(f*d),t==r+1?(await a.readToBuffer(h,0,(f-1)*d),h.set(n.G1.zeroAffine,(f-1)*d)):await a.readToBuffer(h,0,f*d),await endReadSection(a,!0);const m=await c.multiExpAffine(h,_,l,s+"_"+t);_=new BigBuffer(f*g),p=new ChaCha(u);const b=new Uint8Array(4),L=new DataView(b.buffer);l&&l.debug(`Creating random numbers Powers${t}...`);for(let e=0;e<f;e++)e==f-1&&t==r+1||(L.setUint32(0,p.nextU32(),!0),_.set(b,e*g));l&&l.debug(`batchToMontgomery ${t}...`),_=await n.Fr.batchToMontgomery(_),l&&l.debug(`fft ${t}...`),_=await n.Fr.fft(_),l&&l.debug(`batchFromMontgomery ${t}...`),_=await n.Fr.batchFromMontgomery(_),l&&l.debug(`reading points Lagrange${t}...`),await startReadUniqueSection(a,o,i),a.pos+=d*(2**t-1),await a.readToBuffer(h,0,f*d),await endReadSection(a,!0);const w=await c.multiExpAffine(h,_,l,s+"_"+t+"_transformed");return!!c.eq(m,w)||(l&&l.error("Phase2 caclutation does not match with powers of tau"),!1)}}}async function applyKeyToSection(t,e,i,a,o,n,r,s,l,c){const d=o[n],u=2*d.F.n8,g=e[a][0].size/u;await startReadUniqueSection(t,e,a),await startWriteSection(i,a);let f=r;for(let e=0;e<g;e+=65536){c&&c.debug(`Applying key: ${l}: ${e}/${g}`);const a=Math.min(g-e,65536);let n;n=await t.read(a*u),n=await d.batchApplyKey(n,f,s),await i.write(n),f=o.Fr.mul(f,o.Fr.exp(s,a))}await endWriteSection(i),await endReadSection(t)}async function applyKeyToChallengeSection(t,e,i,a,o,n,r,s,l,c,d){const u=a[o],g=2*u.F.n8,f=Math.floor((1<<20)/g);let h=r;for(let o=0;o<n;o+=f){d&&d.debug(`Applying key ${c}: ${o}/${n}`);const r=Math.min(n-o,f),_=await t.read(r*g),p=await u.batchUtoLEM(_),m=await u.batchApplyKey(p,h,s);let b;b="COMPRESSED"==l?await u.batchLEMtoC(m):await u.batchLEMtoU(m),i&&i.update(b),await e.write(b),h=a.Fr.mul(h,a.Fr.exp(s,r))}}async function challengeContribute(t,e,i,a,o){await blake2bWasm.exports.ready();const n=await readExisting(e),r=8*t.F1.n64*2,s=8*t.F2.n64*2,l=(n.totalSize+r-64-s)/(4*r+s);let c=l,d=0;for(;c>1;)c/=2,d+=1;if(2**d!=l)throw new Error("Invalid file size");o&&o.debug("Power to tau size: "+d);const u=await getRandomRng(a),g=await createOverride(i),f=blake2bWasm.exports(64);for(let t=0;t<n.totalSize;t+=n.pageSize){o&&o.debug(`Hashing challenge ${t}/${n.totalSize}`);const e=Math.min(n.totalSize-t,n.pageSize),i=await n.read(e);f.update(i)}const h=await n.read(64,0);o&&o.info(formatHash(h,"Claimed Previous Response Hash: "));const _=f.digest();o&&o.info(formatHash(_,"Current Challenge Hash: "));const p=createPTauKey(t,_,u);o&&["tau","alpha","beta"].forEach((e=>{o.debug(e+".g1_s: "+t.G1.toString(p[e].g1_s,16)),o.debug(e+".g1_sx: "+t.G1.toString(p[e].g1_sx,16)),o.debug(e+".g2_sp: "+t.G2.toString(p[e].g2_sp,16)),o.debug(e+".g2_spx: "+t.G2.toString(p[e].g2_spx,16)),o.debug("")}));const m=blake2bWasm.exports(64);await g.write(_),m.update(_),await applyKeyToChallengeSection(n,g,m,t,"G1",2**d*2-1,t.Fr.one,p.tau.prvKey,"COMPRESSED","tauG1",o),await applyKeyToChallengeSection(n,g,m,t,"G2",2**d,t.Fr.one,p.tau.prvKey,"COMPRESSED","tauG2",o),await applyKeyToChallengeSection(n,g,m,t,"G1",2**d,p.alpha.prvKey,p.tau.prvKey,"COMPRESSED","alphaTauG1",o),await applyKeyToChallengeSection(n,g,m,t,"G1",2**d,p.beta.prvKey,p.tau.prvKey,"COMPRESSED","betaTauG1",o),await applyKeyToChallengeSection(n,g,m,t,"G2",1,p.beta.prvKey,p.tau.prvKey,"COMPRESSED","betaTauG2",o);const b=new Uint8Array(2*t.F1.n8*6+2*t.F2.n8*3);toPtauPubKeyRpr(b,0,t,p,!1),await g.write(b),m.update(b);const L=m.digest();o&&o.info(formatHash(L,"Contribution Response Hash: ")),await g.close(),await n.close()}async function beacon$1(t,e,i,a,o,n){const r=hex2ByteArray(a);if(0==r.byteLength||2*r.byteLength!=a.length)return n&&n.error("Invalid Beacon Hash. (It must be a valid hexadecimal sequence)"),!1;if(r.length>=256)return n&&n.error("Maximum lenght of beacon hash is 255 bytes"),!1;if((o=parseInt(o))<10||o>63)return n&&n.error("Invalid numIterationsExp. (Must be between 10 and 63)"),!1;await blake2bWasm.exports.ready();const{fd:s,sections:l}=await readBinFile(t,"ptau",1),{curve:c,power:d,ceremonyPower:u}=await readPTauHeader(s,l);if(d!=u)return n&&n.error("This file has been reduced. You cannot contribute into a reduced file."),!1;l[12]&&n&&n.warn("Contributing into a file that has phase2 calculated. You will have to prepare phase2 again.");const g=await readContributions(s,c,l),f={name:i,type:1,numIterationsExp:o,beaconHash:r};let h;h=g.length>0?g[g.length-1].nextChallenge:calculateFirstChallengeHash(c,d,n),f.key=keyFromBeacon(c,h,r,o);const _=new blake2bWasm.exports(64);_.update(h);const p=await createBinFile(e,"ptau",1,7);await writePTauHeader(p,c,d);const m=[];let b;b=await A(2,"G1",2**d*2-1,c.Fr.e(1),f.key.tau.prvKey,"tauG1",n),f.tauG1=b[1],b=await A(3,"G2",2**d,c.Fr.e(1),f.key.tau.prvKey,"tauG2",n),f.tauG2=b[1],b=await A(4,"G1",2**d,f.key.alpha.prvKey,f.key.tau.prvKey,"alphaTauG1",n),f.alphaG1=b[0],b=await A(5,"G1",2**d,f.key.beta.prvKey,f.key.tau.prvKey,"betaTauG1",n),f.betaG1=b[0],b=await A(6,"G2",1,f.key.beta.prvKey,f.key.tau.prvKey,"betaTauG2",n),f.betaG2=b[0],f.partialHash=_.getPartialHash();const L=new Uint8Array(2*c.F1.n8*6+2*c.F2.n8*3);toPtauPubKeyRpr(L,0,c,f.key,!1),_.update(new Uint8Array(L));const w=_.digest();n&&n.info(formatHash(w,"Contribution Response Hash imported: "));const y=new blake2bWasm.exports(64);return y.update(w),await I(p,"G1",2,2**d*2-1,"tauG1",n),await I(p,"G2",3,2**d,"tauG2",n),await I(p,"G1",4,2**d,"alphaTauG1",n),await I(p,"G1",5,2**d,"betaTauG1",n),await I(p,"G2",6,1,"betaG2",n),f.nextChallenge=y.digest(),n&&n.info(formatHash(f.nextChallenge,"Next Challenge Hash: ")),g.push(f),await writeContributions(p,c,g),await s.close(),await p.close(),w;async function A(t,e,i,a,o,n,r){const d=[];s.pos=l[t][0].p,await startWriteSection(p,t),m[t]=p.pos;const u=c[e],g=2*u.F.n8,f=Math.floor((1<<20)/g);let h=a;for(let t=0;t<i;t+=f){r&&r.debug(`applying key${n}: ${t}/${i}`);const e=Math.min(i-t,f),a=await s.read(e*g),l=await u.batchApplyKey(a,h,o),m=p.write(l),b=await u.batchLEMtoC(l);if(_.update(b),await m,0==t)for(let t=0;t<Math.min(2,i);t++)d.push(u.fromRprLEM(l,t*g));h=c.Fr.mul(h,c.Fr.exp(o,e))}return await endWriteSection(p),d}async function I(t,e,i,a,o,n){const r=c[e],s=2*r.F.n8,l=Math.floor((1<<24)/s),d=t.pos;t.pos=m[i];for(let e=0;e<a;e+=l){n&&n.debug(`Hashing ${o}: ${e}/${a}`);const i=Math.min(a-e,l),c=await t.read(i*s),d=await r.batchLEMtoU(c);y.update(d)}t.pos=d}}async function contribute(t,e,i,a,o){await blake2bWasm.exports.ready();const{fd:n,sections:r}=await readBinFile(t,"ptau",1),{curve:s,power:l,ceremonyPower:c}=await readPTauHeader(n,r);if(l!=c)throw o&&o.error("This file has been reduced. You cannot contribute into a reduced file."),new Error("This file has been reduced. You cannot contribute into a reduced file.");r[12]&&o&&o.warn("WARNING: Contributing into a file that has phase2 calculated. You will have to prepare phase2 again.");const d=await readContributions(n,s,r),u={name:i,type:0};let g;const f=await getRandomRng(a);g=d.length>0?d[d.length-1].nextChallenge:calculateFirstChallengeHash(s,l,o),u.key=createPTauKey(s,g,f);const h=new blake2bWasm.exports(64);h.update(g);const _=await createBinFile(e,"ptau",1,7);await writePTauHeader(_,s,l);const p=[];let m;m=await y(2,"G1",2**l*2-1,s.Fr.e(1),u.key.tau.prvKey,"tauG1"),u.tauG1=m[1],m=await y(3,"G2",2**l,s.Fr.e(1),u.key.tau.prvKey,"tauG2"),u.tauG2=m[1],m=await y(4,"G1",2**l,u.key.alpha.prvKey,u.key.tau.prvKey,"alphaTauG1"),u.alphaG1=m[0],m=await y(5,"G1",2**l,u.key.beta.prvKey,u.key.tau.prvKey,"betaTauG1"),u.betaG1=m[0],m=await y(6,"G2",1,u.key.beta.prvKey,u.key.tau.prvKey,"betaTauG2"),u.betaG2=m[0],u.partialHash=h.getPartialHash();const b=new Uint8Array(2*s.F1.n8*6+2*s.F2.n8*3);toPtauPubKeyRpr(b,0,s,u.key,!1),h.update(new Uint8Array(b));const L=h.digest();o&&o.info(formatHash(L,"Contribution Response Hash imported: "));const w=new blake2bWasm.exports(64);return w.update(L),await A(_,"G1",2,2**l*2-1,"tauG1"),await A(_,"G2",3,2**l,"tauG2"),await A(_,"G1",4,2**l,"alphaTauG1"),await A(_,"G1",5,2**l,"betaTauG1"),await A(_,"G2",6,1,"betaG2"),u.nextChallenge=w.digest(),o&&o.info(formatHash(u.nextChallenge,"Next Challenge Hash: ")),d.push(u),await writeContributions(_,s,d),await n.close(),await _.close(),L;async function y(t,e,i,a,l,c){const d=[];n.pos=r[t][0].p,await startWriteSection(_,t),p[t]=_.pos;const u=s[e],g=2*u.F.n8,f=Math.floor((1<<20)/g);let m=a;for(let t=0;t<i;t+=f){o&&o.debug(`processing: ${c}: ${t}/${i}`);const e=Math.min(i-t,f),a=await n.read(e*g),r=await u.batchApplyKey(a,m,l),p=_.write(r),b=await u.batchLEMtoC(r);if(h.update(b),await p,0==t)for(let t=0;t<Math.min(2,i);t++)d.push(u.fromRprLEM(r,t*g));m=s.Fr.mul(m,s.Fr.exp(l,e))}return await endWriteSection(_),d}async function A(t,e,i,a,n){const r=s[e],l=2*r.F.n8,c=Math.floor((1<<24)/l),d=t.pos;t.pos=p[i];for(let e=0;e<a;e+=c){o&&e&&o.debug(`Hashing ${n}: `+e);const i=Math.min(a-e,c),s=await t.read(i*l),d=await r.batchLEMtoU(s);w.update(d)}t.pos=d}}async function preparePhase2(t,e,i){const{fd:a,sections:o}=await readBinFile(t,"ptau",1),{curve:n,power:r}=await readPTauHeader(a,o),s=await createBinFile(e,"ptau",1,11);return await writePTauHeader(s,n,r),await copySection(a,o,s,2),await copySection(a,o,s,3),await copySection(a,o,s,4),await copySection(a,o,s,5),await copySection(a,o,s,6),await copySection(a,o,s,7),await l(2,12,"G1","tauG1"),await l(3,13,"G2","tauG2"),await l(4,14,"G1","alphaTauG1"),await l(5,15,"G1","betaTauG1"),await a.close(),void await s.close();async function l(t,e,l,c){i&&i.debug("Starting section: "+c),await startWriteSection(s,e);for(let t=0;t<=r;t++)await d(t);async function d(e){const d=2**e,u=n[l];n.Fr;const g=2*u.F.n8;let f;u.F.n8,f=new BigBuffer(d*g),await startReadUniqueSection(a,o,t),2==t&&e==r+1?(await a.readToBuffer(f,0,(d-1)*g),f.set(n.G1.zeroAffine,(d-1)*g)):await a.readToBuffer(f,0,d*g),await endReadSection(a,!0),f=await u.lagrangeEvaluations(f,"affine","affine",i,c),await s.write(f)}2==t&&await d(r+1),await endWriteSection(s)}}async function truncate(t,e,i){const{fd:a,sections:o}=await readBinFile(t,"ptau",1),{curve:n,power:r,ceremonyPower:s}=await readPTauHeader(a,o),l=2*n.G1.F.n8,c=2*n.G2.F.n8;for(let t=1;t<r;t++)await d(t);return await a.close(),!0;async function d(t){let r=t.toString();for(;r.length<2;)r="0"+r;i&&i.debug("Writing Power: "+r);const d=await createBinFile(e+r+".ptau","ptau",1,11);await writePTauHeader(d,n,t,s),await copySection(a,o,d,2,(2**t*2-1)*l),await copySection(a,o,d,3,2**t*c),await copySection(a,o,d,4,2**t*l),await copySection(a,o,d,5,2**t*l),await copySection(a,o,d,6,c),await copySection(a,o,d,7),await copySection(a,o,d,12,(2**(t+1)*2-1)*l),await copySection(a,o,d,13,(2**t*2-1)*c),await copySection(a,o,d,14,(2**t*2-1)*l),await copySection(a,o,d,15,(2**t*2-1)*l),await d.close()}}async function convert(t,e,i){const{fd:a,sections:o}=await readBinFile(t,"ptau",1),{curve:n,power:r}=await readPTauHeader(a,o),s=await createBinFile(e,"ptau",1,11);return await writePTauHeader(s,n,r),await copySection(a,o,s,2),await copySection(a,o,s,3),await copySection(a,o,s,4),await copySection(a,o,s,5),await copySection(a,o,s,6),await copySection(a,o,s,7),await async function(t,e,l,c){i&&i.debug("Starting section: "+c);await startWriteSection(s,e);const d=o[e][0].size,u=a.pageSize;await startReadUniqueSection(a,o,e);for(let t=0;t<d;t+=u){const e=Math.min(d-t,u),i=await a.read(e);await s.write(i)}await endReadSection(a),2==t&&await async function(e){const d=2**e,u=n[l],g=2*u.F.n8;let f;f=new BigBuffer(d*g),await startReadUniqueSection(a,o,t),2==t&&e==r+1?(await a.readToBuffer(f,0,(d-1)*g),f.set(n.G1.zeroAffine,(d-1)*g)):await a.readToBuffer(f,0,d*g);await endReadSection(a,!0),f=await u.lagrangeEvaluations(f,"affine","affine",i,c),await s.write(f)}(r+1);await endWriteSection(s)}(2,12,"G1","tauG1"),await copySection(a,o,s,13),await copySection(a,o,s,14),await copySection(a,o,s,15),await a.close(),void await s.close()}async function exportJson(t,e){const{fd:i,sections:a}=await readBinFile(t,"ptau",1),{curve:o,power:n}=await readPTauHeader(i,a),r={};return r.q=o.q,r.power=n,r.contributions=await readContributions(i,o,a),r.tauG1=await s(2,"G1",2**n*2-1,"tauG1"),r.tauG2=await s(3,"G2",2**n,"tauG2"),r.alphaTauG1=await s(4,"G1",2**n,"alphaTauG1"),r.betaTauG1=await s(5,"G1",2**n,"betaTauG1"),r.betaG2=await s(6,"G2",1,"betaG2"),r.lTauG1=await l(12,"G1","lTauG1"),r.lTauG2=await l(13,"G2","lTauG2"),r.lAlphaTauG1=await l(14,"G1","lAlphaTauG2"),r.lBetaTauG1=await l(15,"G1","lBetaTauG2"),await i.close(),stringifyBigIntsWithField(o.Fr,r);async function s(t,n,r,s){const l=o[n],c=2*l.F.n8,d=[];await startReadUniqueSection(i,a,t);for(let t=0;t<r;t++){e&&t&&t%1e4==0&&console.log(`${s}: `+t);const a=await i.read(c);d.push(l.fromRprLEM(a,0))}return await endReadSection(i),d}async function l(t,r,s){const l=o[r],c=2*l.F.n8,d=[];await startReadUniqueSection(i,a,t);for(let t=0;t<=n;t++){e&&console.log(`${s}: Power: ${t}`),d[t]=[];const a=2**t;for(let o=0;o<a;o++){e&&o&&o%1e4==0&&console.log(`${s}: ${o}/${a}`);const n=await i.read(c);d[t].push(l.fromRprLEM(n,0))}}return await endReadSection(i,!0),d}}var powersoftau=Object.freeze({__proto__:null,newAccumulator:newAccumulator,exportChallenge:exportChallenge,importResponse:importResponse,verify:verify,challengeContribute:challengeContribute,beacon:beacon$1,contribute:contribute,preparePhase2:preparePhase2,truncate:truncate,convert:convert,exportJson:exportJson});function r1csPrint(t,e,i){for(let e=0;e<t.constraints.length;e++)a(t.constraints[e]);function a(a){const o=i=>{let a="";return Object.keys(i).forEach((o=>{let n=e.varIdx2Name[o];"one"==n&&(n="");let r=t.curve.Fr.toString(i[o]);"1"==r&&(r=""),"-1"==r&&(r="-"),""!=a&&"-"!=r[0]&&(r="+"+r),""!=a&&(r=" "+r),a=a+r+n})),a},n=`[ ${o(a[0])} ] * [ ${o(a[1])} ] - [ ${o(a[2])} ] = 0`;i&&i.info(n)}}const SUBARRAY_SIZE$1=262144,BigArrayHandler$1={get:function(t,e){return isNaN(e)?t[e]:t.getElement(e)},set:function(t,e,i){return isNaN(e)?(t[e]=i,!0):t.setElement(e,i)}};class _BigArray$1{constructor(t){this.length=t||0,this.arr=new Array(SUBARRAY_SIZE$1);for(let e=0;e<t;e+=SUBARRAY_SIZE$1)this.arr[e/SUBARRAY_SIZE$1]=new Array(Math.min(SUBARRAY_SIZE$1,t-e));return this}push(){for(let t=0;t<arguments.length;t++)this.setElement(this.length,arguments[t])}slice(t,e){const i=new Array(e-t);for(let a=t;a<e;a++)i[a-t]=this.getElement(a);return i}getElement(t){t=parseInt(t);const e=Math.floor(t/SUBARRAY_SIZE$1),i=t%SUBARRAY_SIZE$1;return this.arr[e]?this.arr[e][i]:void 0}setElement(t,e){t=parseInt(t);const i=Math.floor(t/SUBARRAY_SIZE$1);this.arr[i]||(this.arr[i]=new Array(SUBARRAY_SIZE$1));const a=t%SUBARRAY_SIZE$1;return this.arr[i][a]=e,t>=this.length&&(this.length=t+1),!0}getKeys(){const t=new BigArray$1;for(let e=0;e<this.arr.length;e++)if(this.arr[e])for(let i=0;i<this.arr[e].length;i++)void 0!==this.arr[e][i]&&t.push(e*SUBARRAY_SIZE$1+i);return t}}class BigArray$1{constructor(t){const e=new _BigArray$1(t);return new Proxy(e,BigArrayHandler$1)}}const R1CS_FILE_CUSTOM_GATES_LIST_SECTION=4,R1CS_FILE_CUSTOM_GATES_USES_SECTION=5;async function readR1csHeader(t,e,i){let a;a="object"==typeof i?i:void 0===i?{singleThread:!1}:{singleThread:i};const o={};if(await startReadUniqueSection(t,e,1),o.n8=await t.readULE32(),o.prime=await readBigInt(t,o.n8),a.F){if(a.F.p!=o.prime)throw new Error("Different Prime");o.F=a.F}else if(a.getFieldFromPrime)o.F=await a.getFieldFromPrime(o.prime,a.singleThread);else if(a.getCurveFromPrime)o.curve=await a.getCurveFromPrime(o.prime,a.singleThread),o.F=o.curve.Fr;else try{o.curve=await getCurveFromR(o.prime,a.singleThread),o.F=o.curve.Fr}catch(t){o.F=new F1Field(o.prime)}return o.nVars=await t.readULE32(),o.nOutputs=await t.readULE32(),o.nPubInputs=await t.readULE32(),o.nPrvInputs=await t.readULE32(),o.nLabels=await t.readULE64(),o.nConstraints=await t.readULE32(),o.useCustomGates=void 0!==e[R1CS_FILE_CUSTOM_GATES_LIST_SECTION]&&null!==e[R1CS_FILE_CUSTOM_GATES_LIST_SECTION]&&void 0!==e[R1CS_FILE_CUSTOM_GATES_USES_SECTION]&&null!==e[R1CS_FILE_CUSTOM_GATES_USES_SECTION],await endReadSection(t),o}async function readConstraints(t,e,i,a,o){let n;n="object"==typeof a?a:void 0===a?{}:{logger:a,loggerCtx:o};const r=await readSection(t,e,2);let s,l=0;s=i.nConstraints>1<<20?new BigArray$1:[];for(let t=0;t<i.nConstraints;t++){n.logger&&t%1e5==0&&n.logger.info(`${n.loggerCtx}: Loading constraints: ${t}/${i.nConstraints}`);const e=c();s.push(e)}return s;function c(){const t=[];return t[0]=d(),t[1]=d(),t[2]=d(),t}function d(){const t={},e=r.slice(l,l+4);l+=4;const a=new DataView(e.buffer).getUint32(0,!0),o=r.slice(l,l+(4+i.n8)*a);l+=(4+i.n8)*a;const n=new DataView(o.buffer);for(let e=0;e<a;e++){const a=n.getUint32(e*(4+i.n8),!0),r=i.F.fromRprLE(o,e*(4+i.n8)+4);t[a]=r}return t}}async function readMap(t,e,i,a,o){let n;n="object"==typeof a?a:void 0===a?{}:{logger:a,loggerCtx:o};const r=await readSection(t,e,3);let s,l=0;s=i.nVars>1<<20?new BigArray$1:[];for(let t=0;t<i.nVars;t++){n.logger&&t%1e4==0&&n.logger.info(`${n.loggerCtx}: Loading map: ${t}/${i.nVars}`);const e=c();s.push(e)}return s;function c(){const t=r.slice(l,l+8);l+=8;const e=new DataView(t.buffer),i=e.getUint32(0,!0);return 4294967296*e.getUint32(4,!0)+i}}async function readR1csFd(t,e,i){if("object"!=typeof i)throw new Error("readR1csFd: options must be an object");i.loadConstraints=i.loadConstraints||!0,i.loadMap=i.loadMap||!1,i.loadCustomGates=i.loadCustomGates||!0;const a=await readR1csHeader(t,e,i);return i.loadConstraints&&(a.constraints=await readConstraints(t,e,a,i)),i.loadMap&&(a.map=await readMap(t,e,a,i)),i.loadCustomGates&&(a.useCustomGates?(a.customGates=await readCustomGatesListSection(t,e,a.F.n8),a.customGatesUses=await readCustomGatesUsesSection(t,e,i)):(a.customGates=[],a.customGatesUses=[])),a}async function readR1cs(t,e,i,a,o,n){let r;r="object"==typeof e?e:void 0===e?{loadConstraints:!0,loadMap:!1,loadCustomGates:!0}:{loadConstraints:e,loadMap:i,singleThread:a,logger:o,loggerCtx:n};const{fd:s,sections:l}=await readBinFile(t,"r1cs",1),c=await readR1csFd(s,l,r);return await s.close(),c}async function readCustomGatesListSection(t,e,i){await startReadUniqueSection(t,e,R1CS_FILE_CUSTOM_GATES_LIST_SECTION);let a=await t.readULE32(),o=[];for(let e=0;e<a;e++){let e={};e.templateName=await t.readString();let a=await t.readULE32();e.parameters=Array(a);let n=await t.read(i*a);for(let t=0;t<a;t++)e.parameters[t]=n.slice(t*i,t*i+i);o.push(e)}return await endReadSection(t),o}async function readCustomGatesUsesSection(t,e,i){const a=await readSection(t,e,R1CS_FILE_CUSTOM_GATES_USES_SECTION),o=new Uint32Array(a.buffer,a.byteOffset,a.byteLength/4),n=o[0];let r,s=1;r=n>1<<20?new BigArray$1:[];for(let t=0;t<n;t++){i.logger&&t%1e5==0&&i.logger.info(`${i.loggerCtx}: Loading custom gate uses: ${t}/${n}`);let e={};e.id=o[s++];let a=o[s++];e.signals=[];for(let t=0;t<a;t++)e.signals.push(o[s++]);r.push(e)}return r}const bls12381r=Scalar.e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),bn128r=Scalar.e("21888242871839275222246405745257275088548364400416034343698204186575808495617");async function r1csInfo(t,e){const i=await readR1cs(t);return Scalar.eq(i.prime,bn128r)?e&&e.info("Curve: bn-128"):Scalar.eq(i.prime,bls12381r)?e&&e.info("Curve: bls12-381"):e&&e.info(`Unknown Curve. Prime: ${Scalar.toString(i.prime)}`),e&&e.info(`# of Wires: ${i.nVars}`),e&&e.info(`# of Constraints: ${i.nConstraints}`),e&&e.info(`# of Private Inputs: ${i.nPrvInputs}`),e&&e.info(`# of Public Inputs: ${i.nPubInputs}`),e&&e.info(`# of Labels: ${i.nLabels}`),e&&e.info(`# of Outputs: ${i.nOutputs}`),i}async function r1csExportJson(t,e){const i=await readR1cs(t,!0,!0,!0,e),a=i.curve.Fr;return delete i.curve,delete i.F,stringifyBigIntsWithField(a,i)}var r1cs=Object.freeze({__proto__:null,print:r1csPrint,info:r1csInfo,exportJson:r1csExportJson});async function loadSymbols(t){const e={labelIdx2Name:["one"],varIdx2Name:["one"],componentIdx2Name:[]},i=await readExisting(t),a=await i.read(i.totalSize),o=new TextDecoder("utf-8").decode(a).split("\n");for(let t=0;t<o.length;t++){const i=o[t].split(",");4==i.length&&(e.varIdx2Name[i[1]]?e.varIdx2Name[i[1]]+="|"+i[3]:e.varIdx2Name[i[1]]=i[3],e.labelIdx2Name[i[0]]=i[3],e.componentIdx2Name[i[2]]||(e.componentIdx2Name[i[2]]=n(i[3])))}return await i.close(),e;function n(t){const e=t.split(".");return e.pop(),e.join(".")}}const{unstringifyBigInts:unstringifyBigInts$3}=utils;async function wtnsDebug(t,e,i,a,o,n){const r=unstringifyBigInts$3(t),s=await readExisting(e),l=await s.read(s.totalSize);await s.close();let c={sanityCheck:!0},d=await loadSymbols(a);o.set&&(d||(d=await loadSymbols(a)),c.logSetSignal=function(t,e){n&&n.info("SET "+d.labelIdx2Name[t]+" <-- "+e.toString())}),o.get&&(d||(d=await loadSymbols(a)),c.logGetSignal=function(t,e){n&&n.info("GET "+d.labelIdx2Name[t]+" --\x3e "+e.toString())}),o.trigger&&(d||(d=await loadSymbols(a)),c.logStartComponent=function(t){n&&n.info("START: "+d.componentIdx2Name[t])},c.logFinishComponent=function(t){n&&n.info("FINISH: "+d.componentIdx2Name[t])}),c.sym=d;const u=await builder(l,c),g=await u.calculateWitness(r),f=await createBinFile(i,"wtns",2,2);await write(f,g,u.prime),await f.close()}async function wtnsExportJson(t){return await read(t)}var wtns=Object.freeze({__proto__:null,calculate:wtnsCalculate,debug:wtnsDebug,exportJson:wtnsExportJson});const SUBARRAY_SIZE=262144,BigArrayHandler={get:function(t,e){return isNaN(e)?t[e]:t.getElement(e)},set:function(t,e,i){return isNaN(e)?(t[e]=i,!0):t.setElement(e,i)}};class _BigArray{constructor(t){this.length=t||0,this.arr=new Array(SUBARRAY_SIZE);for(let e=0;e<t;e+=SUBARRAY_SIZE)this.arr[e/SUBARRAY_SIZE]=new Array(Math.min(SUBARRAY_SIZE,t-e));return this}push(){for(let t=0;t<arguments.length;t++)this.setElement(this.length,arguments[t])}slice(t,e){const i=new Array(e-t);for(let a=t;a<e;a++)i[a-t]=this.getElement(a);return i}getElement(t){t=parseInt(t);const e=Math.floor(t/SUBARRAY_SIZE),i=t%SUBARRAY_SIZE;return this.arr[e]?this.arr[e][i]:void 0}setElement(t,e){t=parseInt(t);const i=Math.floor(t/SUBARRAY_SIZE);this.arr[i]||(this.arr[i]=new Array(SUBARRAY_SIZE));const a=t%SUBARRAY_SIZE;return this.arr[i][a]=e,t>=this.length&&(this.length=t+1),!0}getKeys(){const t=new BigArray;for(let e=0;e<this.arr.length;e++)if(this.arr[e])for(let i=0;i<this.arr[e].length;i++)void 0!==this.arr[e][i]&&t.push(e*SUBARRAY_SIZE+i);return t}}class BigArray{constructor(t){const e=new _BigArray(t);return new Proxy(e,BigArrayHandler)}}async function newZKey(t,e,i,a){await blake2bWasm.exports.ready();const o=blake2bWasm.exports(64),{fd:n,sections:r}=await readBinFile(e,"ptau",1),{curve:s,power:l}=await readPTauHeader(n,r),{fd:c,sections:d}=await readBinFile(t,"r1cs",1),u=await readR1csHeader(c,d,!1),g=await createBinFile(i,"zkey",1,10,1<<22,1<<24),f=2*s.G1.F.n8,h=2*s.G2.F.n8;if(u.prime!=s.r)return a&&a.error("r1cs curve does not match powers of tau ceremony curve"),-1;const _=log2(u.nConstraints+u.nPubInputs+u.nOutputs+1-1)+1;if(_>l)return a&&a.error(`circuit too big for this power of tau ceremony. ${u.nConstraints}*2 > 2**${l}`),-1;if(!r[12])return a&&a.error("Powers of tau is not prepared."),-1;const p=u.nOutputs+u.nPubInputs,m=2**_;await startWriteSection(g,1),await g.writeULE32(1),await endWriteSection(g),await startWriteSection(g,2);const b=s.q,L=8*(Math.floor((Scalar.bitLength(b)-1)/64)+1),w=s.r,y=8*(Math.floor((Scalar.bitLength(w)-1)/64)+1),A=Scalar.mod(Scalar.shl(1,8*y),w),I=s.Fr.e(Scalar.mod(Scalar.mul(A,A),w));let C,B,E;await g.writeULE32(L),await writeBigInt(g,b,L),await g.writeULE32(y),await writeBigInt(g,w,y),await g.writeULE32(u.nVars),await g.writeULE32(p),await g.writeULE32(m),C=await n.read(f,r[4][0].p),await g.write(C),C=await s.G1.batchLEMtoU(C),o.update(C),B=await n.read(f,r[5][0].p),await g.write(B),B=await s.G1.batchLEMtoU(B),o.update(B),E=await n.read(h,r[6][0].p),await g.write(E),E=await s.G2.batchLEMtoU(E),o.update(E);const F=new Uint8Array(f);s.G1.toRprLEM(F,0,s.G1.g);const S=new Uint8Array(h);s.G2.toRprLEM(S,0,s.G2.g);const v=new Uint8Array(f);s.G1.toRprUncompressed(v,0,s.G1.g);const x=new Uint8Array(h);s.G2.toRprUncompressed(x,0,s.G2.g),await g.write(S),await g.write(F),await g.write(S),o.update(x),o.update(v),o.update(x),await endWriteSection(g),a&&a.info("Reading r1cs");let $=await readSection(c,d,2);const P=new BigArray(u.nVars),G=new BigArray(u.nVars),R=new BigArray(u.nVars),O=new BigArray(u.nVars-p-1),U=new Array(p+1);a&&a.info("Reading tauG1");let q=await readSection(n,r,12,(m-1)*f,m*f);a&&a.info("Reading tauG2");let z=await readSection(n,r,13,(m-1)*h,m*h);a&&a.info("Reading alphatauG1");let M=await readSection(n,r,14,(m-1)*f,m*f);a&&a.info("Reading betatauG1");let T=await readSection(n,r,15,(m-1)*f,m*f);await async function(){const t=new Uint8Array(12+s.Fr.n8),e=new DataView(t.buffer),i=new Uint8Array(s.Fr.n8);s.Fr.toRprLE(i,0,s.Fr.e(1));let o=0;function n(){const t=$.slice(o,o+4);o+=4;return new DataView(t.buffer).getUint32(0,!0)}const r=new BigArray;for(let t=0;t<u.nConstraints;t++){a&&t%1e4==0&&a.debug(`processing constraints: ${t}/${u.nConstraints}`);const e=n();for(let i=0;i<e;i++){const e=n(),i=o;o+=s.Fr.n8;const a=0,l=f*t,c=3,d=f*t;void 0===P[e]&&(P[e]=[]),P[e].push([a,l,i]),e<=p?(void 0===U[e]&&(U[e]=[]),U[e].push([c,d,i])):(void 0===O[e-p-1]&&(O[e-p-1]=[]),O[e-p-1].push([c,d,i])),r.push([0,t,e,i])}const i=n();for(let e=0;e<i;e++){const e=n(),i=o;o+=s.Fr.n8;const a=0,l=f*t,c=1,d=h*t,u=2,g=f*t;void 0===G[e]&&(G[e]=[]),G[e].push([a,l,i]),void 0===R[e]&&(R[e]=[]),R[e].push([c,d,i]),e<=p?(void 0===U[e]&&(U[e]=[]),U[e].push([u,g,i])):(void 0===O[e-p-1]&&(O[e-p-1]=[]),O[e-p-1].push([u,g,i])),r.push([1,t,e,i])}const l=n();for(let e=0;e<l;e++){const e=n(),i=o;o+=s.Fr.n8;const a=0,r=f*t;e<=p?(void 0===U[e]&&(U[e]=[]),U[e].push([a,r,i])):(void 0===O[e-p-1]&&(O[e-p-1]=[]),O[e-p-1].push([a,r,i]))}}for(let t=0;t<=p;t++){const e=0,i=f*(u.nConstraints+t),a=3,o=f*(u.nConstraints+t);void 0===P[t]&&(P[t]=[]),P[t].push([e,i,-1]),void 0===U[t]&&(U[t]=[]),U[t].push([a,o,-1]),r.push([0,u.nConstraints+t,t,-1])}await startWriteSection(g,4);const l=new BigBuffer(r.length*(12+s.Fr.n8)+4),c=new Uint8Array(4);new DataView(c.buffer).setUint32(0,r.length,!0),l.set(c);let d=4;for(let t=0;t<r.length;t++)a&&t%1e5==0&&a.debug(`writing coeffs: ${t}/${r.length}`),_(r[t]);function _(a){let o;e.setUint32(0,a[0],!0),e.setUint32(4,a[1],!0),e.setUint32(8,a[2],!0),o=a[3]>=0?s.Fr.fromRprLE($.slice(a[3],a[3]+s.Fr.n8),0):s.Fr.fromRprLE(i,0);const n=s.Fr.mul(o,I);s.Fr.toRprLE(t,12,n),l.set(t,d),d+=t.length}await g.write(l),await endWriteSection(g)}(),await k(3,"G1",U,"IC"),await async function(){await startWriteSection(g,9);const t=new BigBuffer(m*f);if(_<s.Fr.s){let e=await readSection(n,r,12,(2*m-1)*f,2*m*f);for(let i=0;i<m;i++){a&&i%1e4==0&&a.debug(`spliting buffer: ${i}/${m}`);const o=e.slice((2*i+1)*f,(2*i+1)*f+f);t.set(o,i*f)}}else{if(_!=s.Fr.s)throw a&&a.error("Circuit too big"),new Error("Circuit too big for this curve");{const e=r[12][0].p+(2**(_+1)-1)*f;await n.readToBuffer(t,0,m*f,e+m*f)}}await g.write(t),await endWriteSection(g)}(),await async function(){K(m-1);for(let t=0;t<m-1;t+=16384){a&&a.debug(`HashingHPoints: ${t}/${m}`);const e=Math.min(m-1,16384);await N(t,e)}}(),await k(8,"G1",O,"C"),await k(5,"G1",P,"A"),await k(6,"G1",G,"B1"),await k(7,"G2",R,"B2");const Q=o.digest();return await startWriteSection(g,10),await g.write(Q),await g.writeULE32(0),await endWriteSection(g),a&&a.info(formatHash(Q,"Circuit hash: ")),await g.close(),await c.close(),await n.close(),Q;async function k(t,e,i,n){const r=s[e];K(i.length),await startWriteSection(g,t);let l=[],c=0;for(;c<i.length;){let t=0;for(;c<i.length&&t<s.tm.concurrency;){a&&a.debug(`Writing points start ${n}: ${c}/${i.length}`);let o=1,r=i[c]?i[c].length:0;for(;c+o<i.length&&r+(i[c+o]?i[c+o].length:0)<32768&&o<32768;)r+=i[c+o]?i[c+o].length:0,o++;const s=i.slice(c,c+o),d=c;l.push(H(e,s,a,n).then((t=>(a&&a.debug(`Writing points end ${n}: ${d}/${i.length}`),t)))),c+=o,t++}const d=await Promise.all(l);for(let t=0;t<d.length;t++){await g.write(d[t][0]);const e=await r.batchLEMtoU(d[t][0]);o.update(e)}l=[]}await endWriteSection(g)}async function H(t,e,i,a){const o=s[t],n=2*o.F.n8,r=3*o.F.n8,l=2*o.F.n8;let c,d,u,g;if("G1"==t)c="g1m_timesScalarAffine",d="g1m_multiexpAffine",u="g1m_batchToAffine",g="g1m_zero";else{if("G2"!=t)throw new Error("Invalid group");c="g2m_timesScalarAffine",d="g2m_multiexpAffine",u="g2m_batchToAffine",g="g2m_zero"}let f,h,_=0;for(let t=0;t<e.length;t++)_+=e[t]?e[t].length:0;_>32768?(f=new BigBuffer(_*n),h=new BigBuffer(_*s.Fr.n8)):(f=new Uint8Array(_*n),h=new Uint8Array(_*s.Fr.n8));let p=0,m=0;const b=[q,z,M,T],L=new Uint8Array(s.Fr.n8);s.Fr.toRprLE(L,0,s.Fr.e(1));let w=0;for(let t=0;t<e.length;t++)if(e[t])for(let o=0;o<e[t].length;o++)i&&o&&o%1e4==0&&i.debug(`Configuring big array ${a}: ${o}/${e[t].length}`),f.set(b[e[t][o][0]].slice(e[t][o][1],e[t][o][1]+n),w*n),e[t][o][2]>=0?h.set($.slice(e[t][o][2],e[t][o][2]+s.Fr.n8),w*s.Fr.n8):h.set(L,w*s.Fr.n8),w++;if(e.length>1){const t=[];t.push({cmd:"ALLOCSET",var:0,buff:f}),t.push({cmd:"ALLOCSET",var:1,buff:h}),t.push({cmd:"ALLOC",var:2,len:e.length*r}),p=0,m=0;let i=0;for(let a=0;a<e.length;a++)e[a]?(1==e[a].length?t.push({cmd:"CALL",fnName:c,params:[{var:0,offset:p},{var:1,offset:m},{val:s.Fr.n8},{var:2,offset:i}]}):t.push({cmd:"CALL",fnName:d,params:[{var:0,offset:p},{var:1,offset:m},{val:s.Fr.n8},{val:e[a].length},{var:2,offset:i}]}),p+=n*e[a].length,m+=s.Fr.n8*e[a].length,i+=r):(t.push({cmd:"CALL",fnName:g,params:[{var:2,offset:i}]}),i+=r);t.push({cmd:"CALL",fnName:u,params:[{var:2},{val:e.length},{var:2}]}),t.push({cmd:"GET",out:0,var:2,len:e.length*l});return await s.tm.queueAction(t)}{let t=await o.multiExpAffine(f,h,i,a);return t=[o.toAffine(t)],t}}async function N(t,e){const i=await n.read(e*f,r[2][0].p+(t+m)*f),a=await n.read(e*f,r[2][0].p+t*f),l=s.tm.concurrency,c=Math.floor(e/l),d=[];for(let t=0;t<l;t++){let o;if(o=t<l-1?c:e-t*c,0==o)continue;const n=i.slice(t*c*f,(t*c+o)*f),r=a.slice(t*c*f,(t*c+o)*f);d.push(D(n,r))}const u=await Promise.all(d);for(let t=0;t<u.length;t++)o.update(u[t][0])}async function D(t,e){const i=t.byteLength/f,a=3*s.G1.F.n8,o=[];o.push({cmd:"ALLOCSET",var:0,buff:t}),o.push({cmd:"ALLOCSET",var:1,buff:e}),o.push({cmd:"ALLOC",var:2,len:i*a});for(let t=0;t<i;t++)o.push({cmd:"CALL",fnName:"g1m_subAffine",params:[{var:0,offset:t*f},{var:1,offset:t*f},{var:2,offset:t*a}]});o.push({cmd:"CALL",fnName:"g1m_batchToAffine",params:[{var:2},{val:i},{var:2}]}),o.push({cmd:"CALL",fnName:"g1m_batchLEMtoU",params:[{var:2},{val:i},{var:2}]}),o.push({cmd:"GET",out:0,var:2,len:i*f});return await s.tm.queueAction(o)}function K(t){const e=new Uint8Array(4);new DataView(e.buffer,e.byteOffset,e.byteLength).setUint32(0,t,!1),o.update(e)}}async function phase2exportMPCParams(t,e,i){const{fd:a,sections:o}=await readBinFile(t,"zkey",2),n=await readHeader$1(a,o);if("groth16"!=n.protocol)throw new Error("zkey file is not groth16");const r=await getCurveFromQ(n.q),s=2*r.G1.F.n8,l=2*r.G2.F.n8,c=await readMPCParams(a,r,o),d=await createOverride(e);let u;await b(n.vk_alpha_1),await b(n.vk_beta_1),await L(n.vk_beta_2),await L(n.vk_gamma_2),await b(n.vk_delta_1),await L(n.vk_delta_2),u=await readSection(a,o,3),u=await r.G1.batchLEMtoU(u),await w("G1",u);const g=await readSection(a,o,9);let f,h,_,p,m;f=await r.G1.fft(g,"affine","jacobian",i),f=await r.G1.batchApplyKey(f,r.Fr.neg(r.Fr.e(2)),r.Fr.w[n.power+1],"jacobian","affine",i),f=f.slice(0,f.byteLength-s),f=await r.G1.batchLEMtoU(f),await w("G1",f),h=await readSection(a,o,8),h=await r.G1.batchLEMtoU(h),await w("G1",h),_=await readSection(a,o,5),_=await r.G1.batchLEMtoU(_),await w("G1",_),p=await readSection(a,o,6),p=await r.G1.batchLEMtoU(p),await w("G1",p),m=await readSection(a,o,7),m=await r.G2.batchLEMtoU(m),await w("G2",m),await d.write(c.csHash),await async function(t){const e=new Uint8Array(4);new DataView(e.buffer,e.byteOffset,e.byteLength).setUint32(0,t,!1),await d.write(e)}(c.contributions.length);for(let t=0;t<c.contributions.length;t++){const e=c.contributions[t];await b(e.deltaAfter),await b(e.delta.g1_s),await b(e.delta.g1_sx),await L(e.delta.g2_spx),await d.write(e.transcript)}async function b(t){const e=new Uint8Array(s);r.G1.toRprUncompressed(e,0,t),await d.write(e)}async function L(t){const e=new Uint8Array(l);r.G2.toRprUncompressed(e,0,t),await d.write(e)}async function w(t,e){let i;i="G1"==t?s:l;const a=new Uint8Array(4);new DataView(a.buffer,a.byteOffset,a.byteLength).setUint32(0,e.byteLength/i,!1),await d.write(a),await d.write(e)}await a.close(),await d.close()}async function phase2importMPCParams(t,e,i,a,o){const{fd:n,sections:r}=await readBinFile(t,"zkey",2),s=await readHeader$1(n,r,!1);if("groth16"!=s.protocol)throw new Error("zkey file is not groth16");const l=await getCurveFromQ(s.q),c=2*l.G1.F.n8,d=2*l.G2.F.n8,u=await readMPCParams(n,l,r),g={},f=await readExisting(e);f.pos=3*c+3*d+8+c*s.nVars+4+c*(s.domainSize-1)+4+c*s.nVars+4+c*s.nVars+4+d*s.nVars,g.csHash=await f.read(64);const h=await f.readUBE32();g.contributions=[];for(let t=0;t<h;t++){const e={delta:{}};e.deltaAfter=await A(f),e.delta.g1_s=await A(f),e.delta.g1_sx=await A(f),e.delta.g2_spx=await I(f),e.transcript=await f.read(64),t<u.contributions.length&&(e.type=u.contributions[t].type,1==e.type&&(e.beaconHash=u.contributions[t].beaconHash,e.numIterationsExp=u.contributions[t].numIterationsExp),u.contributions[t].name&&(e.name=u.contributions[t].name)),g.contributions.push(e)}if(!hashIsEqual(g.csHash,u.csHash))return o&&o.error("Hash of the original circuit does not match with the MPC one"),!1;if(u.contributions.length>g.contributions.length)return o&&o.error("The impoerted file does not include new contributions"),!1;for(let t=0;t<u.contributions.length;t++)if(!C(u.contributions[t],g.contributions[t]))return o&&o.error(`Previos contribution ${t} does not match`),!1;if(a)for(let t=u.contributions.length;t<g.contributions.length;t++)g.contributions[t].name=a;const _=await createBinFile(i,"zkey",1,10);f.pos=0,f.pos+=c,f.pos+=c,f.pos+=d,f.pos+=d,s.vk_delta_1=await A(f),s.vk_delta_2=await I(f),await writeHeader(_,s);if(await f.readUBE32()!=s.nPublic+1)return o&&o.error("Invalid number of points in IC"),await _.discard(),!1;f.pos+=c*(s.nPublic+1),await copySection(n,r,_,3),await copySection(n,r,_,4);if(await f.readUBE32()!=s.domainSize-1)return o&&o.error("Invalid number of points in H"),await _.discard(),!1;let p;const m=await f.read(c*(s.domainSize-1)),b=await l.G1.batchUtoLEM(m);p=new Uint8Array(s.domainSize*c),p.set(b),l.G1.toRprLEM(p,c*(s.domainSize-1),l.G1.zeroAffine);const L=l.Fr.neg(l.Fr.inv(l.Fr.e(2))),w=l.Fr.inv(l.Fr.w[s.power+1]);p=await l.G1.batchApplyKey(p,L,w,"affine","jacobian",o),p=await l.G1.ifft(p,"jacobian","affine",o),await startWriteSection(_,9),await _.write(p),await endWriteSection(_);if(await f.readUBE32()!=s.nVars-s.nPublic-1)return o&&o.error("Invalid number of points in L"),await _.discard(),!1;let y;y=await f.read(c*(s.nVars-s.nPublic-1)),y=await l.G1.batchUtoLEM(y),await startWriteSection(_,8),await _.write(y),await endWriteSection(_);if(await f.readUBE32()!=s.nVars)return o&&o.error("Invalid number of points in A"),await _.discard(),!1;f.pos+=c*s.nVars,await copySection(n,r,_,5);if(await f.readUBE32()!=s.nVars)return o&&o.error("Invalid number of points in B1"),await _.discard(),!1;f.pos+=c*s.nVars,await copySection(n,r,_,6);return await f.readUBE32()!=s.nVars?(o&&o.error("Invalid number of points in B2"),await _.discard(),!1):(f.pos+=d*s.nVars,await copySection(n,r,_,7),await writeMPCParams(_,l,g),await f.close(),await _.close(),await n.close(),!0);async function A(t){const e=await t.read(2*l.G1.F.n8);return l.G1.fromRprUncompressed(e,0)}async function I(t){const e=await t.read(2*l.G2.F.n8);return l.G2.fromRprUncompressed(e,0)}function C(t,e){return!!l.G1.eq(t.deltaAfter,e.deltaAfter)&&(!!l.G1.eq(t.delta.g1_s,e.delta.g1_s)&&(!!l.G1.eq(t.delta.g1_sx,e.delta.g1_sx)&&(!!l.G2.eq(t.delta.g2_spx,e.delta.g2_spx)&&!!hashIsEqual(t.transcript,e.transcript))))}}const sameRatio=sameRatio$2;async function phase2verifyFromInit(t,e,i,a){let o;await blake2bWasm.exports.ready();const{fd:n,sections:r}=await readBinFile(i,"zkey",2),s=await readHeader$1(n,r,!1);if("groth16"!=s.protocol)throw new Error("zkey file is not groth16");const l=await getCurveFromQ(s.q),c=2*l.G1.F.n8,d=await readMPCParams(n,l,r),u=blake2bWasm.exports(64);u.update(d.csHash);let g=l.G1.g;for(let t=0;t<d.contributions.length;t++){const e=d.contributions[t],i=cloneHasher(u);if(hashG1(i,l,e.delta.g1_s),hashG1(i,l,e.delta.g1_sx),!hashIsEqual(i.digest(),e.transcript))return console.log(`INVALID(${t}): Inconsistent transcript `),!1;const a=hashToG2(l,e.transcript);if(o=await sameRatio(l,e.delta.g1_s,e.delta.g1_sx,a,e.delta.g2_spx),!0!==o)return console.log(`INVALID(${t}): public key G1 and G2 do not have the same ration `),!1;if(o=await sameRatio(l,g,e.deltaAfter,a,e.delta.g2_spx),!0!==o)return console.log(`INVALID(${t}): deltaAfter does not fillow the public key `),!1;if(1==e.type){const i=rngFromBeaconParams(e.beaconHash,e.numIterationsExp),a=l.Fr.fromRng(i),o=l.G1.toAffine(l.G1.fromRng(i)),n=l.G1.toAffine(l.G1.timesFr(o,a));if(!0!==l.G1.eq(o,e.delta.g1_s))return console.log(`INVALID(${t}): Key of the beacon does not match. g1_s `),!1;if(!0!==l.G1.eq(n,e.delta.g1_sx))return console.log(`INVALID(${t}): Key of the beacon does not match. g1_sx `),!1}hashPubKey(u,l,e);const n=blake2bWasm.exports(64);hashPubKey(n,l,e),e.contributionHash=n.digest(),g=e.deltaAfter}const{fd:f,sections:h}=await readBinFile(t,"zkey",2),_=await readHeader$1(f,h,!1);if("groth16"!=_.protocol)throw new Error("zkeyinit file is not groth16");if(!Scalar.eq(_.q,s.q)||!Scalar.eq(_.r,s.r)||_.n8q!=s.n8q||_.n8r!=s.n8r)return a&&a.error("INVALID:  Different curves"),!1;if(_.nVars!=s.nVars||_.nPublic!=s.nPublic||_.domainSize!=s.domainSize)return a&&a.error("INVALID:  Different circuit parameters"),!1;if(!l.G1.eq(s.vk_alpha_1,_.vk_alpha_1))return a&&a.error("INVALID:  Invalid alpha1"),!1;if(!l.G1.eq(s.vk_beta_1,_.vk_beta_1))return a&&a.error("INVALID:  Invalid beta1"),!1;if(!l.G2.eq(s.vk_beta_2,_.vk_beta_2))return a&&a.error("INVALID:  Invalid beta2"),!1;if(!l.G2.eq(s.vk_gamma_2,_.vk_gamma_2))return a&&a.error("INVALID:  Invalid gamma2"),!1;if(!l.G1.eq(s.vk_delta_1,g))return a&&a.error("INVALID:  Invalid delta1"),!1;if(o=await sameRatio(l,l.G1.g,g,l.G2.g,s.vk_delta_2),!0!==o)return a&&a.error("INVALID:  Invalid delta2"),!1;const p=await readMPCParams(f,l,h);if(!hashIsEqual(d.csHash,p.csHash))return a&&a.error("INVALID:  Circuit does not match"),!1;if(r[8][0].size!=c*(s.nVars-s.nPublic-1))return a&&a.error("INVALID:  Invalid L section size"),!1;if(r[9][0].size!=c*s.domainSize)return a&&a.error("INVALID:  Invalid H section size"),!1;let m;if(m=await sectionIsEqual(n,r,f,h,3),!m)return a&&a.error("INVALID:  IC section is not identical"),!1;if(m=await sectionIsEqual(n,r,f,h,4),!m)return a&&a.error("Coeffs section is not identical"),!1;if(m=await sectionIsEqual(n,r,f,h,5),!m)return a&&a.error("A section is not identical"),!1;if(m=await sectionIsEqual(n,r,f,h,6),!m)return a&&a.error("B1 section is not identical"),!1;if(m=await sectionIsEqual(n,r,f,h,7),!m)return a&&a.error("B2 section is not identical"),!1;if(o=await async function(t,e,i,n,r,s,c,d,u){const g=1<<20,f=l[t],h=2*f.F.n8;await startReadUniqueSection(e,i,s),await startReadUniqueSection(n,r,s);let _=f.zero,p=f.zero;const m=i[s][0].size/h;for(let t=0;t<m;t+=g){a&&a.debug(`Same ratio check ${u}:  ${t}/${m}`);const i=Math.min(m-t,g),o=await e.read(i*h),r=await n.read(i*h),s=new Uint8Array(4*i);crypto.randomFillSync(s);const l=await f.multiExpAffine(o,s),c=await f.multiExpAffine(r,s);_=f.add(_,l),p=f.add(p,c)}return await endReadSection(e),await endReadSection(n),0==m||(o=await sameRatio(l,_,p,c,d),!0===o)}("G1",f,h,n,r,8,s.vk_delta_2,_.vk_delta_2,"L section"),!0!==o)return a&&a.error("L section does not match"),!1;if(o=await async function(){const t=1<<20,i=l.G1,c=l.Fr,d=2*i.F.n8,{fd:u,sections:g}=await readBinFile(e,"ptau",1);let f=new BigBuffer(s.domainSize*s.n8r);const h=new Array(8);for(let t=0;t<8;t++)h[t]=crypto.randomBytes(4).readUInt32BE(0,!0);const p=new ChaCha(h);for(let t=0;t<s.domainSize-1;t++){const e=c.fromRng(p);c.toRprLE(f,t*s.n8r,e)}c.toRprLE(f,(s.domainSize-1)*s.n8r,c.zero);let m,L=i.zero;for(let e=0;e<s.domainSize;e+=t){a&&a.debug(`H Verificaition(tau):  ${e}/${s.domainSize}`);const o=Math.min(s.domainSize-e,t),n=await u.read(d*o,g[2][0].p+s.domainSize*d+e*d),r=await u.read(d*o,g[2][0].p+e*d),l=await b(n,r),c=f.slice(e*s.n8r,(e+o)*s.n8r),h=await i.multiExpAffine(l,c);L=i.add(L,h)}if(f=await c.batchToMontgomery(f),s.power<c.s)m=c.neg(c.e(2));else{const t=2**c.s,e=c.exp(c.shift,t);m=c.sub(e,c.one)}const w=s.power<c.s?c.w[s.power+1]:c.shift;f=await c.batchApplyKey(f,m,w),f=await c.fft(f),f=await c.batchFromMontgomery(f),await startReadUniqueSection(n,r,9);let y=i.zero;for(let e=0;e<s.domainSize;e+=t){a&&a.debug(`H Verificaition(lagrange):  ${e}/${s.domainSize}`);const o=Math.min(s.domainSize-e,t),r=await n.read(d*o),l=f.slice(e*s.n8r,(e+o)*s.n8r),c=await i.multiExpAffine(r,l);y=i.add(y,c)}return await endReadSection(n),o=await sameRatio(l,L,y,s.vk_delta_2,_.vk_delta_2),!0===o}(),!0!==o)return a&&a.error("H section does not match"),!1;a&&a.info(formatHash(d.csHash,"Circuit Hash: ")),await n.close(),await f.close();for(let t=d.contributions.length-1;t>=0;t--){const e=d.contributions[t];a&&a.info("-------------------------"),a&&a.info(formatHash(e.contributionHash,`contribution #${t+1} ${e.name?e.name:""}:`)),1==e.type&&(a&&a.info(`Beacon generator: ${byteArray2hex(e.beaconHash)}`),a&&a.info(`Beacon iterations Exp: ${e.numIterationsExp}`))}return a&&a.info("-------------------------"),a&&a.info("ZKey Ok!"),!0;async function b(t,e){const i=2*l.G1.F.n8,a=t.byteLength/i,o=l.tm.concurrency,n=Math.floor(a/o),r=[];for(let i=0;i<o;i++){let s;if(s=i<o-1?n:a-i*n,0==s)continue;const l=t.slice(i*n*c,(i*n+s)*c),d=e.slice(i*n*c,(i*n+s)*c);r.push(L(l,d))}const s=await Promise.all(r),d=new Uint8Array(a*i);let u=0;for(let t=0;t<s.length;t++)d.set(s[t][0],u),u+=s[t][0].byteLength;return d}async function L(t,e){const i=2*l.G1.F.n8,a=3*l.G1.F.n8,o=t.byteLength/i,n=[];n.push({cmd:"ALLOCSET",var:0,buff:t}),n.push({cmd:"ALLOCSET",var:1,buff:e}),n.push({cmd:"ALLOC",var:2,len:o*a});for(let t=0;t<o;t++)n.push({cmd:"CALL",fnName:"g1m_subAffine",params:[{var:0,offset:t*i},{var:1,offset:t*i},{var:2,offset:t*a}]});n.push({cmd:"CALL",fnName:"g1m_batchToAffine",params:[{var:2},{val:o},{var:2}]}),n.push({cmd:"GET",out:0,var:2,len:o*i});return await l.tm.queueAction(n)}}async function phase2verifyFromR1cs(t,e,i,a){const o={type:"bigMem"};return await newZKey(t,e,o,a),await phase2verifyFromInit(o,e,i,a)}async function phase2contribute(t,e,i,a,o){await blake2bWasm.exports.ready();const{fd:n,sections:r}=await readBinFile(t,"zkey",2),s=await readHeader$1(n,r);if("groth16"!=s.protocol)throw new Error("zkey file is not groth16");const l=await getCurveFromQ(s.q),c=await readMPCParams(n,l,r),d=await createBinFile(e,"zkey",1,10),u=await getRandomRng(a),g=blake2bWasm.exports(64);g.update(c.csHash);for(let t=0;t<c.contributions.length;t++)hashPubKey(g,l,c.contributions[t]);const f={delta:{}};f.delta.prvKey=l.Fr.fromRng(u),f.delta.g1_s=l.G1.toAffine(l.G1.fromRng(u)),f.delta.g1_sx=l.G1.toAffine(l.G1.timesFr(f.delta.g1_s,f.delta.prvKey)),hashG1(g,l,f.delta.g1_s),hashG1(g,l,f.delta.g1_sx),f.transcript=g.digest(),f.delta.g2_sp=hashToG2(l,f.transcript),f.delta.g2_spx=l.G2.toAffine(l.G2.timesFr(f.delta.g2_sp,f.delta.prvKey)),s.vk_delta_1=l.G1.timesFr(s.vk_delta_1,f.delta.prvKey),s.vk_delta_2=l.G2.timesFr(s.vk_delta_2,f.delta.prvKey),f.deltaAfter=s.vk_delta_1,f.type=0,i&&(f.name=i),c.contributions.push(f),await writeHeader(d,s),await copySection(n,r,d,3),await copySection(n,r,d,4),await copySection(n,r,d,5),await copySection(n,r,d,6),await copySection(n,r,d,7);const h=l.Fr.inv(f.delta.prvKey);await applyKeyToSection(n,r,d,8,l,"G1",h,l.Fr.e(1),"L Section",o),await applyKeyToSection(n,r,d,9,l,"G1",h,l.Fr.e(1),"H Section",o),await writeMPCParams(d,l,c),await n.close(),await d.close();const _=blake2bWasm.exports(64);hashPubKey(_,l,f);const p=_.digest();return o&&o.info(formatHash(c.csHash,"Circuit Hash: ")),o&&o.info(formatHash(p,"Contribution Hash: ")),p}async function beacon(t,e,i,a,o,n){await blake2bWasm.exports.ready();const r=hex2ByteArray(a);if(0==r.byteLength||2*r.byteLength!=a.length)return n&&n.error("Invalid Beacon Hash. (It must be a valid hexadecimal sequence)"),!1;if(r.length>=256)return n&&n.error("Maximum lenght of beacon hash is 255 bytes"),!1;if((o=parseInt(o))<10||o>63)return n&&n.error("Invalid numIterationsExp. (Must be between 10 and 63)"),!1;const{fd:s,sections:l}=await readBinFile(t,"zkey",2),c=await readHeader$1(s,l);if("groth16"!=c.protocol)throw new Error("zkey file is not groth16");const d=await getCurveFromQ(c.q),u=await readMPCParams(s,d,l),g=await createBinFile(e,"zkey",1,10),f=await rngFromBeaconParams(r,o),h=blake2bWasm.exports(64);h.update(u.csHash);for(let t=0;t<u.contributions.length;t++)hashPubKey(h,d,u.contributions[t]);const _={delta:{}};_.delta.prvKey=d.Fr.fromRng(f),_.delta.g1_s=d.G1.toAffine(d.G1.fromRng(f)),_.delta.g1_sx=d.G1.toAffine(d.G1.timesFr(_.delta.g1_s,_.delta.prvKey)),hashG1(h,d,_.delta.g1_s),hashG1(h,d,_.delta.g1_sx),_.transcript=h.digest(),_.delta.g2_sp=hashToG2(d,_.transcript),_.delta.g2_spx=d.G2.toAffine(d.G2.timesFr(_.delta.g2_sp,_.delta.prvKey)),c.vk_delta_1=d.G1.timesFr(c.vk_delta_1,_.delta.prvKey),c.vk_delta_2=d.G2.timesFr(c.vk_delta_2,_.delta.prvKey),_.deltaAfter=c.vk_delta_1,_.type=1,_.numIterationsExp=o,_.beaconHash=r,i&&(_.name=i),u.contributions.push(_),await writeHeader(g,c),await copySection(s,l,g,3),await copySection(s,l,g,4),await copySection(s,l,g,5),await copySection(s,l,g,6),await copySection(s,l,g,7);const p=d.Fr.inv(_.delta.prvKey);await applyKeyToSection(s,l,g,8,d,"G1",p,d.Fr.e(1),"L Section",n),await applyKeyToSection(s,l,g,9,d,"G1",p,d.Fr.e(1),"H Section",n),await writeMPCParams(g,d,u),await s.close(),await g.close();const m=blake2bWasm.exports(64);hashPubKey(m,d,_);const b=m.digest();return n&&n.info(formatHash(b,"Contribution Hash: ")),b}async function zkeyExportJson(t){const e=await readZKey(t,!0);return delete e.curve,delete e.F,utils.stringifyBigInts(e)}async function bellmanContribute(t,e,i,a,o){await blake2bWasm.exports.ready();const n=await getRandomRng(a),r=t.Fr.fromRng(n),s=t.Fr.inv(r),l=2*t.G1.F.n8,c=2*t.G2.F.n8,d=await readExisting(e),u=await createOverride(i);await S(l),await S(l),await S(c),await S(c);const g=await v(),f=t.G1.timesFr(g,r);await $(f);const h=await x(),_=t.G2.timesFr(h,r);await P(_);const p=await d.readUBE32();await u.writeUBE32(p),await S(p*l);const m=await d.readUBE32();await u.writeUBE32(m),await applyKeyToChallengeSection(d,u,null,t,"G1",m,s,t.Fr.e(1),"UNCOMPRESSED","H",o);const b=await d.readUBE32();await u.writeUBE32(b),await applyKeyToChallengeSection(d,u,null,t,"G1",b,s,t.Fr.e(1),"UNCOMPRESSED","L",o);const L=await d.readUBE32();await u.writeUBE32(L),await S(L*l);const w=await d.readUBE32();await u.writeUBE32(w),await S(w*l);const y=await d.readUBE32();await u.writeUBE32(y),await S(y*c);const A=blake2bWasm.exports(64),I={};I.csHash=await d.read(64),A.update(I.csHash);const C=await d.readUBE32();I.contributions=[];for(let e=0;e<C;e++){const e={delta:{}};e.deltaAfter=await v(),e.delta.g1_s=await v(),e.delta.g1_sx=await v(),e.delta.g2_spx=await x(),e.transcript=await d.read(64),I.contributions.push(e),hashPubKey(A,t,e)}const B={delta:{}};B.delta.prvKey=r,B.delta.g1_s=t.G1.toAffine(t.G1.fromRng(n)),B.delta.g1_sx=t.G1.toAffine(t.G1.timesFr(B.delta.g1_s,r)),hashG1(A,t,B.delta.g1_s),hashG1(A,t,B.delta.g1_sx),B.transcript=A.digest(),B.delta.g2_sp=hashToG2(t,B.transcript),B.delta.g2_spx=t.G2.toAffine(t.G2.timesFr(B.delta.g2_sp,r)),B.deltaAfter=f,B.type=0,I.contributions.push(B),await u.write(I.csHash),await u.writeUBE32(I.contributions.length);for(let t=0;t<I.contributions.length;t++){const e=I.contributions[t];await $(e.deltaAfter),await $(e.delta.g1_s),await $(e.delta.g1_sx),await P(e.delta.g2_spx),await u.write(e.transcript)}const E=blake2bWasm.exports(64);hashPubKey(E,t,B);const F=E.digest();return o&&o.info(formatHash(F,"Contribution Hash: ")),await u.close(),await d.close(),F;async function S(t){const e=2*d.pageSize;for(let i=0;i<t;i+=e){const a=Math.min(t-i,e),o=await d.read(a);await u.write(o)}}async function v(){const e=await d.read(2*t.G1.F.n8);return t.G1.fromRprUncompressed(e,0)}async function x(){const e=await d.read(2*t.G2.F.n8);return t.G2.fromRprUncompressed(e,0)}async function $(e){const i=new Uint8Array(l);t.G1.toRprUncompressed(i,0,e),await u.write(i)}async function P(e){const i=new Uint8Array(c);t.G2.toRprUncompressed(i,0,e),await u.write(i)}}const{stringifyBigInts:stringifyBigInts$1}=utils;async function zkeyExportVerificationKey(t){const{fd:e,sections:i}=await readBinFile(t,"zkey",2),a=await readHeader$1(e,i);let o;if("groth16"==a.protocol)o=await groth16Vk(a,e,i);else{if("plonk"!=a.protocol)throw new Error("zkey file is not groth16");o=await plonkVk(a)}return await e.close(),o}async function groth16Vk(t,e,i){const a=await getCurveFromQ(t.q),o=2*a.G1.F.n8,n=await a.pairing(t.vk_alpha_1,t.vk_beta_2);let r={protocol:t.protocol,curve:a.name,nPublic:t.nPublic,vk_alpha_1:a.G1.toObject(t.vk_alpha_1),vk_beta_2:a.G2.toObject(t.vk_beta_2),vk_gamma_2:a.G2.toObject(t.vk_gamma_2),vk_delta_2:a.G2.toObject(t.vk_delta_2),vk_alphabeta_12:a.Gt.toObject(n)};await startReadUniqueSection(e,i,3),r.IC=[];for(let i=0;i<=t.nPublic;i++){const t=await e.read(o),i=a.G1.toObject(t);r.IC.push(i)}return await endReadSection(e),r=stringifyBigInts$1(r),r}async function plonkVk(t){const e=await getCurveFromQ(t.q);let i={protocol:t.protocol,curve:e.name,nPublic:t.nPublic,power:t.power,k1:e.Fr.toObject(t.k1),k2:e.Fr.toObject(t.k2),Qm:e.G1.toObject(t.Qm),Ql:e.G1.toObject(t.Ql),Qr:e.G1.toObject(t.Qr),Qo:e.G1.toObject(t.Qo),Qc:e.G1.toObject(t.Qc),S1:e.G1.toObject(t.S1),S2:e.G1.toObject(t.S2),S3:e.G1.toObject(t.S3),X_2:e.G2.toObject(t.X_2),w:e.Fr.toObject(e.Fr.w[t.power])};return i=stringifyBigInts$1(i),i}var ejs={};async function exportSolidityVerifier(t,e,i){const a=await zkeyExportVerificationKey(t);let o=e[a.protocol];return ejs.render(o,a)}async function exportScryptVerifier(t,e,i){const a=await zkeyExportVerificationKey(t);let o=e[a.protocol];return ejs.render(o,a)}var zkey=Object.freeze({__proto__:null,newZKey:newZKey,exportBellman:phase2exportMPCParams,importBellman:phase2importMPCParams,verifyFromR1cs:phase2verifyFromR1cs,verifyFromInit:phase2verifyFromInit,contribute:phase2contribute,beacon:beacon,exportJson:zkeyExportJson,bellmanContribute:bellmanContribute,exportVerificationKey:zkeyExportVerificationKey,exportSolidityVerifier:exportSolidityVerifier,exportScryptVerifier:exportScryptVerifier});async function plonkSetup(t,e,i,a){globalThis.gc&&globalThis.gc(),await blake2bWasm.exports.ready();const{fd:o,sections:n}=await readBinFile(e,"ptau",1),{curve:r,power:s}=await readPTauHeader(o,n),{fd:l,sections:c}=await readBinFile(t,"r1cs",1),d=await readR1csFd(l,c,{loadConstraints:!0,loadCustomGates:!0}),u=2*r.G1.F.n8,g=r.G1,f=2*r.G2.F.n8,h=r.Fr,_=r.Fr.n8;a&&a.info("Reading r1cs"),await readSection(l,c,2);const p=new BigArray,m=new BigArray;let b=d.nVars;const L=d.nOutputs+d.nPubInputs;await async function(t,e,i){function a(t){const e=Object.keys(t);for(let i=0;i<e.length;i++)0n==t[e[i]]&&delete t[e[i]]}function o(e,i,o){const n={};for(let a in e)void 0===n[a]?n[a]=t.mul(i,e[a]):n[a]=t.add(n[a],t.mul(i,e[a]));for(let e in o)void 0===n[e]?n[e]=o[e]:n[e]=t.add(n[e],o[e]);return a(n),n}function n(e,i){const a={k:t.zero,s:[],coefs:[]},o=[];for(let i in e)0==i?a.k=t.add(a.k,e[i]):0n!=e[i]&&o.push([Number(i),e[i]]);for(;o.length>i;){const e=o.shift(),i=o.shift(),a=e[0],n=i[0],r=b++,s=t.zero,l=t.neg(e[1]),c=t.neg(i[1]),d=t.one,u=t.zero;p.push([a,n,r,s,l,c,d,u]),m.push([a,n,e[1],i[1]]),o.push([r,t.one])}for(let t=0;t<o.length;t++)a.s[t]=o[t][0],a.coefs[t]=o[t][1];for(;a.coefs.length<i;)a.s.push(0),a.coefs.push(t.zero);return a}function r(e){const i=n(e,3),a=i.s[0],o=i.s[1],r=i.s[2],s=t.zero,l=i.coefs[0],c=i.coefs[1],d=i.coefs[2],u=i.k;p.push([a,o,r,s,l,c,d,u])}function s(e){let i=t.zero,a=0;const o=Object.keys(e);for(let n=0;n<o.length;n++)0n==e[o[n]]?delete e[o[n]]:0==o[n]?i=t.add(i,e[o[n]]):a++;return a>0?a.toString():i!=t.zero?"k":"0"}function l(e,i,l){const c=s(e),d=s(i);if("0"===c||"0"===d)a(l),r(l);else if("k"===c){r(o(i,e[0],l))}else if("k"===d){r(o(e,i[0],l))}else!function(e,i,a){const o=n(e,1),r=n(i,1),s=n(a,1),l=o.s[0],c=r.s[0],d=s.s[0],u=t.mul(o.coefs[0],r.coefs[0]),g=t.mul(o.coefs[0],r.k),f=t.mul(o.k,r.coefs[0]),h=t.neg(s.coefs[0]),_=t.sub(t.mul(o.k,r.k),s.k);p.push([l,c,d,u,g,f,h,_])}(e,i,l)}for(let e=1;e<=L;e++){const i=e,a=0,o=0,n=t.zero,r=t.one,s=t.zero,l=t.zero,c=t.zero;p.push([i,a,o,n,r,s,l,c])}for(let t=0;t<e.constraints.length;t++)i&&t%1e4==0&&i.debug(`processing constraints: ${t}/${e.nConstraints}`),l(...e.constraints[t])}(r.Fr,d,a),globalThis.gc&&globalThis.gc();const w=await createBinFile(i,"zkey",1,14,1<<22,1<<24);if(d.prime!=r.r)return a&&a.error("r1cs curve does not match powers of tau ceremony curve"),-1;let y=log2(p.length-1)+1;y<3&&(y=3);const A=2**y;if(a&&a.info("Plonk constraints: "+p.length),y>s)return a&&a.error(`circuit too big for this power of tau ceremony. ${p.length} > 2**${s}`),-1;if(!n[12])return a&&a.error("Powers of tau is not prepared."),-1;const I=new BigBuffer(A*u),C=n[12][0].p+(2**y-1)*u;await o.readToBuffer(I,0,A*u,C);const[B,E]=function(){let t=h.two;for(;i(t,[],y);)h.add(t,h.one);let e=h.add(t,h.one);for(;i(e,[t],y);)h.add(e,h.one);return[t,e];function i(t,e,i){const a=2**i;let o=h.one;for(let n=0;n<a;n++){if(h.eq(t,o))return!0;for(let i=0;i<e.length;i++)if(h.eq(t,h.mul(e[i],o)))return!0;o=h.mul(o,h.w[i])}return!1}}(),F={};await async function(t,e){await startWriteSection(w,t);const i=new Uint8Array(8+2*_),o=new DataView(i.buffer);for(let t=0;t<m.length;t++){const n=m[t];let r=0;o.setUint32(r,n[0],!0),r+=4,o.setUint32(r,n[1],!0),r+=4,i.set(n[2],r),r+=_,i.set(n[3],r),r+=_,await w.write(i),a&&t%1e6==0&&a.debug(`writing ${e}: ${t}/${m.length}`)}await endWriteSection(w)}(3,"Additions"),globalThis.gc&&globalThis.gc(),await v(4,0,"Amap"),globalThis.gc&&globalThis.gc(),await v(5,1,"Bmap"),globalThis.gc&&globalThis.gc(),await v(6,2,"Cmap"),globalThis.gc&&globalThis.gc(),await x(7,3,"Qm"),globalThis.gc&&globalThis.gc(),await x(8,4,"Ql"),globalThis.gc&&globalThis.gc(),await x(9,5,"Qr"),globalThis.gc&&globalThis.gc(),await x(10,6,"Qo"),globalThis.gc&&globalThis.gc(),await x(11,7,"Qc"),globalThis.gc&&globalThis.gc(),await async function(t,e){const i=new BigBuffer(_*A*3),o=new BigArray(b),n=new BigArray(b);let s=h.one;for(let t=0;t<A;t++)t<p.length?(u(p[t][0],t),u(p[t][1],A+t),u(p[t][2],2*A+t)):(u(0,t),u(0,A+t),u(0,2*A+t)),s=h.mul(s,h.w[y]),a&&t%1e6==0&&a.debug(`writing ${e} phase1: ${t}/${p.length}`);for(let t=0;t<b;t++)void 0!==n[t]?i.set(o[t],n[t]*_):console.log("Variable not used"),a&&t%1e6==0&&a.debug(`writing ${e} phase2: ${t}/${b}`);globalThis.gc&&globalThis.gc();await startWriteSection(w,t);let l=i.slice(0,A*_);await $(l),globalThis.gc&&globalThis.gc();let c=i.slice(A*_,A*_*2);await $(c),globalThis.gc&&globalThis.gc();let d=i.slice(A*_*2,A*_*3);await $(d),globalThis.gc&&globalThis.gc();await endWriteSection(w),l=await h.batchFromMontgomery(l),c=await h.batchFromMontgomery(c),d=await h.batchFromMontgomery(d),F.S1=await r.G1.multiExpAffine(I,l,a,"multiexp S1"),globalThis.gc&&globalThis.gc();F.S2=await r.G1.multiExpAffine(I,c,a,"multiexp S2"),globalThis.gc&&globalThis.gc();F.S3=await r.G1.multiExpAffine(I,d,a,"multiexp S3"),globalThis.gc&&globalThis.gc();function u(t,e){let a;void 0===o[t]?n[t]=e:i.set(o[t],e*_),a=e<A?s:e<2*A?h.mul(s,B):h.mul(s,E),o[t]=a}}(12,"sigma"),globalThis.gc&&globalThis.gc(),await async function(t,e){await startWriteSection(w,t);const i=Math.max(L,1);for(let t=0;t<i;t++){let o=new BigBuffer(A*_);o.set(h.one,t*_),await $(o),a&&a.debug(`writing ${e} ${t}/${i}`)}await endWriteSection(w)}(13,"lagrange polynomials"),globalThis.gc&&globalThis.gc(),await startWriteSection(w,14);const S=new BigBuffer((A+6)*u);return await o.readToBuffer(S,0,(A+6)*u,n[2][0].p),await w.write(S),await endWriteSection(w),globalThis.gc&&globalThis.gc(),await async function(){await startWriteSection(w,1),await w.writeULE32(2),await endWriteSection(w),await startWriteSection(w,2);const t=r.q,e=8*(Math.floor((Scalar.bitLength(t)-1)/64)+1),i=r.r,a=8*(Math.floor((Scalar.bitLength(i)-1)/64)+1);let s;await w.writeULE32(e),await writeBigInt(w,t,e),await w.writeULE32(a),await writeBigInt(w,i,a),await w.writeULE32(b),await w.writeULE32(L),await w.writeULE32(A),await w.writeULE32(m.length),await w.writeULE32(p.length),await w.write(B),await w.write(E),await w.write(g.toAffine(F.Qm)),await w.write(g.toAffine(F.Ql)),await w.write(g.toAffine(F.Qr)),await w.write(g.toAffine(F.Qo)),await w.write(g.toAffine(F.Qc)),await w.write(g.toAffine(F.S1)),await w.write(g.toAffine(F.S2)),await w.write(g.toAffine(F.S3)),s=await o.read(f,n[3][0].p+f),await w.write(s),await endWriteSection(w)}(),await w.close(),await l.close(),await o.close(),void(a&&a.info("Setup Finished"));async function v(t,e,i){await startWriteSection(w,t);for(let t=0;t<p.length;t++)await w.writeULE32(p[t][e]),a&&t%1e6==0&&a.debug(`writing ${i}: ${t}/${p.length}`);await endWriteSection(w)}async function x(t,e,i){let o=new BigBuffer(A*_);for(let t=0;t<p.length;t++)o.set(p[t][e],t*_),a&&t%1e6==0&&a.debug(`writing ${i}: ${t}/${p.length}`);await startWriteSection(w,t),await $(o),await endWriteSection(w),o=await h.batchFromMontgomery(o),F[i]=await r.G1.multiExpAffine(I,o,a,"multiexp "+i)}async function $(t){const e=await h.ifft(t),i=new BigBuffer(A*_*4);i.set(e,0);const a=await h.fft(i);await w.write(e),await w.write(a)}}var sha256$2={exports:{}};
/**
     * [js-sha256]{@link https://github.com/emn178/js-sha256}
     *
     * @version 0.9.0
     * @author Chen, Yi-Cyuan [emn178@gmail.com]
     * @copyright Chen, Yi-Cyuan 2014-2017
     * @license MIT
     */(function(module){(function(){var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=commonjsGlobal:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});var createOutputMethod=function(t,e){return function(i){return new Sha256(e,!0).update(i)[t]()}},createMethod=function(t){var e=createOutputMethod("hex",t);NODE_JS&&(e=nodeWrap(e,t)),e.create=function(){return new Sha256(t)},e.update=function(t){return e.create().update(t)};for(var i=0;i<OUTPUT_TYPES.length;++i){var a=OUTPUT_TYPES[i];e[a]=createOutputMethod(a,t)}return e},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(t){if("string"==typeof t)return crypto.createHash(algorithm).update(t,"utf8").digest("hex");if(null==t)throw new Error(ERROR);return t.constructor===ArrayBuffer&&(t=new Uint8Array(t)),Array.isArray(t)||ArrayBuffer.isView(t)||t.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(t)).digest("hex"):method(t)};return nodeMethod},createHmacOutputMethod=function(t,e){return function(i,a){return new HmacSha256(i,e,!0).update(a)[t]()}},createHmacMethod=function(t){var e=createHmacOutputMethod("hex",t);e.create=function(e){return new HmacSha256(e,t)},e.update=function(t,i){return e.create(t).update(i)};for(var i=0;i<OUTPUT_TYPES.length;++i){var a=OUTPUT_TYPES[i];e[a]=createHmacOutputMethod(a,t)}return e};function Sha256(t,e){e?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=t}function HmacSha256(t,e,i){var a,o=typeof t;if("string"===o){var n,r=[],s=t.length,l=0;for(a=0;a<s;++a)(n=t.charCodeAt(a))<128?r[l++]=n:n<2048?(r[l++]=192|n>>6,r[l++]=128|63&n):n<55296||n>=57344?(r[l++]=224|n>>12,r[l++]=128|n>>6&63,r[l++]=128|63&n):(n=65536+((1023&n)<<10|1023&t.charCodeAt(++a)),r[l++]=240|n>>18,r[l++]=128|n>>12&63,r[l++]=128|n>>6&63,r[l++]=128|63&n);t=r}else{if("object"!==o)throw new Error(ERROR);if(null===t)throw new Error(ERROR);if(ARRAY_BUFFER&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||ARRAY_BUFFER&&ArrayBuffer.isView(t)))throw new Error(ERROR)}t.length>64&&(t=new Sha256(e,!0).update(t).array());var c=[],d=[];for(a=0;a<64;++a){var u=t[a]||0;c[a]=92^u,d[a]=54^u}Sha256.call(this,e,i),this.update(d),this.oKeyPad=c,this.inner=!0,this.sharedMemory=i}Sha256.prototype.update=function(t){if(!this.finalized){var e,i=typeof t;if("string"!==i){if("object"!==i)throw new Error(ERROR);if(null===t)throw new Error(ERROR);if(ARRAY_BUFFER&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||ARRAY_BUFFER&&ArrayBuffer.isView(t)))throw new Error(ERROR);e=!0}for(var a,o,n=0,r=t.length,s=this.blocks;n<r;){if(this.hashed&&(this.hashed=!1,s[0]=this.block,s[16]=s[1]=s[2]=s[3]=s[4]=s[5]=s[6]=s[7]=s[8]=s[9]=s[10]=s[11]=s[12]=s[13]=s[14]=s[15]=0),e)for(o=this.start;n<r&&o<64;++n)s[o>>2]|=t[n]<<SHIFT[3&o++];else for(o=this.start;n<r&&o<64;++n)(a=t.charCodeAt(n))<128?s[o>>2]|=a<<SHIFT[3&o++]:a<2048?(s[o>>2]|=(192|a>>6)<<SHIFT[3&o++],s[o>>2]|=(128|63&a)<<SHIFT[3&o++]):a<55296||a>=57344?(s[o>>2]|=(224|a>>12)<<SHIFT[3&o++],s[o>>2]|=(128|a>>6&63)<<SHIFT[3&o++],s[o>>2]|=(128|63&a)<<SHIFT[3&o++]):(a=65536+((1023&a)<<10|1023&t.charCodeAt(++n)),s[o>>2]|=(240|a>>18)<<SHIFT[3&o++],s[o>>2]|=(128|a>>12&63)<<SHIFT[3&o++],s[o>>2]|=(128|a>>6&63)<<SHIFT[3&o++],s[o>>2]|=(128|63&a)<<SHIFT[3&o++]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=s[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex;t[16]=this.block,t[e>>2]|=EXTRA[3&e],this.block=t[16],e>=56&&(this.hashed||this.hash(),t[0]=this.block,t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.hBytes<<3|this.bytes>>>29,t[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var t,e,i,a,o,n,r,s,l,c=this.h0,d=this.h1,u=this.h2,g=this.h3,f=this.h4,h=this.h5,_=this.h6,p=this.h7,m=this.blocks;for(t=16;t<64;++t)e=((o=m[t-15])>>>7|o<<25)^(o>>>18|o<<14)^o>>>3,i=((o=m[t-2])>>>17|o<<15)^(o>>>19|o<<13)^o>>>10,m[t]=m[t-16]+e+m[t-7]+i<<0;for(l=d&u,t=0;t<64;t+=4)this.first?(this.is224?(n=300032,p=(o=m[0]-1413257819)-150054599<<0,g=o+24177077<<0):(n=704751109,p=(o=m[0]-210244248)-1521486534<<0,g=o+143694565<<0),this.first=!1):(e=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),a=(n=c&d)^c&u^l,p=g+(o=p+(i=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+(f&h^~f&_)+K[t]+m[t])<<0,g=o+(e+a)<<0),e=(g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10),a=(r=g&c)^g&d^n,_=u+(o=_+(i=(p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(p&f^~p&h)+K[t+1]+m[t+1])<<0,e=((u=o+(e+a)<<0)>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),a=(s=u&g)^u&c^r,h=d+(o=h+(i=(_>>>6|_<<26)^(_>>>11|_<<21)^(_>>>25|_<<7))+(_&p^~_&f)+K[t+2]+m[t+2])<<0,e=((d=o+(e+a)<<0)>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10),a=(l=d&u)^d&g^s,f=c+(o=f+(i=(h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(h&_^~h&p)+K[t+3]+m[t+3])<<0,c=o+(e+a)<<0;this.h0=this.h0+c<<0,this.h1=this.h1+d<<0,this.h2=this.h2+u<<0,this.h3=this.h3+g<<0,this.h4=this.h4+f<<0,this.h5=this.h5+h<<0,this.h6=this.h6+_<<0,this.h7=this.h7+p<<0},Sha256.prototype.hex=function(){this.finalize();var t=this.h0,e=this.h1,i=this.h2,a=this.h3,o=this.h4,n=this.h5,r=this.h6,s=this.h7,l=HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i]+HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r];return this.is224||(l+=HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[15&s]),l},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var t=this.h0,e=this.h1,i=this.h2,a=this.h3,o=this.h4,n=this.h5,r=this.h6,s=this.h7,l=[t>>24&255,t>>16&255,t>>8&255,255&t,e>>24&255,e>>16&255,e>>8&255,255&e,i>>24&255,i>>16&255,i>>8&255,255&i,a>>24&255,a>>16&255,a>>8&255,255&a,o>>24&255,o>>16&255,o>>8&255,255&o,n>>24&255,n>>16&255,n>>8&255,255&n,r>>24&255,r>>16&255,r>>8&255,255&r];return this.is224||l.push(s>>24&255,s>>16&255,s>>8&255,255&s),l},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(this.is224?28:32),e=new DataView(t);return e.setUint32(0,this.h0),e.setUint32(4,this.h1),e.setUint32(8,this.h2),e.setUint32(12,this.h3),e.setUint32(16,this.h4),e.setUint32(20,this.h5),e.setUint32(24,this.h6),this.is224||e.setUint32(28,this.h7),t},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var t=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(t),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224)})()})(sha256$2);var jsSha256=sha256$2.exports;const{stringifyBigInts:stringifyBigInts}=utils,{sha256:sha256$1}=jsSha256;async function plonk16Prove(t,e,i){const{fd:a,sections:o}=await readBinFile(e,"wtns",2),n=await readHeader(a,o),{fd:r,sections:s}=await readBinFile(t,"zkey",2),l=await readHeader$1(r,s);if("plonk"!=l.protocol)throw new Error("zkey file is not plonk");if(!Scalar.eq(l.r,n.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(n.nWitness!=l.nVars-l.nAdditions)throw new Error(`Invalid witness length. Circuit: ${l.nVars}, witness: ${n.nWitness}, ${l.nAdditions}`);const c=l.curve,d=c.Fr,u=c.G1,g=c.Fr.n8;i&&i.debug("Reading Wtns");const f=await readSection(a,o,2);f.set(d.zero,0);const h=new BigBuffer(g*l.nAdditions);let _,p,m,b,L,w,y,A,I,C,B,E,F,S;await async function(){const t=await readSection(r,s,3),e=8+2*c.Fr.n8;for(let i=0;i<l.nAdditions;i++){const a=q(t,i*e),o=q(t,i*e+4),n=t.slice(i*e+8,i*e+8+g),r=t.slice(i*e+8+g,i*e+8+2*g),s=z(a),l=z(o),d=c.Fr.add(c.Fr.mul(n,s),c.Fr.mul(r,l));h.set(d,g*i)}}();let v={};const x=new BigBuffer(l.domainSize*g*4*3);let $=s[12][0].p+l.domainSize*g;await r.readToBuffer(x,0,l.domainSize*g*4,$),$+=l.domainSize*g*5,await r.readToBuffer(x,l.domainSize*g*4,l.domainSize*g*4,$),$+=l.domainSize*g*5,await r.readToBuffer(x,l.domainSize*g*8,l.domainSize*g*4,$);const P=new BigBuffer(l.domainSize*g);await r.readToBuffer(P,0,l.domainSize*g,s[12][0].p);const G=new BigBuffer(l.domainSize*g);await r.readToBuffer(G,0,l.domainSize*g,s[12][0].p+5*l.domainSize*g);const R=await readSection(r,s,14),O={};await async function(){O.b=[];for(let t=1;t<=11;t++)O.b[t]=c.Fr.random();[_,p,m]=await async function(){let t=new BigBuffer(l.domainSize*g),e=new BigBuffer(l.domainSize*g),i=new BigBuffer(l.domainSize*g);const a=await readSection(r,s,4),o=await readSection(r,s,5),n=await readSection(r,s,6);for(let r=0;r<l.nConstrains;r++){const s=q(a,4*r);t.set(z(s),r*g);const l=q(o,4*r);e.set(z(l),r*g);const c=q(n,4*r);i.set(z(c),r*g)}return t=await d.batchToMontgomery(t),e=await d.batchToMontgomery(e),i=await d.batchToMontgomery(i),[t,e,i]}(),[I,L]=await H(_,[O.b[2],O.b[1]]),[C,w]=await H(p,[O.b[4],O.b[3]]),[B,y]=await H(m,[O.b[6],O.b[5]]),v.A=await k(I,"multiexp A"),v.B=await k(C,"multiexp B"),v.C=await k(B,"multiexp C")}(),await async function(){const t=new Uint8Array(l.nPublic*g+2*u.F.n8*3);for(let e=0;e<l.nPublic;e++)d.toRprBE(t,e*g,_.slice(e*g,(e+1)*g));u.toRprUncompressed(t,l.nPublic*g+0,v.A),u.toRprUncompressed(t,l.nPublic*g+2*u.F.n8,v.B),u.toRprUncompressed(t,l.nPublic*g+4*u.F.n8,v.C),O.beta=M(t),i&&i.debug("beta: "+d.toString(O.beta));const e=new Uint8Array(g);d.toRprBE(e,0,O.beta),O.gamma=M(e),i&&i.debug("gamma: "+d.toString(O.gamma));let a=new BigBuffer(d.n8*l.domainSize),o=new BigBuffer(d.n8*l.domainSize);a.set(d.one,0),o.set(d.one,0);let n=d.one;for(let t=0;t<l.domainSize;t++){let e=_.slice(t*g,(t+1)*g);e=d.add(e,d.mul(O.beta,n)),e=d.add(e,O.gamma);let i=p.slice(t*g,(t+1)*g);i=d.add(i,d.mul(l.k1,d.mul(O.beta,n))),i=d.add(i,O.gamma);let r=m.slice(t*g,(t+1)*g);r=d.add(r,d.mul(l.k2,d.mul(O.beta,n))),r=d.add(r,O.gamma);const s=d.mul(e,d.mul(i,r));let c=_.slice(t*g,(t+1)*g);c=d.add(c,d.mul(x.slice(t*g*4,t*g*4+g),O.beta)),c=d.add(c,O.gamma);let u=p.slice(t*g,(t+1)*g);u=d.add(u,d.mul(x.slice(4*(l.domainSize+t)*g,4*(l.domainSize+t)*g+g),O.beta)),u=d.add(u,O.gamma);let f=m.slice(t*g,(t+1)*g);f=d.add(f,d.mul(x.slice(4*(2*l.domainSize+t)*g,4*(2*l.domainSize+t)*g+g),O.beta)),f=d.add(f,O.gamma);const h=d.mul(c,d.mul(u,f));a.set(d.mul(a.slice(t*g,(t+1)*g),s),(t+1)%l.domainSize*g),o.set(d.mul(o.slice(t*g,(t+1)*g),h),(t+1)%l.domainSize*g),n=d.mul(n,d.w[l.power])}o=await d.batchInverse(o);for(let t=0;t<l.domainSize;t++)a.set(d.mul(a.slice(t*g,(t+1)*g),o.slice(t*g,(t+1)*g)),t*g);if(!d.eq(a.slice(0,g),d.one))throw new Error("Copy constraints does not match");b=a,[E,A]=await H(b,[O.b[9],O.b[8],O.b[7]]),v.Z=await k(E,"multiexp Z")}(),await async function(){i&&i.debug("phse3: Reading QM4");const t=new BigBuffer(4*l.domainSize*g);await r.readToBuffer(t,0,l.domainSize*g*4,s[7][0].p+l.domainSize*g),i&&i.debug("phse3: Reading QL4");const e=new BigBuffer(4*l.domainSize*g);await r.readToBuffer(e,0,l.domainSize*g*4,s[8][0].p+l.domainSize*g),i&&i.debug("phse3: Reading QR4");const a=new BigBuffer(4*l.domainSize*g);await r.readToBuffer(a,0,l.domainSize*g*4,s[9][0].p+l.domainSize*g),i&&i.debug("phse3: Reading QO4");const o=new BigBuffer(4*l.domainSize*g);await r.readToBuffer(o,0,l.domainSize*g*4,s[10][0].p+l.domainSize*g),i&&i.debug("phse3: Reading QC4");const n=new BigBuffer(4*l.domainSize*g);await r.readToBuffer(n,0,l.domainSize*g*4,s[11][0].p+l.domainSize*g);const c=await readSection(r,s,13),f=new Uint8Array(2*u.F.n8);u.toRprUncompressed(f,0,v.Z),O.alpha=M(f),i&&i.debug("alpha: "+d.toString(O.alpha));const h=[d.zero,d.add(d.e(-1),d.w[2]),d.e(-2),d.sub(d.e(-1),d.w[2])],p=[d.zero,d.add(d.zero,d.mul(d.e(-2),d.w[2])),d.e(4),d.sub(d.zero,d.mul(d.e(-2),d.w[2]))],m=[d.zero,d.add(d.e(2),d.mul(d.e(2),d.w[2])),d.e(-8),d.sub(d.e(2),d.mul(d.e(2),d.w[2]))],b=new BigBuffer(4*l.domainSize*g),I=new BigBuffer(4*l.domainSize*g);let C=d.one;for(let r=0;r<4*l.domainSize;r++){r%4096==0&&i&&i.debug(`calculating t ${r}/${4*l.domainSize}`);const s=L.slice(r*g,r*g+g),u=w.slice(r*g,r*g+g),f=y.slice(r*g,r*g+g),h=A.slice(r*g,r*g+g),p=A.slice((r+4*l.domainSize+4)%(4*l.domainSize)*g,(r+4*l.domainSize+4)%(4*l.domainSize)*g+g),m=t.slice(r*g,r*g+g),B=e.slice(r*g,r*g+g),E=a.slice(r*g,r*g+g),F=o.slice(r*g,r*g+g),S=n.slice(r*g,r*g+g),v=x.slice(r*g,r*g+g),$=x.slice((r+4*l.domainSize)*g,(r+4*l.domainSize)*g+g),P=x.slice((r+8*l.domainSize)*g,(r+8*l.domainSize)*g+g),G=d.add(O.b[2],d.mul(O.b[1],C)),R=d.add(O.b[4],d.mul(O.b[3],C)),z=d.add(O.b[6],d.mul(O.b[5],C)),M=d.square(C),T=d.add(d.add(d.mul(O.b[7],M),d.mul(O.b[8],C)),O.b[9]),Q=d.mul(C,d.w[l.power]),k=d.square(Q),H=d.add(d.add(d.mul(O.b[7],k),d.mul(O.b[8],Q)),O.b[9]);let N=d.zero;for(let t=0;t<l.nPublic;t++)N=d.sub(N,d.mul(c.slice((5*t*l.domainSize+l.domainSize+r)*g,(5*t*l.domainSize+l.domainSize+r+1)*g),_.slice(t*g,(t+1)*g)));let[D,K]=U(s,u,G,R,r%4);D=d.mul(D,m),K=d.mul(K,m),D=d.add(D,d.mul(s,B)),K=d.add(K,d.mul(G,B)),D=d.add(D,d.mul(u,E)),K=d.add(K,d.mul(R,E)),D=d.add(D,d.mul(f,F)),K=d.add(K,d.mul(z,F)),D=d.add(D,N),D=d.add(D,S);const V=d.mul(O.beta,C);let j=s;j=d.add(j,V),j=d.add(j,O.gamma);let W=u;W=d.add(W,d.mul(V,l.k1)),W=d.add(W,O.gamma);let Z=f;Z=d.add(Z,d.mul(V,l.k2)),Z=d.add(Z,O.gamma);let Y=h,[J,X]=q(j,W,Z,Y,G,R,z,T,r%4);J=d.mul(J,O.alpha),X=d.mul(X,O.alpha);let tt=s;tt=d.add(tt,d.mul(O.beta,v)),tt=d.add(tt,O.gamma);let et=u;et=d.add(et,d.mul(O.beta,$)),et=d.add(et,O.gamma);let it=f;it=d.add(it,d.mul(O.beta,P)),it=d.add(it,O.gamma);let at=p,[ot,nt]=q(tt,et,it,at,G,R,z,H,r%4);ot=d.mul(ot,O.alpha),nt=d.mul(nt,O.alpha);let rt=d.sub(h,d.one);rt=d.mul(rt,c.slice((l.domainSize+r)*g,(l.domainSize+r+1)*g)),rt=d.mul(rt,d.mul(O.alpha,O.alpha));let st=d.mul(T,c.slice((l.domainSize+r)*g,(l.domainSize+r+1)*g));st=d.mul(st,d.mul(O.alpha,O.alpha));let lt=d.add(d.sub(d.add(D,J),ot),rt),ct=d.add(d.sub(d.add(K,X),nt),st);b.set(lt,r*g),I.set(ct,r*g),C=d.mul(C,d.w[l.power+2])}i&&i.debug("ifft T");let B=await d.ifft(b);i&&i.debug("dividing T/Z");for(let t=0;t<l.domainSize;t++)B.set(d.neg(B.slice(t*g,t*g+g)),t*g);for(let t=l.domainSize;t<4*l.domainSize;t++){const e=d.sub(B.slice((t-l.domainSize)*g,(t-l.domainSize)*g+g),B.slice(t*g,t*g+g));if(B.set(e,t*g),t>3*l.domainSize-4&&!d.isZero(e))throw new Error("T Polynomial is not divisible")}i&&i.debug("ifft Tz");const E=await d.ifft(I);for(let t=0;t<4*l.domainSize;t++){const e=E.slice(t*g,(t+1)*g);if(t>3*l.domainSize+5){if(!d.isZero(e))throw new Error("Tz Polynomial is not well calculated")}else B.set(d.add(B.slice(t*g,(t+1)*g),e),t*g)}F=B.slice(0,(3*l.domainSize+6)*g);let S=new BigBuffer((l.domainSize+1)*g);S.set(B.slice(0,l.domainSize*g),0),S.set(O.b[10],l.domainSize*g);let $=new BigBuffer((l.domainSize+1)*g);$.set(B.slice(l.domainSize*g,2*l.domainSize*g),0);const P=d.sub($.slice(0,g),O.b[10]);$.set(P,0),$.set(O.b[11],l.domainSize*g);let G=new BigBuffer((l.domainSize+6)*g);G.set(B.slice(2*l.domainSize*g,(3*l.domainSize+6)*g),0);const R=d.sub(G.slice(0,g),O.b[11]);function U(t,e,i,a,o){let n,r;const s=d.mul(t,e),l=d.mul(t,a),c=d.mul(i,e);n=s;let u=d.mul(i,a);return r=d.add(l,c),o&&(r=d.add(r,d.mul(h[o],u))),[n,r]}function q(t,e,i,a,o,n,r,s,l){let c,u;const g=d.mul(t,e),f=d.mul(t,n),_=d.mul(o,e),b=d.mul(o,n),L=d.mul(i,a),w=d.mul(i,s),y=d.mul(r,a),A=d.mul(r,s);c=d.mul(g,L);let I=d.mul(_,L);I=d.add(I,d.mul(f,L)),I=d.add(I,d.mul(g,y)),I=d.add(I,d.mul(g,w));let C=d.mul(b,L);C=d.add(C,d.mul(_,y)),C=d.add(C,d.mul(_,w)),C=d.add(C,d.mul(f,y)),C=d.add(C,d.mul(f,w)),C=d.add(C,d.mul(g,A));let B=d.mul(f,A);B=d.add(B,d.mul(_,A)),B=d.add(B,d.mul(b,w)),B=d.add(B,d.mul(b,y));let E=d.mul(b,A);return u=I,l&&(u=d.add(u,d.mul(h[l],C)),u=d.add(u,d.mul(p[l],B)),u=d.add(u,d.mul(m[l],E))),[c,u]}G.set(R,0),v.T1=await k(S,"multiexp T1"),v.T2=await k($,"multiexp T2"),v.T3=await k(G,"multiexp T3")}(),await async function(){const t=new BigBuffer(l.domainSize*g);await r.readToBuffer(t,0,l.domainSize*g,s[7][0].p);const e=new BigBuffer(l.domainSize*g);await r.readToBuffer(e,0,l.domainSize*g,s[8][0].p);const a=new BigBuffer(l.domainSize*g);await r.readToBuffer(a,0,l.domainSize*g,s[9][0].p);const o=new BigBuffer(l.domainSize*g);await r.readToBuffer(o,0,l.domainSize*g,s[10][0].p);const n=new BigBuffer(l.domainSize*g);await r.readToBuffer(n,0,l.domainSize*g,s[11][0].p);const c=new BigBuffer(l.domainSize*g);await r.readToBuffer(c,0,l.domainSize*g,s[12][0].p+10*l.domainSize*g);const f=new Uint8Array(2*u.F.n8*3);u.toRprUncompressed(f,0,v.T1),u.toRprUncompressed(f,2*u.F.n8,v.T2),u.toRprUncompressed(f,4*u.F.n8,v.T3),O.xi=M(f),i&&i.debug("xi: "+d.toString(O.xi));v.eval_a=T(I,O.xi),v.eval_b=T(C,O.xi),v.eval_c=T(B,O.xi),v.eval_s1=T(P,O.xi),v.eval_s2=T(G,O.xi),v.eval_t=T(F,O.xi),v.eval_zw=T(E,d.mul(O.xi,d.w[l.power]));const h=d.mul(v.eval_a,v.eval_b);let _=v.eval_a;const p=d.mul(O.beta,O.xi);_=d.add(_,p),_=d.add(_,O.gamma);let m=v.eval_b;m=d.add(m,d.mul(p,l.k1)),m=d.add(m,O.gamma);let b=v.eval_c;b=d.add(b,d.mul(p,l.k2)),b=d.add(b,O.gamma);const L=d.mul(d.mul(d.mul(_,m),b),O.alpha);let w=v.eval_a;w=d.add(w,d.mul(O.beta,v.eval_s1)),w=d.add(w,O.gamma);let y=v.eval_b;y=d.add(y,d.mul(O.beta,v.eval_s2)),y=d.add(y,O.gamma);let A=d.mul(w,y);A=d.mul(A,O.beta),A=d.mul(A,v.eval_zw),A=d.mul(A,O.alpha),O.xim=O.xi;for(let t=0;t<l.power;t++)O.xim=d.mul(O.xim,O.xim);const x=d.div(d.sub(O.xim,d.one),d.mul(d.sub(O.xi,d.one),d.e(l.domainSize))),$=d.mul(x,d.mul(O.alpha,O.alpha)),R=A,U=d.add(L,$);S=new BigBuffer((l.domainSize+3)*g);for(let i=0;i<l.domainSize+3;i++){let r=d.mul(U,E.slice(i*g,(i+1)*g));i<l.domainSize&&(r=d.add(r,d.mul(h,t.slice(i*g,(i+1)*g))),r=d.add(r,d.mul(v.eval_a,e.slice(i*g,(i+1)*g))),r=d.add(r,d.mul(v.eval_b,a.slice(i*g,(i+1)*g))),r=d.add(r,d.mul(v.eval_c,o.slice(i*g,(i+1)*g))),r=d.add(r,n.slice(i*g,(i+1)*g)),r=d.sub(r,d.mul(R,c.slice(i*g,(i+1)*g)))),S.set(r,i*g)}v.eval_r=T(S,O.xi)}(),await async function(){const t=new Uint8Array(7*g);d.toRprBE(t,0,v.eval_a),d.toRprBE(t,g,v.eval_b),d.toRprBE(t,2*g,v.eval_c),d.toRprBE(t,3*g,v.eval_s1),d.toRprBE(t,4*g,v.eval_s2),d.toRprBE(t,5*g,v.eval_zw),d.toRprBE(t,6*g,v.eval_r),O.v=[],O.v[1]=M(t),i&&i.debug("v: "+d.toString(O.v[1]));for(let t=2;t<=6;t++)O.v[t]=d.mul(O.v[t-1],O.v[1]);let e=new BigBuffer((l.domainSize+6)*g);const a=d.mul(O.xim,O.xim);for(let t=0;t<l.domainSize+6;t++){let i=d.zero;const o=F.slice((2*l.domainSize+t)*g,(2*l.domainSize+t+1)*g);if(i=d.add(i,d.mul(a,o)),t<l.domainSize+3&&(i=d.add(i,d.mul(O.v[1],S.slice(t*g,(t+1)*g)))),t<l.domainSize+2&&(i=d.add(i,d.mul(O.v[2],I.slice(t*g,(t+1)*g))),i=d.add(i,d.mul(O.v[3],C.slice(t*g,(t+1)*g))),i=d.add(i,d.mul(O.v[4],B.slice(t*g,(t+1)*g)))),t<l.domainSize){const e=F.slice(t*g,(t+1)*g);i=d.add(i,e);const a=F.slice((l.domainSize+t)*g,(l.domainSize+t+1)*g);i=d.add(i,d.mul(O.xim,a)),i=d.add(i,d.mul(O.v[5],P.slice(t*g,(t+1)*g))),i=d.add(i,d.mul(O.v[6],G.slice(t*g,(t+1)*g)))}0===t&&(i=d.sub(i,d.mul(a,O.b[11])),i=d.sub(i,d.mul(O.xim,O.b[10]))),t===l.domainSize&&(i=d.add(i,O.b[10]),i=d.add(i,d.mul(O.xim,O.b[11]))),e.set(i,t*g)}let o=e.slice(0,g);o=d.sub(o,v.eval_t),o=d.sub(o,d.mul(O.v[1],v.eval_r)),o=d.sub(o,d.mul(O.v[2],v.eval_a)),o=d.sub(o,d.mul(O.v[3],v.eval_b)),o=d.sub(o,d.mul(O.v[4],v.eval_c)),o=d.sub(o,d.mul(O.v[5],v.eval_s1)),o=d.sub(o,d.mul(O.v[6],v.eval_s2)),e.set(o,0),e=Q(e,O.xi),v.Wxi=await k(e,"multiexp Wxi");let n=new BigBuffer((l.domainSize+3)*g);for(let t=0;t<l.domainSize+3;t++){const e=E.slice(t*g,(t+1)*g);n.set(e,t*g)}o=n.slice(0,g),o=d.sub(o,v.eval_zw),n.set(o,0),n=Q(n,d.mul(O.xi,d.w[l.power])),v.Wxiw=await k(n,"multiexp Wxiw")}(),v.protocol="plonk",v.curve=c.name,await r.close(),await a.close();let U=[];for(let t=1;t<=l.nPublic;t++){const e=f.slice(t*d.n8,t*d.n8+d.n8);U.push(Scalar.fromRprLE(e))}return v.A=u.toObject(v.A),v.B=u.toObject(v.B),v.C=u.toObject(v.C),v.Z=u.toObject(v.Z),v.T1=u.toObject(v.T1),v.T2=u.toObject(v.T2),v.T3=u.toObject(v.T3),v.eval_a=d.toObject(v.eval_a),v.eval_b=d.toObject(v.eval_b),v.eval_c=d.toObject(v.eval_c),v.eval_s1=d.toObject(v.eval_s1),v.eval_s2=d.toObject(v.eval_s2),v.eval_zw=d.toObject(v.eval_zw),v.eval_t=d.toObject(v.eval_t),v.eval_r=d.toObject(v.eval_r),v.Wxi=u.toObject(v.Wxi),v.Wxiw=u.toObject(v.Wxiw),delete v.eval_t,v=stringifyBigInts(v),U=stringifyBigInts(U),{proof:v,publicSignals:U};function q(t,e){const i=t.slice(e,e+4);return new DataView(i.buffer,i.byteOffset,i.byteLength).getUint32(0,!0)}function z(t){return t<l.nVars-l.nAdditions?f.slice(t*g,t*g+g):t<l.nVars?h.slice((t-(l.nVars-l.nAdditions))*g,(t-(l.nVars-l.nAdditions))*g+g):c.Fr.zero}function M(t){const e=Scalar.fromRprBE(new Uint8Array(sha256$1.arrayBuffer(t)));return d.e(e)}function T(t,e){const i=t.byteLength/g;if(0==i)return d.zero;let a=t.slice((i-1)*g,i*g);for(let o=i-2;o>=0;o--)a=d.add(d.mul(a,e),t.slice(o*g,(o+1)*g));return a}function Q(t,e){const i=t.byteLength/g,a=new BigBuffer(i*g);a.set(d.zero,(i-1)*g),a.set(t.slice((i-1)*g,i*g),(i-2)*g);for(let o=i-3;o>=0;o--)a.set(d.add(t.slice((o+1)*g,(o+2)*g),d.mul(e,a.slice((o+1)*g,(o+2)*g))),o*g);if(!d.eq(t.slice(0,g),d.mul(d.neg(e),a.slice(0,g))))throw new Error("Polinomial does not divide");return a}async function k(t,e){const a=t.byteLength/g,o=R.slice(0,a*c.G1.F.n8*2),n=await c.Fr.batchFromMontgomery(t);let r=await c.G1.multiExpAffine(o,n,i,e);return r=c.G1.toAffine(r),r}async function H(t,e){e=e||[];let i=await d.ifft(t);const a=new BigBuffer(g*l.domainSize*4);a.set(i,0);const o=new BigBuffer(g*(l.domainSize+e.length));o.set(i,0);for(let t=0;t<e.length;t++)o.set(d.add(o.slice((l.domainSize+t)*g,(l.domainSize+t+1)*g),e[t]),(l.domainSize+t)*g),o.set(d.sub(o.slice(t*g,(t+1)*g),e[t]),t*g);return[o,await d.fft(a)]}}const{unstringifyBigInts:unstringifyBigInts$2}=utils;async function plonkFullProve(t,e,i,a){const o=unstringifyBigInts$2(t),n={type:"mem"};return await wtnsCalculate(o,e,n),await plonk16Prove(i,n,a)}const{unstringifyBigInts:unstringifyBigInts$1}=utils,{sha256:sha256}=jsSha256;async function plonkVerify(t,e,i,a){let o=unstringifyBigInts$1(t),n=unstringifyBigInts$1(i),r=unstringifyBigInts$1(e);const s=await getCurveFromName(o.curve),l=s.Fr,c=s.G1;if(n=fromObjectProof(s,n),o=fromObjectVk(s,o),!isWellConstructed(s,n))return a.error("Proof is not well constructed"),!1;if(r.length!=o.nPublic)return a.error("Invalid number of public inputs"),!1;const d=calculateChallanges(s,n,r);a&&(a.debug("beta: "+l.toString(d.beta,16)),a.debug("gamma: "+l.toString(d.gamma,16)),a.debug("alpha: "+l.toString(d.alpha,16)),a.debug("xi: "+l.toString(d.xi,16)),a.debug("v1: "+l.toString(d.v[1],16)),a.debug("v6: "+l.toString(d.v[6],16)),a.debug("u: "+l.toString(d.u,16)));const u=calculateLagrangeEvaluations(s,d,o);if(a){a.debug("Lagrange Evaluations: ");for(let t=1;t<u.length;t++)a.debug(`L${t}(xi)=`+l.toString(u[t],16))}if(r.length!=o.nPublic)return a.error("Number of public signals does not match with vk"),!1;const g=calculatePl(s,r,u);a&&a.debug("Pl: "+l.toString(g,16));const f=calculateT(s,n,d,g,u[1]);a&&a.debug("t: "+l.toString(f,16));const h=calculateD(s,n,d,o,u[1]);a&&a.debug("D: "+c.toString(c.toAffine(h),16));const _=calculateF(s,n,d,o,h);a&&a.debug("F: "+c.toString(c.toAffine(_),16));const p=calculateE(s,n,d,o,f);a&&a.debug("E: "+c.toString(c.toAffine(p),16));const m=await isValidPairing(s,n,d,o,p,_);return a&&(m?a.info("OK!"):a.warn("Invalid Proof")),m}function fromObjectProof(t,e){const i=t.G1,a=t.Fr,o={};return o.A=i.fromObject(e.A),o.B=i.fromObject(e.B),o.C=i.fromObject(e.C),o.Z=i.fromObject(e.Z),o.T1=i.fromObject(e.T1),o.T2=i.fromObject(e.T2),o.T3=i.fromObject(e.T3),o.eval_a=a.fromObject(e.eval_a),o.eval_b=a.fromObject(e.eval_b),o.eval_c=a.fromObject(e.eval_c),o.eval_zw=a.fromObject(e.eval_zw),o.eval_s1=a.fromObject(e.eval_s1),o.eval_s2=a.fromObject(e.eval_s2),o.eval_r=a.fromObject(e.eval_r),o.Wxi=i.fromObject(e.Wxi),o.Wxiw=i.fromObject(e.Wxiw),o}function fromObjectVk(t,e){const i=t.G1,a=t.G2,o=t.Fr,n=e;return n.Qm=i.fromObject(e.Qm),n.Ql=i.fromObject(e.Ql),n.Qr=i.fromObject(e.Qr),n.Qo=i.fromObject(e.Qo),n.Qc=i.fromObject(e.Qc),n.S1=i.fromObject(e.S1),n.S2=i.fromObject(e.S2),n.S3=i.fromObject(e.S3),n.k1=o.fromObject(e.k1),n.k2=o.fromObject(e.k2),n.X_2=a.fromObject(e.X_2),n}function isWellConstructed(t,e){const i=t.G1;return!!i.isValid(e.A)&&(!!i.isValid(e.B)&&(!!i.isValid(e.C)&&(!!i.isValid(e.Z)&&(!!i.isValid(e.T1)&&(!!i.isValid(e.T2)&&(!!i.isValid(e.T3)&&(!!i.isValid(e.Wxi)&&!!i.isValid(e.Wxiw))))))))}function calculateChallanges(t,e,i){const a=t.G1,o=t.Fr,n=t.Fr.n8,r={},s=new Uint8Array(i.length*n+2*a.F.n8*3);for(let t=0;t<i.length;t++)o.toRprBE(s,t*n,o.e(i[t]));a.toRprUncompressed(s,i.length*n+0,e.A),a.toRprUncompressed(s,i.length*n+2*a.F.n8,e.B),a.toRprUncompressed(s,i.length*n+4*a.F.n8,e.C),r.beta=hashToFr(t,s);const l=new Uint8Array(n);o.toRprBE(l,0,r.beta),r.gamma=hashToFr(t,l);const c=new Uint8Array(2*a.F.n8);a.toRprUncompressed(c,0,e.Z),r.alpha=hashToFr(t,c);const d=new Uint8Array(2*a.F.n8*3);a.toRprUncompressed(d,0,e.T1),a.toRprUncompressed(d,2*a.F.n8,e.T2),a.toRprUncompressed(d,4*a.F.n8,e.T3),r.xi=hashToFr(t,d);const u=new Uint8Array(7*n);o.toRprBE(u,0,e.eval_a),o.toRprBE(u,n,e.eval_b),o.toRprBE(u,2*n,e.eval_c),o.toRprBE(u,3*n,e.eval_s1),o.toRprBE(u,4*n,e.eval_s2),o.toRprBE(u,5*n,e.eval_zw),o.toRprBE(u,6*n,e.eval_r),r.v=[],r.v[1]=hashToFr(t,u);for(let t=2;t<=6;t++)r.v[t]=o.mul(r.v[t-1],r.v[1]);const g=new Uint8Array(2*a.F.n8*2);return a.toRprUncompressed(g,0,e.Wxi),a.toRprUncompressed(g,2*a.F.n8,e.Wxiw),r.u=hashToFr(t,g),r}function calculateLagrangeEvaluations(t,e,i){const a=t.Fr;let o=e.xi,n=1;for(let t=0;t<i.power;t++)o=a.square(o),n*=2;e.xin=o,e.zh=a.sub(o,a.one);const r=[],s=a.e(n);let l=a.one;for(let t=1;t<=Math.max(1,i.nPublic);t++)r[t]=a.div(a.mul(l,e.zh),a.mul(s,a.sub(e.xi,l))),l=a.mul(l,a.w[i.power]);return r}function hashToFr(t,e){const i=Scalar.fromRprBE(new Uint8Array(sha256.arrayBuffer(e)));return t.Fr.e(i)}function calculatePl(t,e,i){const a=t.Fr;let o=a.zero;for(let t=0;t<e.length;t++){const n=a.e(e[t]);o=a.sub(o,a.mul(n,i[t+1]))}return o}function calculateT(t,e,i,a,o){const n=t.Fr;let r=e.eval_r;r=n.add(r,a);let s=e.eval_a;s=n.add(s,n.mul(i.beta,e.eval_s1)),s=n.add(s,i.gamma);let l=e.eval_b;l=n.add(l,n.mul(i.beta,e.eval_s2)),l=n.add(l,i.gamma);let c=e.eval_c;c=n.add(c,i.gamma);let d=n.mul(n.mul(s,l),c);d=n.mul(d,e.eval_zw),d=n.mul(d,i.alpha),r=n.sub(r,d),r=n.sub(r,n.mul(o,n.square(i.alpha)));return n.div(r,i.zh)}function calculateD(t,e,i,a,o){const n=t.G1,r=t.Fr;let s=r.mul(r.mul(e.eval_a,e.eval_b),i.v[1]),l=n.timesFr(a.Qm,s),c=r.mul(e.eval_a,i.v[1]);l=n.add(l,n.timesFr(a.Ql,c));let d=r.mul(e.eval_b,i.v[1]);l=n.add(l,n.timesFr(a.Qr,d));let u=r.mul(e.eval_c,i.v[1]);l=n.add(l,n.timesFr(a.Qo,u)),l=n.add(l,n.timesFr(a.Qc,i.v[1]));const g=r.mul(i.beta,i.xi);let f=e.eval_a;f=r.add(f,g),f=r.add(f,i.gamma);let h=e.eval_b;h=r.add(h,r.mul(g,a.k1)),h=r.add(h,i.gamma);let _=e.eval_c;_=r.add(_,r.mul(g,a.k2)),_=r.add(_,i.gamma);let p=r.mul(r.mul(f,h),_);p=r.mul(p,r.mul(i.alpha,i.v[1]));let m=r.mul(r.mul(o,r.square(i.alpha)),i.v[1]);p=r.add(p,m),p=r.add(p,i.u),l=n.add(l,n.timesFr(e.Z,p));let b=e.eval_a;b=r.add(b,r.mul(i.beta,e.eval_s1)),b=r.add(b,i.gamma);let L=e.eval_b;L=r.add(L,r.mul(i.beta,e.eval_s2)),L=r.add(L,i.gamma);let w=r.mul(b,L);return w=r.mul(w,i.alpha),w=r.mul(w,i.v[1]),w=r.mul(w,i.beta),w=r.mul(w,e.eval_zw),l=n.sub(l,n.timesFr(a.S3,w)),l}function calculateF(t,e,i,a,o){const n=t.G1,r=t.Fr;let s=e.T1;return s=n.add(s,n.timesFr(e.T2,i.xin)),s=n.add(s,n.timesFr(e.T3,r.square(i.xin))),s=n.add(s,o),s=n.add(s,n.timesFr(e.A,i.v[2])),s=n.add(s,n.timesFr(e.B,i.v[3])),s=n.add(s,n.timesFr(e.C,i.v[4])),s=n.add(s,n.timesFr(a.S1,i.v[5])),s=n.add(s,n.timesFr(a.S2,i.v[6])),s}function calculateE(t,e,i,a,o){const n=t.G1,r=t.Fr;let s=o;s=r.add(s,r.mul(i.v[1],e.eval_r)),s=r.add(s,r.mul(i.v[2],e.eval_a)),s=r.add(s,r.mul(i.v[3],e.eval_b)),s=r.add(s,r.mul(i.v[4],e.eval_c)),s=r.add(s,r.mul(i.v[5],e.eval_s1)),s=r.add(s,r.mul(i.v[6],e.eval_s2)),s=r.add(s,r.mul(i.u,e.eval_zw));return n.timesFr(n.one,s)}async function isValidPairing(t,e,i,a,o,n){const r=t.G1,s=t.Fr;let l=e.Wxi;l=r.add(l,r.timesFr(e.Wxiw,i.u));let c=r.timesFr(e.Wxi,i.xi);const d=s.mul(s.mul(i.u,i.xi),s.w[a.power]);c=r.add(c,r.timesFr(e.Wxiw,d)),c=r.add(c,n),c=r.sub(c,o);return await t.pairingEq(r.neg(l),a.X_2,c,t.G2.one)}const{unstringifyBigInts:unstringifyBigInts}=utils;function i2hex(t){return("0"+t.toString(16)).slice(-2)}function p256(t){let e=t.toString(16);for(;e.length<64;)e="0"+e;return e=`"0x${e}"`,e}async function plonkExportSolidityCallData(t,e){const i=unstringifyBigInts(t),a=unstringifyBigInts(e),o=await getCurveFromName(i.curve),n=o.G1,r=o.Fr;let s="";for(let t=0;t<a.length;t++)""!=s&&(s+=","),s+=p256(a[t]);const l=new Uint8Array(2*n.F.n8*9+7*r.n8);n.toRprUncompressed(l,0,n.e(i.A)),n.toRprUncompressed(l,2*n.F.n8,n.e(i.B)),n.toRprUncompressed(l,4*n.F.n8,n.e(i.C)),n.toRprUncompressed(l,6*n.F.n8,n.e(i.Z)),n.toRprUncompressed(l,8*n.F.n8,n.e(i.T1)),n.toRprUncompressed(l,10*n.F.n8,n.e(i.T2)),n.toRprUncompressed(l,12*n.F.n8,n.e(i.T3)),n.toRprUncompressed(l,14*n.F.n8,n.e(i.Wxi)),n.toRprUncompressed(l,16*n.F.n8,n.e(i.Wxiw)),r.toRprBE(l,18*n.F.n8,r.e(i.eval_a)),r.toRprBE(l,18*n.F.n8+r.n8,r.e(i.eval_b)),r.toRprBE(l,18*n.F.n8+2*r.n8,r.e(i.eval_c)),r.toRprBE(l,18*n.F.n8+3*r.n8,r.e(i.eval_s1)),r.toRprBE(l,18*n.F.n8+4*r.n8,r.e(i.eval_s2)),r.toRprBE(l,18*n.F.n8+5*r.n8,r.e(i.eval_zw)),r.toRprBE(l,18*n.F.n8+6*r.n8,r.e(i.eval_r));return"0x"+Array.from(l).map(i2hex).join("")+",["+s+"]"}var plonk=Object.freeze({__proto__:null,setup:plonkSetup,fullProve:plonkFullProve,prove:plonk16Prove,verify:plonkVerify,exportSolidityCallData:plonkExportSolidityCallData});return exports.groth16=groth16,exports.plonk=plonk,exports.powersOfTau=powersoftau,exports.r1cs=r1cs,exports.wtns=wtns,exports.zKey=zkey,Object.defineProperty(exports,"__esModule",{value:!0}),exports}({});
